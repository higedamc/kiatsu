platform :ios, '15.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

def flutter_install_ios_plugin_pods(ios_application_path = nil)
  ios_application_path ||= File.dirname(defined_in_file.realpath) if self.respond_to?(:defined_in_file)
  raise 'Could not find iOS application path' unless ios_application_path

  symlink_dir = File.expand_path('.symlinks', ios_application_path)
  system('rm', '-rf', symlink_dir) # Avoid the complication of dependencies like FileUtils.

  symlink_plugins_dir = File.expand_path('plugins', symlink_dir)
  system('mkdir', '-p', symlink_plugins_dir)

  plugins_file = File.join(ios_application_path, '..', '.flutter-plugins-dependencies')
  plugin_pods = flutter_parse_plugins_file(plugins_file)
  plugin_pods.each do |plugin_hash|
    plugin_name = plugin_hash['name']
    plugin_path = plugin_hash['path']
    if (plugin_name && plugin_path)
      symlink = File.join(symlink_plugins_dir, plugin_name)
      File.symlink(plugin_path, symlink)

      if plugin_name == 'flutter_ffmpeg'
          pod 'flutter_ffmpeg/full-lts', :path => File.join('.symlinks', 'plugins', plugin_name, 'ios')
      else
          pod plugin_name, :path => File.join('.symlinks', 'plugins', plugin_name, 'ios')
      end
    end
  end
end

target 'Runner' do
  use_frameworks!
  use_modular_headers!
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
        # Here are some configurations automatically generated by flutter
        #参考URL: https://nobushiueshi.com/flutterflutter2%E7%B3%BB%E3%81%A7%E3%81%AE%E6%A8%A9%E9%99%90permission%E3%81%AE%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E6%96%B9%E6%B3%95/
        # You can enable the permissions needed here. For example to enable camera
        # permission, just remove the `#` character in front so it looks like this:
        #
        # ## dart: PermissionGroup.camera
        # 'PERMISSION_CAMERA=1'
        #
        #  Preprocessor definitions can be found in: https://github.com/Baseflow/flutter-permission-handler/blob/master/permission_handler/ios/Classes/PermissionHandlerEnums.h
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
          '$(inherited)',
  
          ## dart: PermissionGroup.calendar
          # 'PERMISSION_EVENTS=1',
  
          ## dart: PermissionGroup.reminders
          # 'PERMISSION_REMINDERS=1',
  
          ## dart: PermissionGroup.contacts
          # 'PERMISSION_CONTACTS=1',
  
          ## dart: PermissionGroup.camera
          # 'PERMISSION_CAMERA=1',
  
          ## dart: PermissionGroup.microphone
          # 'PERMISSION_MICROPHONE=1',
  
          ## dart: PermissionGroup.speech
          # 'PERMISSION_SPEECH_RECOGNIZER=1',
  
          ## dart: PermissionGroup.photos
          # 'PERMISSION_PHOTOS=1',
  
          ## dart: [PermissionGroup.location, PermissionGroup.locationAlways, PermissionGroup.locationWhenInUse]
          'PERMISSION_LOCATION=1',
  
          ## dart: PermissionGroup.notification
          # 'PERMISSION_NOTIFICATIONS=1',
  
          ## dart: PermissionGroup.mediaLibrary
          # 'PERMISSION_MEDIA_LIBRARY=1',
  
          ## dart: PermissionGroup.sensors
          # 'PERMISSION_SENSORS=1',
  
          ## dart: PermissionGroup.bluetooth
          # 'PERMISSION_BLUETOOTH=1',
  
          ## dart: PermissionGroup.appTrackingTransparency
          # 'PERMISSION_APP_TRACKING_TRANSPARENCY=1',
  
          ## dart: PermissionGroup.criticalAlerts
          # 'PERMISSION_CRITICAL_ALERTS=1'
        ]
    end
  end
end