# Automatically generated on 2022-01-24 UTC from https://codemagic.io/app/609f571800a2d305209fe46d/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  default-workflow:
    name: Default Workflow
    max_build_duration: 60
    environment:
      vars:
        ANDROID_FIREBASE_SECRET: Encrypted(Z0FBQUFBQmg3ckJnQlZHQXFjejFoY0pJVEpkN0Y5MUdfeF9wVHNtN25USG9Nc3l2ZG90ZV9Sc2hfV1B0Nndxb3lFY2o4TVgyYVlMVk9DZElsalhDb2FocW9YUHBleHNXX0s1NzU0S2tSYmlnTGJEa2xRN2k2SlpCQkFicVNudWdDWGwydXEweUxKSy1PcEk1bW5xc2tFMXREMWNRc0p6ZWczQjdNX2NrTkZabEFlM0k3R0tUbHR6b0NjcUVOdzl2NDA4bDBjVFA2UjlyLWtmZ0VFQnhncy15ZDRRZ042eVEtV1RQSnhPNUVMVG9ISG10blNYR2k3NWNQM3pEcHRGYm5raFdtbmk0a21JLXBGYkdGc0xMTE5BYWxVV2Z3Wjh4VGJEdkxxcWNmRUpEOEFBV29vaXdRQ3BPS0phUzdUVERHcURKQWwtMC02VnNfdjlXdTd5N0l5QmdBck1UcXZfazhKSzk2Y1FaS0MzTXp0dVJjeWRnclhPS0dadktGSnFkdElpUzktVVIzbWVBU2lRQXR6cUJjbVZjSWdHU2FFMmdlWmwwUHlXSDE5SzJvRWp1U0E1dEtfZ2tkdXNuT0pBVzhPRzVzSGVaXzl2blllNFpXMXRZQXZPdVFZaXVrX0xSaXByTXZoQTFDMmxvakJ1ZlhnRkJTSkR6TkZOaS1hNjhNYk9Sc2NQYXdydXZrLTFBam1pbEtOTEpxS0dtNVotTXdQblQyVHhlS2U3Q2N6NS1ST0JlbFl6UGhYLVNDTGpSRUNvcUM5bW01V0ZJcUlaU092OHVTRGpZbHZsRE5yZU1mbHBjLVNxbG9xZ1RMQVQ3X0FuRWFQNFAxSTlQZUdmZm44aC1wRUoyWUF4VUtENVdkWFM4VkxISUxRMUt4MDZZS3VhTjF3TnJSS29sVnNuRHZIcE9wVU42MmtnNGEtdWx3X3E4Y0xNYnJwbFc2d0E1R3BZMGpRMWd2QVZxTUh0dDd4eTNhWjIyV3hfLUtCb2s0REJuN3ZCWHpWTmp6ZkVlaTZzUkVpM2U5ZnEwRk1ySS1vMUFNUkV0bmNqazZfcFFUMF9NY2x6c1Y0STBTUkVkMEJxWVM0eUNkTEkwd01tUldPeVpqVTVJcnFqVVRPZ25URzVCMzlxdTlyX2Y2blU5LTN3aDV0RVNrQWw0OUhiZWRkUEItRmtIeUNVODFNdmpYQks2OTdCVVNpZmoyZ0kyeFZUZFhZWHlsazVIUFNBa0poaDBhRm1PSmJlTUtGamM2SHVNa1JwTTdFMWZ5a3ZRMVJNQUIyeEt3TEpIeUdCcThmVUVVUkRhSXBoNktPWk1GLUJEdDduUEdfNlRvdGxvcldNTmFpdHIwZlp1c0pfenpXQXppS2RvQWpyUFlidFB0dUJiVzFURjh1VTJ6NUU2QjNLMWhlTkJKam4zNUdMT2lXWXR1b0N2MS1JamgwVzR0VXN2LV84VmI2VjFyeDR0MDNoa3NOR0x5TGpOVTgxMUNIRnFha3VpZHZ0ZE1NWV95VTdIaXZFdFZOam9ld0Yzalk3NkxSNmRmejVLS3Axc0UyejhTRHBoa0otaEpiZ0N6V1ZBNzZNWUIzeHlXQVk3VDUwX2wtcjJBUV9xV2JmN2pZelduQXFlMGJ3NkdDMkpmMzBHUmlqN2lESmtkZFJhaVNIZnFhSTEzbHBYM3hYcVNyUkRRNFhhMEZuOTZmSVFfUVdCLThPY2FUSVR4X3VnejhaN1Q3UzFXSWJQb28yZlBsd2wwNE5nLUwtTW83UnVhT21hYmtZSlEyR2NNczU3OC15TVdlSW5waHZ6amlMd1pJclFQVnM4b1A1UV9vNmtmOGZRMm9RTmJPOUVXalhLcHNMazRsanJfRnpoTlN2Z3Y4OUZUYkc5UEt6c0hQUFltOU5YeXlRa2tkeVNkdVFLTnNreENULU1YTDlORmZsM2l6NkJvSzZUZ20wNnhXU1hmVkp3SDRKOWM3ckEyXzlCRDc1czczemdQV1Q2VjY3MHo3OUwxXzAzT3A4OUdtZXVIbXdxYTNCUktKelBOalZ4SVo1d3k2Mk9hcWRJSHRIQ3g5NG1EckJHUWFnWldoM2tqZE9uWjltamFTZDJjT3Vuck53Y09GQjQ1eXRiWlVPem8ySXBwUjlCR3ZjZkluZmV0WG1JUzVXSzQwa1dIZGs5SEs1NEFoN2hsNGhsS0hRTHhYNFpqLVh6NkpZa3FxLU5XTnhXTmxkTklUT2tRdkxmOXBPeTdqc1hGTGVrcmZYNXRPSlpDbWpJdEQwWWpPRGIyQ0YyNmRQUHVCMG94b2trS0MyX3IteGlPYTJDb2MtOFJoODMwaTVKOWNvM1F4TVV3UHNqV1NCLUtEUmRPTEpDNVVLSVpTWHFsNkh5Y2FLNG5VVWFOd2dSaXdhUzFfZ3g2Y2hvRWhCQjc5MVZSVHpiRUNjMmRMcEZrM3V5d3N5OWxzZzZuRGUzVkZSMjdaV0Y5XzVobHRpMTE0Q3A2b283ajFBNEN5Ym95SkN4WFBweWtqd3NuT0kzX3pFUVQweGhWMHh4dUFYM2k5djVobjZabjY4YVFRLXhVbXlqSGNERUZkSWRUcmE3Uk4yWnVrTGpSUWtUYjg5R3RrR1Btb0J6SjNmeUVra3lmbl9jUXd3MWxDYlZFQlp3VVBKV1NRNHV1aFZkZFZXcXNJUlNNZzRnNmdmUW9LVkFLTmhmYnQwSXNTRC1id21zd0NjUjZ5ZVAwc3Z4aUZrUkNRTTBqWV9QcjMwU3d3aGt4Ml8zNk1BME1TenlvWF9tUzFKd2RHTmdwYlhQZWJUMDdmc0pJUHFtS181N0xvSjBvdjV2Y3V4R1l2ZE5QX200cGRWX1YwMUNuVDI2OWNSc0FxQm1xWjhzY1BOSDFrYzNTcFotSHJUTXFmOXBDcUlYTWhzVFlGLTJfN1l1MVktNVNKRUhMcHFoMWN5V1JDNzhlQlozNmo0alZEUTJTbDQ9)
        FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmg3ckJnaGxjQlR2OHo3VWE1UHVjX1FhM0Roc296RzN4OS1tM1o5aDFHZlVleFJ3bUJ4UXRQYmVLMGJhZ1N1OHdHU0xpdDQ0QnFQNlJKVHN4VzBmbmpZRUdUcDJnckpXdllObHpKMVRnTG9jcFBnUDBvdXZpbXE3M3Bvakp1ZjUwcFNqb2dnd1Y2VnNTQlUzeWtaU2tkVkxBbU1FcTh5TnJreG5CaTdZd0RVak5ydWFxbWFFWGI2dWFNb0FvckdWdnZuV3hvYnNMMV9zMnZYVk9LT3ozZklUalNXZz09)
        IOS_FIREBASE_SECRET: Encrypted(Z0FBQUFBQmg3ckJnT1pYc2puWUh6ZnV4c0lXSmptU1lfb3lSM1ozQUFLZzRrUTBBdzBDajc2aHdWWi11cHpLNGVoTExucUxlRUlmZ3RlNmNGbVBBNHFFNGpOUmtqclIwZ1l5RWNqdnV5NFE3dmwtcGNOS2NDWkxfWEJNdWQ0M0NGNDZIdy1FVEM3akRYbFU4aWxUdUlTeXA4Z2RZZjlCRzEtNGpUX19nY3hTcDA1ZUg5aDFLRzFXWGlCbnAzYjdJLVpvTms2ZlhCcUZMUnVBc0xMOUo1dUhfMHA2aWJ4UDU4TWRVWXUteGtrTjhJZnhGVkRpUjZUQmFqRlgyLXAwdENGTDE3dlJ0a1hQdXlDT0p2TVd4NTR3Ym9wdHlfX1hUN0lMMnkyeFhxTUthbTNQaFNjeWx1SW1lSUVmZ0Q5ZlVtV19IaUk2Nzk1c1RtV29FNkR5di1ZaklUdHBNbHF5bmtDdURWMU93V1RqdlJLNUFabnVfckJXTjZRSHV3ejlDdzFoY0F0RWwwaEwwSUg0ajZ6NEVZano3WkNSRU5vVjM5NnVrUWpCWmdfa01wdktwUExidlhmSlJNR2IwOWdpVWpTbzIxREFxWWw0N0JicDVzdXB1eDlDV2YyaDJkZXotQzR0dTRtT2k0cUhUMXBCUEJWRlhrOEtpWEdkazB2UmlQcmpiSDFkYWxMMEo3NFp1eHFKQUJCNnhuZFpwbGNhUWVIVmUxSlJ5Z0tjMjMzNzFnZnRUbWJjUlZTWWtTYTlNTHJEMXNkanA5WExvcjVGY2hYb183SURNekRSbmlMOVBESnBtek5QSXhCakRHTFFxVGp6NEk5ZzAwMVlFekNab0hlZVFoVUNILVJ0ajJ0QkIxLXFWdTVLSEhITVAxMURzS2hteHk5eG9WaFBwTGZVUktzTzNZTDc4MUNwT0hRV21LX1g3eWRsWHIya3F5T2VidnF0M0NUVFNsSVpNUzNJRXpDWkdKNkxWeVA5QWZNSFZiMmFYdExEbnRjaTZ5MjZrMVlqeDJRM3c3S2lJUHVzYTFLUS0zM3A0X3M1dDF3M0hEWXBTNjYtcjRic3QxOV9IU2NQUGJNVG9xQ0JtY2FwYmp4TmRRU0hwNWVvUXBYQW1XTXItUkhsSFZTcUdBWEtlYllWUE9oVnJiU0FTMEszWFd3SFktVlQ3Q1BGRWJ3NUpTdU1iT2czeU1Kam8tNmNLSnF0RmlPbUpHU3ZnbnIxZTlITFJiLVVKUlhBMVRRRGh4dU5jSnVzUHhSTnAxRnlrdEtHQjMwdWUyWWMybGxmRnkydVJIRzVFUmUzOWpHNFcya0RFc3AtRDJCUGtXR1NEREhOQkN2OEhhbXRFcDhZbGFXLTZYdXJLSjJ5cFVUTHdxdFVPV0JkN3YwYnJNQWR4aWxfREp4OHhrc0RNZjlNZllkcjBxTHBqXzlBUllHMVY5cmxWZTdwWDNwLVFIc2JiSkNBYkp2a3RpenJOV3FKeEpibkNOSVl1ekdRdUpsaHVsLWFhanEtR1lmc1BpMVp1V0JYRlpoVm5qbmdrTE1wRkwyVEtsU29NWW01Sll2eXdzTVNBWHVsdlVXdG5Nel9NZDkzX1MxQVRBektaOHV2N09XbUEyTmlpdERaRWVZekpZZEd4Wkp0ajhFa3ZoUVBzY2tWX2dzVjViVDVUTXgtS2VCVFJxa1dRM2ZtMkNqUFdRRHlvUUg4aE04clVHMXM5cXp2VkU5VDRkRGk4dG1TYl9iVmZSY3pKOEVkaFpqdDl3MlpnQXVhYVB5dWN0aWFYek9RT29WVU1OUTI2bnIxcDVlZWFQY3FHenNvYXJYYWpXZ0VYYm1GbDhEcEdOaml3cXZBSFlCRVJrYl9VTW55TERPVjNhWXhaUHBjMGRqWHEwTU9EUk81T29QRXpVakd1cmp5V1FNMkprTGkzM3FFazRuU1h1RjViU2NfbEROY0QyMDh1bWVETEZGY05YQTIxbzFWY2E0NWN1UkdvX3ctYXNXY2ktTFJrS1lVTVFJRUhzRFU3MmF3WmZtbXR1UXdYRDl3cWQ4d2N4N21JcGRuUW9hMUQ0LUI0Z0taRm54dHlzNk9lNF9BRmtvSUx5V2tvdlVOUEUyZ3NUUTBVWU1VSGFXZGZGZEs3a0pHVGd3UFRDWndoRERfQzVJMUZiN3JKclhYMlpENXJZYVpmcVVETG5acWVoakZTVWEwdy1McjA0SmdPcS03dl9qWU5Ea3RrVmtRMzVMVFMxeXFGOGJOXzRyZVFYNkZ4N1JOaHNMc0RRY3ctaXpNeGpVS1BlX1FlWHF5bGljOXNaOWlBYVNVNHpOX3FPNzhDTmlWTzBRZXNzRnNPRnIzWnhmd1lCd0U5eGJ4ZGt3ek94YVZIU1ZJVWhrYkdIODM5d3FXTDhrU2lmOE5QMUwzcWlNcTE3ZEV0akE9PQ==)
        ENV: Encrypted(Z0FBQUFBQmg3ckJnYlA0OV95cU1ZcGJteWtPSi1meTFOUUtaMU55bWpfQ0tkTUprUE1Jc2NvS3JPdmJPTk9UY043aURUTzhaTzNuRHVVaFY4a1RURzVkU1dBWGwwUGR0b0xxUlFHY1BwbUROdUtuMlRvdWJLbDFfcmFnNDdvUUl3Tm12QmpGSFp3OEtMTXZoMGhnbFdyWjlySEhEUUdlWXkwakt4SFYwcHhzWDhWVERDVzlOeW93cTFhdnhzR3ZPVk1UZF9vRmc2QTRSMm9tX3BoZzNhcENQanFxZEY3N0NsN0Rjdjh3eDYtekRTcWFocFpXRkppeWhFbGxEY2RQN0dhNnRZalFxR1poTmVoLU5TTEtpNkt3Y0kyNnRMWHVkdGZ5RVVja1AyeHBia1ZRcnQtSVN5bGpKRzF4aWJQcWE1dEJURVBFdUJZU2VVNHJhQ2M5Nm9DNWk5VHl6cUZJVFBHQkVEallpRUc3c1ZuLVNxWTdXRF85U3Jrcy1Qc19oMzBXTjA5OGhhVnNMQmthMUZJZ2RsbzFfaUdsTkY4N181SWZVQTZzTXItc3lJUVB1TDFRRk9uSjg3cXF0dEYyZ01uYjJPYUJWS3lZdkZidFFDdFJlaWY1eHJvbGhBMFFJSWw3VGxqbUpXZVJmT3dJQ0U5NUYtNDNLTTdBeDBNY3p3Z05DWURTLVotTlg0UWJPMlZBU21YcG9hUFVSNmxUaVRhSGQ5RnRwdUhnRmNNRUdHckF0b0VEN0ZGbW42RTczQWxaSHFoSTZuX19fQ1E2a1lOM1Z0OVBmSVRDd2hqZGh6dlFianVOV3hOc0E4Y09wMEM0RXpSMC1FLVJMdjhFaU1td20xbDJUOE9LU2JITEhablZfMnRFc2lpMDNWMUFuWWtqTEt6ZEdORVBNNUstU1NFeXdfWlNiVUF6NHBHd3g4R1JuWEJYZm9udjE1RTQ0RVp6Tmg1dGtIUXhwaGJzbUw3N1BQNUlyM2dXRC1JcG9tWkI0Zzl5UVRnM2Z6d0Y3cnBDTlZvcFoxanVOV2lHRVNSNUU5T2l6VWhPNnB2MkJSc05RWVBKZFIyQWxHdW1oVDRJYzR5SnlOak1ENTlLVnVHTE1qSFoxdExyWFRnekIyTVBSSkF1bGNwUlVvRnJIX3VWZ3BEVzNlamp3RmRPMlZXZUNLcWlJcWxxV2wzTENGLVdVMHRWeC1YOVVRcHZUMzFtbDM1ajhVczZSODN2NVg0MzZzeUoyYS14YXNydVdMRGNCYUh1VEE5U05aSWMwT01OU3ZxbG52d3BlMGIyWUoyR3IyV2FkazgySnVUdmdmNU1SVXZoRHp0cW1QYkdQN2NkRTRSMzRZc0F1cC14RGM1eGVCM1hhMG0xRFoyZDZMLTJaREJnSlhoVWpoYWpnQXFDOWR6d0VJVFBKMmRJeWlnMUZrSzNRTnE2QllSSlFqazlleTd0X2Y5WmpJaTRjcDMta1BIZEVlUi1WQ1R1NWprbXFNeEU3TE1SaEVwbzZRS21KN3dxSElxd1ZwVWlMOGdRZGY0N1J3ZTBFcFdZZEVyU2duTnJrOTYtb3BqczFPcUNRY3FFNVUzMXgwdlBxTlQ3VzVrRUw2UW1OOE5KR0RTaGl1eDVUN3ZLSW82UTByUGpQNl9WUXhEMmkzWHhrdFhDSjNaeGt5ay0wQVhDQlUyaXB1QV83cmVJWDhEdlY3WWowWEVGY25JVEFKd3RaSDh3UDRPRzloeGI3dnV0eTRqaW9mak9LcmFfU0JSVDdkd25YVm5YYnE0enVrRHhsWjdvNWx3WVk1LWtDRWJOOTUtWWJOQXN0c0xJMi05TEpXWmxTbV9VNlBLaDFpSUpSQW4xQTZWRG1WYy1NYkdSWDZ6YURWRkNBWG5mR3JWdnhDOHRTeW1tU3E1eUpEOWhaWDhQUUtEenlJNXo4OUI2Y1BYMkdTWHd3Q2FyZ2c4emptZ01ENFYwVEhBYTFQcEVVN3V1bFlkVEQwNGNGVzVkS0dIZExQdU5Wa2gxVkZqNWgwYkVnRmphMFlhaENMSlJvamxaMllUTDM3Y3QwcUxLaFVvVkJVNFd0NndNeFB4NTR6WVFiOHZYTE9oOS1pcFNvTzN5YjZ0d3RIMHVaY0ZoY0ZyX1ZtZzRPMXgtSjRNOGZHZ0RVd2ZaekEtQXlZaHFQU0FLTmNnWlVlLUlmS0RBMjVwTWgwTjRSWTVSeTBMb0ZWcV9HNXF4UUVZUkhhLXktbEZMVGh3MGMza29BVXZYN29UYnBKNXRmMkxPeHVtSVB6T1IwSjJOeWNRd3NnSEJrak1tVVhxa3dCeENFQ2c4NVBwYjB2c3gzUkNoSjNGbXhNOHl1bk1KRURXVTF4OHIzZ1p6M2xGQ3kwcUhtU0hQY0NnZEQ4aHpLclVHMC1HY1B3bXVGLVU5a1h5Q05RWldsREZEOXdIME5vRUJEOXd5U3M4RUZNR3dJaDRDcmxWcmk1Mm56ZVpxMUxsb25mUGRDU1U5Q285aGQ3cGwzR3JGVGtyQzVuQm8zd3RVUm90TE02QnpRTVVGbHdPQ09MMGVPZ1BLZEpfdnpzOEFFMFFyQUNfVEpsVW5yMEhsRk5yRERXaFk4SXJUYlhHY0FWQUREVnBoSWZvbmtyMlpFaDEtSHJVZmFUMDAySmdrNkdPU2ZneFBiM0QzRnZIVm9TT3R2eFZBX0k0WENzQVRrMTJkbkd1Y085bkVfMWwwalpfM2x2Z1JhREMzUUtHVWF5UUZTdFBMX0dYalVSMFJvQW51UVRMemFRR01TTmtaRTlsNXVOaXpEdXFMX1doX3NFdkUwZjVuX3M1YmFvcFprbFEtN01YREVEc3N1ZTFJc3lObDB0amwzaDFlUEdOLVlCSzNwSWxnVTR3TzRwZjV6ZTRJMGswWWxmWUVRNVhrRDF0Q3pXMGdIWEI3dDl0LXVIVWlwdWlIYnpiRzQ5N1pJVzBzSl93ZHVMVTByTERhNXRJbDVyZk9qNkU1Tmlfc3ZqNGFFazdPV2pZYmdGeHg5VzdHeEJEZlFnVGdKTkFOLUF0TE1yY0o4T3lCVkk5ZlZlMmVWYzZvX3ZMbzY2cV9ScUYwVkpDQmtGSlNNM2pXUzZ5RDJKMlpsT2tMcmdtRXRERWpkX0pKSnYyV3ZQYTRsekRKaC1aWkRYRXk0RGExRWZwc3VwUmpIaVZRWmw5WjRFZFJfWWpVbmI1ZHZXM1lqUm9YMmJLMHl2Zjc1bjljZW5xRk04dVVrYkxaREVtYzJzVC1pRU5qSUkweUVnZmZxaG80T3ZNaXZuWEZkVnpIQXdnQmpSNWN2RFhKMGtOdkVWR2VuSmhCdEdwb2Z5TFRtdHJMQVNUTU45Rl82Tk9SSHZlZEp6aW9RRVZLM1dNQ3hvNHRLTVY2cUNGZGltS25iRUlob1RRT05uWUx0VW1oaTZWRXZ3R25uaUY2a2I1N1lGNjEwaTNseWwxRktYQUQ1OTNTdm5TTUJhZWlFZUJmTnhpb25PS3BpUFNXRFJnVzhIUmo5ZkNxODlEcXhDOFYyWU5BS2Zja2I1dk9La3lmdjRVeHhqZFVRNzJGbmU4YlpuelZ2MVYwUTR5VjJYaGd3X3lHOTdfeTNIMDVudC1BaHlKRjhVTVlkSVYwZnNxSEJmZVpUdHpwNUh2RVQweGlBbE5oVEhxMUVhY2ttOXpxMkExaDdaUEtqUGhkTURVWlc5TXBtLUlLdDZURnpBZ1A2XzdUejBLZjFEdVJXa2UyTF9kWFVCZWZQc3lIZ3hBZE5qY3Bab0kwVVVMd2c3ektCRlU4NXExX2FJX0NhTzk5TXp5OFhuZ2hGYmJmdW40M0tGdkNjWVNCS3h3Ukh0cGJjVjc4Y3RGazhUYTlMMVlXTXpvLUtJalNTbHFKal9FSmhKenZ5cUxzNkU2Tkx3enFPc0dHRS00MFhkeXdULWZDSTAxQVBLTDZmU0JYTGJtT25jV2hoWlN3X0dpWWVLS2QwRkR0VV8taGVENWM9)
        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
        FCI_KEYSTORE: Encrypted(Z0FBQUFBQmg3ckJnUXF0VzZmRV81NmE1cDBYQzZqQ3ZIeWRJSDc3QUstSGdVZFlOWUtxaFFUMnVIQkNMTTc3eHdwbUE4c0Z0RHlWVGprQTAtekktMlI0TXFKM0ZDdmdYM1BGSWpsUEhnT09rLWxMVkpSc2F3MHpyaGw0Y2JraXRiOE9PR3RiMWRFQjJVaDN6aUozd2pack1DY245dEdXMzZtWFkyU2VsSXI2MDdoMUZ3XzNUUXlzYW5EZ3htUk1IOENUaEdfOU8xc3g1TS1UbVhzLTlXUmprS3FIcmNuTVFNeDVYUE1tcXBCcnJ3M0Y2OE9WOU1GSmpaZVo1aUp6TVFPSGpQc0hqQ2VuMVdRSUZVTlZ1T3dPUWsxMHRYbEM3Wk5PRlZCaW9aTE95MFROM3ZzY3pkRzB1MDAtVlowNmRySmN2NmV2U3N3OThtZlBlMVlGMUwtYTJPYmw0ZDNjZEtnXzJOZXRvRnpZLWVYdFpwa2xoelR3RkJsbHNoWjg4ZnFWeW5IbzFfTFFuSEJfVnhUakZKalZfb1hFVEFmaEhJV3ZUZ0pKR29lR2xDZTVxS2VodmI3dnE0R1o4RDQ3WHJxa1dwTW1pTXRKYno1OUF2eUNjZnR5Nm1pRUJwT2tCSUtTcFNucDZVVkgzTlJWQ0tKbFFWaGZjQUxpY2tURXAtOWdPR1VQTEx2VkFDUE9pRlRDdWNNRkpyWXZ6RnZMbXU2RU9rMHV1Qmkxbk00ZTAycEwwcEptazlQXzRNNDhudWp6d0d5OVZ4WTF3THl5TTd5QW81X1FSRlcwZjVfNnphT0lmRUw3RlVsb0VWcC1ISXB1N2pFOXAwek9iaEhpaFR4YVZlV0xoYTM3b3JlVDZubWhiTFdnOHRTYzdyT2tjZnlHajlVRUoxRF9mbTZxZS1QUU00bkFyanNhUnpHQWlqREtuN3Y4QjB4M1lWSng3N1dENERBbGJtZkFoUHI2cmhUbXhTQXVCaTBnbVZNNEhsZFBYLWVlYkpaOTlzbTRBS0g4VFM3dkt3aVFjTkdRN1VrSEs3Qjd4eTdNdDYxVkxHanVJNjZkWEVXbHExZmY5dFVvSnhJZmFwNEd0R0w1TzdudnJqbk5OS3h0YkdQSWJnSUV4d1FyeG9sSFJCSV9ObnQtemhoc0Vrd3M5RjVxNmYzVXZXTE90dGZIUkx5SG5xS3JGWFpnekQtVnc4RlJ0eHpvWFhid1R6YmpHRjhHT0psdzlnZEljN3c5a2FOdEtTYno4czcwVWVlbmV4UzNzclZCd2FpQk5GU3NIRkI1NnpDVG1OU3NTZWVRZzFha3lpU1VvZUFLNkw2bUFCcy1GN0ZMVVdCXzRtRTlJcFpZR0xzdnBWa09IZzF0dUlBUkpRNHZ2eWd6RFEtNnFFdFlVTnVSVXB6dFJfZ0NqMGNEbU9IUGlfWXlLd1I5eWpqbVpfQnI2dThvMkV1SDVhSFZWUGZSYWc3LW52cjN1ZDU5VTdXdDBHb2ZaVkVDQmZNVEw3SjVCaXZZREd1MFhHTjdNemF2M010S3VzT1I5ODI3VnRkNndUeXYxa1h1UF9PdV9EMzJ3ZTVMUjNjeU9Fa1UzSUxIYmd3RGZVc2R3S2VhZXV2X0t4eWtYc1N5MTRCYjBlUGw2ODdsaEdocXNqcUpkSl9rRTRyVTdpeDhSYkpJbEtJMl94ZGpYRmlYa2w1VlRWcmp5eXNRa2xfVTlzc2lSVFpuZ1BmdFpwaHgtWFRKVVotWWZrNDNyNWdLcGZDWlNVOFExLU9OZDdNUDZWMlNFZVYzQThHOHdFd0RPR2ZUcXoyR3NxRmtJbUhNVUhKam5jUzNpbGYtem94Ty01M1lrR180cHZPNkI2T2hHLW5JYzZONkZZLU02VDlrUEpPdGtoMzVsWFJmdmpCbWJCWVFXZWlLenRqdUQxUmpuQzBfMFkwZjJ1WVN2WG5CY3Zkdm5objFGYm5tcEh3NVAxM21KUXRaNl81b3h0MC1KZm5SY2Zpa2dkTHZGMmJRdlR4SG96RkJUTjkxVlZRdHRBTzA3eTQtcFctUTBxTUZBcGdmdjhLU0NSbU9PNTNVOG1CQUFhd3RiVFh6amE0MElONzlqYkZaVlphWkpmaTdpclNRYlFvd0xYT3NYUDE5MzhKSWNaTkRiREp5a1lrdUFPT3drLWlJcE5FSTRyUnFuY3duOWtiZjZWUm9yUHhMQmFVTFJmYjd3SDJwc002VTB0azFxSlRuNk4zWXJKMUVITlJLMDZvWS11ckhmQjNZeXJ0Tk5zTk5QSTBRaHFLb2ZzZ0pRUU9yQVRoa0lQb2ZHSG96dmNXa1lPNk9rUHF5NVYyeHhjckxsUnZreWJkdVNMVUJzT1R2MlhPLVV2R1RYTzBTWTZzUW5vaDhBYzdmS1haM2lTZ2NkdEp1eUpuc3luWkhYUGJqMnk5RmpLeHA3V1lsTlgxajBwNDVjaXA0QktHdnZkUm1Id1RTbDlpZmU0SXRxUGNLT3ZsYW1MX0NnME1fT09Nak81OGZHREhlQ3FUVTRfUDJZc0lIcEc1b1ZVOG1iNEp5OENucXg2VUsycnJHOWdja3BwWFBfaml4YkdaRUV2c2lHY3lwVXFObUVRb0tXMXM2ZWhLSUdZVHE2WGZXd3R6d18zejdVTlFSc0d4V2xUTnJyMVRaZ0hkanZPOGdyRVMyeWpkQ3JER2F2V1ROcVY2N0FvcENQZ01BQzh3eEMxWFl3Smo3NHNpWkZFa3ZzUHdoU201NnhKOUhIbDhJQTFONHZUQVFxYVhFLUlMajNDUFE5eDF4UFFrWmJRcG85cV9HMl9ndC1UYkNLVmVqbksyVjhDaHdURkhqcXRyeVU4SUd4cXV5a1ExbzVIVHNnMkRZR3pLclh1M0lDNFJ2bzcwVElXYXRKQndjbzQydkxBeWQ3a2hJaC1Xc1dQdWFfd21qdGVpRzk1cF92ZTFKbEMzUkV6SG9zeUxzMHBEdHROQWxFU1RWeUo0UDRlMzJrajNWcjZuSnRfVy1uMmVzV0NGSjI5MXhSd2RGdHZycWxWbGRtN3RfQUxwWmhEdTBfZEszcEdOSXo0V2hTZktUZW4zd3FreVM2VWhxUUR4enVZbnVTWHpxSXhQdnpVVWxaSV9acXJHV1JwLUVBWEJESzh1cGExcng4UDNYc3pzc1JIYmtTNGF5dmJQdnVULVp4YjY2VHRDQXduZ1pSRHlpTE55NVpZN2VXNGw1UF80cGxXS1JoSFhEdF9KeTg4bU9DcnM4Sjh3d2JkemgtZFY3dTdWaElIa1FpMUdWRUxDS1lkWnExMEFjUl9nV2p1QVQ2NmFHR0VEZ091UjRXYjdHcTJBdnhrY2o1Q2lWX0pocHNyVHl0aTZrRUlILVU0RnNZM3pFMk1yRDZGWUZOYmd1SmVkWmd4TVlKWjNrX1BETE1JMDBwTWNVeVZMNDRIdGtCWFZRQkhGS0NBN25KNGhweEs5Z25BdlVYbW9qRFg1cDdmYldMelhlM0lKVFRLTzJBdFhQRXppQ3dxUVowQl9aQVZ6bDFydjFyNTJUbHk3eU9vUDVYX0xVblR0OTQ2eWpqQzVPaTdBaHdCaFJHeVJOY0U2N3BPbEN0X2pEZGRRNWRfYi11ZjFUZHBTYzZ3STNMUUxPSHdxXzNEU0hvbE5HbEZUSUxDM1o4MEtuRjFxVFF4OE53V3BBdG1EaF9jc3pjM3djUmZYeld6ZXZTd0tsRkFpS0tVMWdDdnpxWHF6cTdLdlNNazVaclR2ejNmemtZeUl2TEhUNExrMmN1N2lEVGoza3h3VFpyVHdkN01vYnNIVXFGcFNCbUlKRHV4ZlIxMDJiSUxzeVQ2YlFXcFQ3T1NJOHVYYlJBUTdSSkhkTmtkRHZmTDFma2hWV1NCNnpIVEFxWmhuVWUxa3ctZFZaOVdSNXpxZWc0c0x1R0UxUFJ3eERZTGQtUVBkSkk0ZEhLZmc1aEdEV1laU25vdmExaWNzLUlMd1IxR2ZUdVVPenZJNTVCM3B6aGpzVEsydlF2anVlaW1McWg4YWFyUk5hZF9vYWc2c2xBb3NfYTc2dU5qOFM3Nnp3M09GOEtyV0tnb3BJN1JqWVZVSEVCVks0bjgzWWdnYnN4NzI5emVwSGEtMzRncS14M0lwRVZZRFdrcXZZZzVzeUVVel9SQXV2aG9rSFJuUThUeXV0a3FnVUVENGwwMWE2V2hLSGRRWFFvWjJNYWIxS0h6QXZmbmRlNm1DWnNKWDJfZ1lLYWRMQ2w1VWpBOEFUME1TY3ZGVzFJZUhQd1NuRzFSVGc5R3JIQWdwN1lRYTBjY0wwR0hYSk15YXYzaE1palZsZ01jRFlVNldNcEp3cGdfMDNfVTR6OHV4VmMwRkFETXVkOENsUWVKbGpKV1NWZkFPSmgzZnVSSnlGT1paU21EcXlfZDVlcmhFU3RYRDBBbjJ3UGYzZWpKbVg4OGJLdzd0ZVg3M1hWaXZpTjBZYUdza2pzQnBSMmVFc0oyVVd2WUZ3OElaZ19KdzkwcVd1eHM4SEYzMUJEckctSUFpSHhyREtwWUtzYzBUNjM5WlpfdzV1ZEx4WFhQbXhiRjByQUxJeXQ3MVVlTmRVQUtZUURhdE9rbzdoZVJEX3VvVEo4TmNWR21Tc05ONWVMM2hYUzFNcFV4ZHpSQ1VmNk1uTGRDT0ppUXRXT1VkX3Iyd3hsZnZzYl9Fdk9tX3g0OVpjQVZRTmpRR2FFdDFCODVLZTllOGNvakJLQmUzNDF2RzRMZUVGbk5ueGlCNVEtT0VOaWFwWkJ5YllhOHlsTUE1YkpmNkZHM1lPeGVBZFllbGlQZGVlYUZRTFRQbEgycDVtY1NLenhQOGhiS3M0MThRYXVUOHFsaUNIdzVqaHRNLVpZQVBvUmZtZkpJQzVua2JlamhXcWI0VkpFbHRUZHM2bXFfZE5XZV9JSUg2Zmt0bDZzMVBoVGxRc0ZtdHV4V1gxbzhpS1ZHYkE5dnoxZTMzLUw0ZkZDRmtPZHlid1BHTl9Eem96bkYxeUxGZ3NvaHdncXpQZHNKSlZtWWJjWmt4M1ctdkpDYVlYbXFEblhXcFFNbVRreFJ0TGpmcjVrbExMZkRyYzUycmFKaXJORlVFWG1MRDJYeDE0TDdvQTFXcjI3cnB5S1QxaC1qdXFDZENUemh0MVlxQWxUaDVxQjc2djZDb1RPM3RGM1FqZ0VWdi1rSU5MQmt2N2wtek1QSnlxRktNSVduSHcyRlNKNGRTSTdiMThhMnZnUkRZY1l5T281eGxaR3hHUDE1VWxuc1A0V3pXdUd1d25sRVowNW1NeUdtRVhjTVI2TzE4NjBHbTF1eHlva3UwSzRsb1BDaGZSa0ZUb3FCY0JBbll6ZXoybXB1ZktoUEtGeEVIc05RTEswRmI3T3phaEhrQ3FiMGZESWRoYTJLQTY1QlNXaDNTT2FJb2NyZi1nWGJ3OTI1NUljQnROUXJ1Q3RITFRqOWhGZ2VRS3ZIbjlGa1hwalhBMzF5Q0I2ZDdHZjBwcXk0VEpzX2VLTmVfMkdldGFvUnYySnlUVkc3MFotRDh5TmVMeWlwd3NJUTY1bE9CZmNVV0Z2MDlpUFQ2MGRWbDFsTG1PMWV5OHFCeS1jQUhDcG8xUUUzZ21mc3pUMTN2YjNxS21kQVgxYUtpWlQwaGl5YmtYTnRDWnNxVlRCSTlqZ2VwM3RnM2FvUFFiMmsxekNZYVhqSUQ1VGFvUkY2b2prZFpzWWVqa0NBS2dCdHlZTGQwSkxyNjFIeTFOUWhXNmpOODY1eEdiRmtBOFZnc0xjU1hRSzVraFVXR0dQTmRiRHBfMnNyVTRKSEh0RmFlU0d0amFQUkFzTmVjVVpqemR4azBIaXZtOG9lZmNqYnZJalRUamRJMk9HdVpJcmhPTDB0ZnRGRkc1cEtRdTNfLUpxVEprNVdod01yaEMtLUhVYzBzLWNfODBIdGR0aEhubmJ0Um5RNFdLajdHOWlQZ2NYdEJYQldpSUVWWkNoelE4d0l0TWdIeGJEQkVBakVMZWhvaXlCaTJsTFhpcHRHQm5qVXdNd2xIWFFOek1jN1NCRHFLbURiU1lUdlA3aUpQbUlWOEd3c0dWSHhuRTUzanBzY0FLbE00MkYySzY1bmJfWkdOdmp3ZkZhTzZYN2VNTDVIRUl6MlFkdXlCbjhuUENQdkNMVkh0V21PZzZjYmRrX2pOVGVkaFExY3ZuN3NtWWpjX1h3UFdXTVNOUFBGZHJvanFCM3pDd2dBXzJqNHJDU29BMmhxZS1fZ1ExN2MwSldrdm1sN0doVnFlZl9FbWR4dmh1Um5SWnlRbWFHbUw4eUNtYjBKSFppLU1mUWhBN3BoQ0Vra09rSEZUZmFVeTl4RUFLT1FoS3ptU3RDNVAweXdNSk9UejJqRWlTekVqRTdNbzFqLVVHN0NLSmJfV2wya3FaVDdZWE1RZ19PZkRPdVZvcmZaSkNxOUcxdGwwdkhWa0VFU1h6LWdlWGx6R1o3MHRxUTk4cHA5TmV0R2c9PQ==)
        FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmg3ckJnVzdiVGdVVXZodEJfdWl5U1FSSXBpT0I5ckNneXhOZ3k0U3dWTVRKdm5kTEh4anl6RzNmR3FWQl82QlF4WnN0N2FpTUZfM1lQdVBrNVRkUnE3OXZrN3c9PQ==)
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmg3ckJnN2hHTkFQSU43YU1FcU9vQ3lkYTQ1V2ZpWmFBbEtTSE5XMGk4SWJralRzUHJMTnc1bWlDOEZYaHhrLWl2UTJhMFFKdWU1ZGMzOHh6RkQ0S2g3d2dydmc9PQ==)
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmg3ckJnUEhkcnFNNXIyd2dxSE9SR0hVRnViUVhYTkxQYnVkUElCNFhmY1FCTXN1UTJqUGk0Q2hZN2hEdmw4VlRfdlpXWmMtV19WRUxLUE5pd21kTlhnWElGWGc9PQ==)
        PROVISIONING_PROFILE: Encrypted()
        CERTIFICATE: Encrypted(Z0FBQUFBQmg3ckJnUkp3NGxwMS1jRWJhdG9qRW9HN0gyUTVodGtodk1RRUdUOWhDQVBnUW1XTGpEeFpLb0F5VGVoenEyMVFFQVRzV3dNU3p6dWpNMUxnWk1mMUhZbDRjdmtSTndFRVA4eTBWSjFzOWVtay1YS2dENWNMRFEyWEdDaTZJNmQ4eDF2NG05Nmc0ZEdzY1VYblB5a3VoQTRJV3NWeHFEak9Ha0ZOaXVOc095aUQwdTVVS0pxWTlDaVpUTkVxdnRlWjQ4SHNDczZQNWRsV3duU0I0Z216bm9hWmxUdHF1QlF1d3R1OEU2UE9lU3Bhb0NlakVFcE82SWtwV19aV1plZV8tQjdBMWdocDY5V3ZwN3JDRkxsc2c0NzR6cXlwdUlWLUtqOFBSVGh1QXFVeEpaZHh3SzNWX0huMXQ4N05CbFVsZ21rWlVmZndaelJQclVQRFJhTHV3N3lxVlFGU25aSXhSblAxcjZGMkdaRGM5TnozVXZXUUFJcks3aFBqR3FkMS03MXlBV1BhM0M1eXZQTEZiTG9pMllmUkF4QWFYcmZaODhfNmMwT1AzTVpVWU9EQWZTVTZCVUNueXpUSnJXWU5LZTJ5U1BkWnlsQThBOWgxam9LYkFVMlJDMmE5ZFFkOXcyelJBWlYyTy1mR0M4ODlmZk5YdzcxdEJWRGtJTUZmVDJRTkJPN1c0RTNCOW5HTlgtRDJBTjAwTy1RVUc0NFJMZzZsaFNGcVZQX0FUNV8taWstQmhvanZXRlJvM0pZNUJzZnBwc1BmdjJMSjduTEt3a2RFSWpNS3R3aFlzcWVSMWRaYVViUkFOUDNwV3dBMFRWdWl2MGZydFBhb2x5WExUbG0wS29Jejd4QzIyaC1ZQldNSl9RNEU0MmhwQjF4UkFHY0txSk85MVM2UVRSMG5NdEc1TF8zQXYwRF8xU1MySVBxQjhSWmxBMlQxb2ozcE9WTHpqSGZZTGNkZHV5ckVOckJkbTRZYk5Mc1lTU243V0NRUms3dXg5b1o4Wk1BZ2h4aDFkT29uTjVNN18tOUZiM01RbTdWR3U4bUExdklNd2lnSVdZTWY5Z3huNlVESG1xM0pFVldaUlowdTJnT0VTNm03Yk1UTURtcHlMRkRER2cycTRrLVpsWkFfMzFiRE1vSC1RZ1N0ZGxNb0lXTjA2UTEtVmVSSVFhV2FzeThYU3R1US1VMWUyOFhGbE9qMmpvTE8yYzJ3Zi1MaTlsZ0J2VzRLOVFRTFRkM0JWR3lJZWVyUmhwZkl4OWtRUkdiRXc0MVZkYkFvVi1ibk1aVzdDWkd6Z0VJckJKZHRXWWdxY09XX3ZnV3d0TWtZUUU0UDRCSUNUYjNYRUpzMzFPeDg1RU1xMjQwUTJPR0hsV1NQeC0yUTZCaUpYZVdNdGNMSzkyTlR1dEdFeTRScEF6YjFoLVFtR0RsUkRXSWE1SzlMc1Q5a0NWOGctQ2YyOFNhTWhSRUNDT0xuaHNTZTdKWmdrVXR5QWxsSktmVjdqdGFyc3VWM0U0b0tQVEgxVGVSWHRzQ1RfWmNnV29fYWhDMmk4eE1saF9GRWFwVlJiRnlETkRlTnhhUm5xXzFyN0NhV1M5Y3NiUGRKVFlHS3AxQW9tLVpKaUxhOGZ1VmoySjVFOC01YTF0QjVOUmszR1lCYVc4LVFta1B1V2gwUXE2Tk8xV2NsSEVpVmljaVYxLUloZXViN3JIa01kc0FKTVJjNmlhbHh4Z3Nua294b1gwcmJMMTdJQ1pxVjlEUG9RNWpKeTFTZUE4aFcyOUsxUUwxODdjS3c4enI5UGVpUl9GQ3pqQVFvSmtJMUtWQ0ZYbEI3UDh6ZWVub2lOZ3dGRk9HczBsSHRjSm9VeFBvREZtWHlsekNicWctLXpKakpKbEVwM0J3WGtvTHFnWUd1OU1ua3VoRm8xRTZwblhHZE56bXZfMzRFSEYzOFQ4bHNnWUduSHlRNTBia1U3QUZJX1EzN1lyZFQxejJObnd6dzNwQnJOZVRBeENndTVhT2pzamNjQllyTVpKU1JDUUtHNFdqdWpKMm5BcE1BQ1dBa0swZTNrYWlubVJCVzlwbjM2WU1TNVpHRURTcTdjeGNQanR0SWh1N0lfMDJrOGNXaXNZcVo2ZHMyYVVZTlFqUVdwQ2tKMi1Fa2FVajVaWHdoalNzbW5sdjBVMmoza1FCQTFEZl81UllJNnRqYXJOc0pDemRXa3VNNDRraDFweHkwT0ZSeFhaVTZFLUNFSkVXSkNtZEItOWlWel9XNUgwQWNYZmQyMkIzR2FPNUVaQlFKS3VsblV5MkRENmlJeUQ4cTVMcjVJaldOd19QaU1QeVlpOEJKVjZRRGQwNnlQbGdYRDd1dF8wU25uRVBQLU9IVHl2VXJ6emV6enRKZjJpUXFMMmJ3dm9acmhONGEwSXN3YlhnTWoyUVpUN0luNVZkX0k2dWdUQ3Y3Wm5za0h2N3JKZ0o3S00zenpta1lrU193a2MtbVp6a1N5QWpuRWpnN0ZoSy10X0VyT1lpUGJPZG82TW1US3NlU2c4eDczOGlNR09MWkZPM2NnNmFkQnZXQXVaRld3SUw1M05KYmpldmYydlJzRXo4MDBkTWpaQkFkSEZCQlJMR3llMlN3U2QyZF9lU0p6Rkh0RjBaZ0x2RV9KN1BURHR5QXNxb0ZlcUxYMmNVSzBIbDYxa2FyUE1WTUIwOE9vMUlwQzJQT0c4WHdhdzdpZkN6M2NwcUxreXF5QzZCU2k5VE5GRGdveEYtWjdsa1pJN09KR0VuY3ZVS1RiSDBGSktweGRZOXZLUUNVcDFUWmUweGhGVmIxUTZoZjNDbEZpZFVtSkc4QjkxSUMwd19BWXRPbE5va1g4SEF4ZHROcm9MZTBPbmhWRFlCNl95YzBaVnlHZnAxdG1nMXV4Ums2bE1LS1pKWEM1RU5PbFBTcTFCM2FFa2toYkVoelUwd1EyOF82OXdTRklMUUpaanFuTTRKNF94NDkzUi1fT015bW5lV2dkRU82dWVLVjhnS2EzRmVlRDI2R25PelhmaW9UaE5IbDZpSUR5RERJWTkwQUFsNmlSWFpKTjZQS3I1Szh5WGQ4STRLeGVvekFNeGxOeV9kSzA3TFNESy1zUGhTd1Y3VTluSTIwdjRIeWhIUHNObURyTTFIR0xrTGJxenpWQ1hKYUVsYl8tSGtJNUdtc0RwTEdJOTZ2dU1hLU15YUlLYjNadXNlemlEaFZwb3JkYmlOTC04Q2NIa2o3NDAzYS1tWE14U2ZTZXlMcmwwcDBxSmZGUjRjWmstS1RCdmRQNnM3bTRQZ285UkpMbktxNkFhdTNlUjcta1BaaWpZRndaemppeGhoZzZydlFKbmZGTWszSWotOWhDQmpna2hCTFRYRjFIdVRQNlNJNVNfNkhvdTJGZ3pHYk5Gc2hkbEtJVjh5bmpiekpjaWswVmN1WEdrNHhzMDVJZ3ZYNFhCR0cxejhUb2tKRnBGVXA2Y2o5NEZQdVlMdkNOQkFKNTh1bDdjdndVMjRZSU5hcGI1U2pFOG9pSVl2VFpNbWpsVEhCRTJjS1p6LWJHa29oT0FvMFJ6VnZFc2VyaUxXV3JLOE92UzVFeHZUVzZXcW8yTHpCaTlWQmhLczBKNzBGeTZZMUhOQ2xmRWlnajZyWloyM2J4QmhjUmFXWGYybVRxNk0xalFUR0ZyZmx5ZDNEd3B2ODdHS2FNa0lVSzVlWHoxRmp0SjFZaHR5QUFzanlDdTNKdnBVQ0ZMYTFycW1nckkzaUY2THdVU25GYnNmcDgxcXczRDdBcVpHWURFdkNSUDBlZ0t4SjhrMTJrd3JTblF0MU1tWjdnZUp3enhaeE1QdXYzelZQTEdxVGcxcTh2Q0lTbnhpbktCRzlmMzdnSHBNQmlaUGZVNW4tUnZBUVFMcVRmUkJYSlpuUk5pai02MkFGcTBMd1NEbnZhRTlETC1CWWgwMEw4UWJMVml1YURLQ2lwOGhaNmZsMUhEWHN5azYybDRETGlUOVU0R2NlSzh1T1FTMGpRSGMyeDRrbUk5MXVzRm5nOWptOW9CVEpKNWxKemRfSS1fQnRrb1Z1UHl3d0d6cHFJTDllVDJUZ1JJSVJjWWFJTkh6TFNKdjVzQ0RRXzJPU3NMWllSNFJRcTNiLXhOWnlqdUNEN19vT0JabW5lSzhoSVJaa3I0TGl0anhTLXlCZ0M0Nkt1b25EeEVjd1RvbDBFanZCdVpoWmxRcG9OZjJzMWF6NmRHeVFIbzdEN2c4eDVzcDJHbzNNempIajNkWk54elE4MkJFdXRkTnVHRlBObUd5UEJITHZnYVlQUnNNLVdsZXJHV2lmUVl2R25CS05FTVJjSkJYT3AzTkZsWXFONmZuOW5HXzZsQ244aUViZ2lrODgwQ2RhYU8zNWJxV19YbkQ2TG1LSXhJOVBSLXY3VFhsemRCd1JYZlEzZHI5MnR0VzlaaHFpZ3NvSXpvcG5uNTRWaXJkWkJ3QTlZUlVyakQwaUhpWk8zZ1dMRURFUmxmSzlydXhPUnJXSGtSVTk0ZzlOVzc5MjZaeHp6Q1JFVFJVbllGUUNWUnFqZzZoejRaSmVvTWhpVF9zYkRqU0xoMTAxTmdFdDBUcWdCVWJaVjUwYTdETlc3Ykt5VGJaalRFYUJJOUc5d3ctSVdiSHFlOWFHT25CcS02SWFhMWNZdVE0QVdOMzBRSFFWc185ZVl4RlhraTRoVzVqX181MGlxUzU4S0prTjRHSmJLMEtwR0xnZGxvWHdvS1NmcDB6bTR2Mm1Tak5SWlRHQkwyeVEwWWd4bEo1LWxrVTBGaVlYX0lCVk5tYVpBYmZiV2NaUzBrLWNkRXo0T21CemJ0YlRKakpaYkYtTjNsMDd1cjZ2Zkg0cGFzQzlILXBlb0ZfamxSQzJtam84NjJ0OEZSNWZ1REVjWmpsWV9DOEtaOURmeF8xQlhHbEliUGptMGh2V1ZLRGJJeDd4blBya216UmUwVEkyUFIwNUl0bTY3eldFbVljQ3pHMmZTbE40aC1EVnhaWEQ0RkFEMzR6NHQyb1ZveFFrM1hSQ08xcEVyaXFPeTkwZThLZkRJczhVTVBPNDdMenVhRzNoNG9IdUYwa24yQ3FOaGtPTndXLV9CMnd5V0pVM1d0WmgxeFp2Sk1FNENtOXNfYTEzQ0FIWmt3SVQ0YVBOSGZ2d0NtMGtlYWlEbmViOXFBWmdFWHI5OGFyWTJacnE2U3VHWHp4RHJWOFBYT25Yenl3WTJHYXRzd1VnTlluTkJKSXVzUUpUbUdXb1l5RVBYT01henV6d3kyRC1zT1F6TXpDYW93R01YSldiSlFReThuam5IcTE3MHpmWHFIYWNVdERiTVpucWFQcGpXdzRfLTkwY09KUHRXRzJIY2d4X0VpbW0yd2RNU2NSZGx5NFJ2bXV6Wm1fZ2tXNlQ4QWJGRXpzUXdKQ1BpSU1UXzZhejlJWlpCUzktRGJ4a1R3ZzVaZHNBUVI4MW1VNnRzbWNSbWVQWDVKX0FtUTlobVV0Y2xqYU1mUDN5YmFjVWpkdGtKaElWX0RTUTl5WjN1RlgxNmZoZmk4dVNaMlFjaVJZaWFRV3J6UGlGN1VubGNtR1VWa3ZaNjhWYzlQSmN6S1ZRdEVFQjBYclY3R25ZZFdZNGJQS2VvaFIwRTlvU3ZWbHdIb3VtckNIc0cxNE1wSzVDRVVYUHotUjJ5d0hsSVQxdGJuRjlBd3VWWnFuN2l0T1lsT2l1UkFPenU3cjRiN25jaUFtVkMwcWtXZzAxdnJpZGVXWEdIMktEU05PWlF0NUxWemo5Y05Id0VTcHB1ZmpxdHE2QkxscUxWZTMteEpheGdJaUJzaGZRZTFhSEdrRGVOcmNUZDJtVTdqUVhVUlVGT3lNc0QzLXk3by1NZG9ZU3lSWHBLRHRveHZpUkttclV1WWV0WldPOHJUTUNTajRWY1JyZjk5VjI2dlZEaVR2Vncxa0ViVXA3cWhGZFZfc05WZ1BXMk50RWhMMER4bmVTVFkyWm9WczVsYlhJZmF5Q0NNOFFXbWRWU2RvNVVzOU9aNXZGT3ozVlJBSmg3LVh0OHpMMEt3amVFMnZ6NTR3MzMwcVVXek1WRTM3OUtGaFJIWWFCY1RwNElRUVdYY29WOExCdHdsLTVIVDc3VFVkLXQzQ1RORXRLZExQZ0d5Zl8zcTY3UGxWLWhici1kZzF2ZUtjMzZBb183SGpEeF9jX2JmNG83ejFheFNRM2d6SnhzTEV5TFlGU1hLQV9rcUYwUmM0Ti1SWkJod1VBZGc2Vm9CaFNna05VeGhEUzNUVlhxVGtxVlRGQUZ2UXJCc2dJTWtGZ215VTlDTmhUQ1QxTllnWEVwWHZTdS1xSmZERjZsVEROVzBLVjBrOHJ2dzRxd1VYQ0ViYTVIemJqb3JpWnlJdnJxWmhVcHhMOXVkWm1SWVpLak55MkhHSnFzQ0l1bjY4anFGaVkyWk9XNnVTckFsQ21Sb2ctVTBlSWowcFcxZHJHZXdhTGt3OE5weTlrSktLSW5Sek41akFFLW8yVXBtWE9JLVN0UlI5MDNxeW1naHFBRThiVmllZlo3YlMyeFVOdGZ0OS0wcXJ2UklkUmtpQ1ozWnBfV0hlcXczNURhTkNZZkQyUnZ6VEVSaXcxNEpvVmVyTDZUWWpzSC1iMV9SbXRGWG1VV19Ld19BVzlrRFBpOWszeXNGMGw3elRid3JpcjAxRE1XRkMtejFNNEdDcmR2bFBaQ1ZLakpGV1BuZjJaRmlZUWdMZG5DdFVBcnVfcWhmR1BfdHhBNGZtOG9iQ3hWUEU3aWJUc1NxWmZmTTVwcXBfdVFJMC1iM3YwWEQyTG1mcl9VajEyU09DSmFLYWlXSHdLaTFldlMwU2JydjY1UWFmRG5nckdQZ200blE1XzFPVEw0dWpsa3g1N1dtaUQxOUJtX3kzQmJVZTVfT01zbUY0Vm0zUDZRTEgyUXM5TjFGNEtjWVNzb2FobWh0djNRUVl0OURkU2FqWG1wRDBGeXprM251S1B5cXEtRlRsN2h6SkZJRHlJU2oxWTFnajBmWVhHMTNiSE5Mdm85Qzc1ajkzaExGeWt5SzE1d0tPTzRBcGs4OHIwRnZMUnVGdTNSeWtiOThUblR0MHdRTmxIU0hjOVFSX3dxSVVkSkFXdzNiZFZtNmFqdkRDWE1ZUWF6dURsSWZWWE1TZXR0MXlWQ0Nyc1I2ejJRTDV2UmxKblBlSmhnNmZEbFg0SGRMVEItaVM0NjVQbE5HVEFJTncxZkRtdFZCbDZrVWNlazcxSU9FTTk1ZkxWVkxoek9GYnlWSXl1cXBMNXRERFFvREQzdlJGcXpwMmQyTnlHMjZMbzdtOHJ3cE9jZUlad19zOWZzQXVIdXJBOEF2ZUctMllGWVVPTV9FNlZFdFhzQlY3V0tKcDRoY1ZxWVBnX3Mwdk9uWUZ1bzhhVXgtdkk5U3lXRmtxSmNwZnRWWGJKTks1NjE4aUJZQlZ3cm9iLS1KUUE2QWQ3WmpxQkFIMFdGRTZPdC1YdUZESGwzdVhZU0dtZklob3p1WnptU1lMTjBnTWdQajRFZXJ6aHNuS0lJSkVISzJTZ1c5SWttT0tBZ3VQMVAyWkcwenhmVS0yS25POG1VZFZTRTY5ZU5uUXVmYTdkTERzVGZJS3duUVZkSlBidG85eWp6YTlnTXRFUWl5dzc5cnYxN1hPTjZCWEFxWksxLXJyRVdEcG9DN1Q0Z1hmTmF5OG92M0dGWUJBQ2JlbzdYc1JwaGJMbm1EVkF3Wms5Y3ktYnJPZS0xa25adE5icEY5dDVJV3BnbE56b2pSM3hrWXg2dTlSQWY=)
        CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmg3ckJnNUVyNmhIQzJEQktsSE5XaWRrbG5VZTZON19GTUdNbDZMUS1uRDNFQ3hIeGlZc2ZXZ0ZPckR6cHYzaWk3UzRSWUthMVVIMHlvN2JVZEZLUld5eGltMFJqSE5CU3JJeHlfeW1UUFB2czFNOXM9)
      flutter: 2.8.1
      xcode: '13.2'
      cocoapods: 1.11.2
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: develop
          include: true
          source: false
        - pattern: master
          include: false
          source: false
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - |
        # set up key.properties
        echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$FCI_KEYSTORE_PASSWORD
        keyPassword=$FCI_KEY_PASSWORD
        keyAlias=$FCI_KEY_ALIAS
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - |
        echo "$ENV" | base64 --decode > "$FCI_BUILD_DIR/.env"
        echo "$ANDROID_FIREBASE_SECRET" | base64 --decode > "$FCI_BUILD_DIR/android/app/google-services.json"
        echo "Decoded google-services.json! Here is the directory after."
        ls "$FCI_BUILD_DIR/android/app"
        cat "$FCI_BUILD_DIR/android/app/google-services.json"
        echo "$IOS_FIREBASE_SECRET" | base64 --decode > "$FCI_BUILD_DIR/ios/Runner/GoogleService-Info.plist"
        touch "$FCI_BUILD_DIR"/ios/Runner/GoogleService-Info.plist
        cd ios
        rm -rf Podfile.lock
        flutter clean
        flutter pub get
        pod install --repo-update
      - flutter build apk --release -t lib/env/production.dart --verbose
      - find . -name "Podfile" -execdir pod install \;
      - keychain initialize
      - |
        # set up provisioning profiles
        PROFILE_PATH="$(mktemp "$HOME/Library/MobileDevice/Provisioning Profiles"/ios.mobileprovision)"
        echo "$PROVISIONING_PROFILE" | base64 --decode > "$PROFILE_PATH"
        echo "Saved provisioning profile $PROFILE_PATH"
      - |
        # set up ios signing certificate
        echo $CERTIFICATE | base64 --decode > '/tmp/certificate.p12'
        keychain add-certificates --certificate '/tmp/certificate.p12' --certificate-password $CERTIFICATE_PASSWORD
      - xcode-project use-profiles
      - flutter build ipa --export-options-plist=/Users/builder/export_options.plist
        -t lib/env/production.dart --verbose
    artifacts:
      - build/**/outputs/apk/**/*.apk
      - build/**/outputs/bundle/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - '*.snap'
      - build/windows/**/*.msix
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - jstache@tutanota.com
          - mustache40@gmail.com
      slack:
        channel: '#build'
        notify_on_build_start: true
      firebase:
        firebase_token: $FIREBASE_TOKEN
        ios:
          app_id: 1:493864449137:ios:bf5c6cdc168866d85057d0
          groups:
            - kiatsu
        android:
          app_id: 1:493864449137:android:75b0b25472f222c95057d0
          groups:
            - kiatsu_android
          artifact_type: apk
      scripts:
        - "#!/usr/bin/env sh\n \nset -e   # exit on first failed command\nset -x \
          \  # print all executed commands to the log\n \nif [ \"$FCI_BUILD_STEP_STATUS\"\
          \ == \"success\" ]\nthen\n\n  # iOS Firebase App Distribution CLI\n  firebase\
          \ appdistribution:distribute $FCI_BUILD_OUTPUT_DIR/kiatsu.ipa --app 1:493864449137:ios:bf5c6cdc168866d85057d0\
          \ --groups \"kiatsu\" --token \"$FIREBASE_TOKEN\" --release-notes-file \"\
          $FCI_BUILD_DIR/release_notes.txt\"\n# Android Firebase App Distribution\
          \ CLI\nfirebase appdistribution:distribute $FCI_BUILD_OUTPUT_DIR/kiatsu.apk\
          \ --app 1:493864449137:android:75b0b25472f222c95057d0 --groups \"kiatsu_android\"\
          \ --token \"$FIREBASE_TOKEN\" --release-notes-file \"$FCI_BUILD_DIR/release_notes.txt\"\
          \n\nfi\n"
