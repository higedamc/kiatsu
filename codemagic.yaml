# Automatically generated on 2021-12-30 UTC from https://codemagic.io/app/609f571800a2d305209fe46d/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  default-workflow:
    name: Default Workflow
    max_build_duration: 60
    environment:
      vars:
        ENV: Encrypted(Z0FBQUFBQmh6VzJ0VURXMUtKc3JnSkVwaTJDOGxhT2N4M2NKcExSWHc0NmQ5WFAwMzVfb0VSSWx1TzVrUllNTU5DSktWRW1wRl8tNEhkVmFnR0dydWR1dlF2MGtCU0V4Sm1EeV9lZjdzRFpHdktjQ0dSQl8zVHNOQlptY1NEdEU1ajdJeW5zYjBPejJzcUlRLTJ4T3RMSmdNcHYzMXROd3JKSTNyRW5tZ211VUNqdWhTVU05MFBxUUttcXNCZjdqNGpOZWZRRWJOOFhzelFJQXl6TUY0LUdEV2NrbXFNTG9jSHRrV1F3LVpwZkUwa01hM1NzMlY2S2lSYi1nb0RmNFEwbGhTeUdtc3VtY1lIWWhlV2hfVldNVVYtYUg2Ml9VeXR4MHBXNHg1WHVBTklCZjViLXdvWXVDUDdZM0VLQ1hBN1VwNWd0WGRpVTM0WjVvSGE5dFpvNVhPZm42dmN4ZnNwM1EtYkIxNDJHTWZvd2xWdU50TlJmRzE1aEk1cXBvVFd5aGZJUURBelJ3ZTBxWTNBckwtem9raUo2cDFiV0NiR0NLR29xb0NmZ3QwZGhHYVV4SGRCemgtUUJnRHJDMzJzeWZOcjhxdzB4TFhudzAzcjZRNDJhbG0xb0E2SV9iMU05UHg5Qm9XWHczVHcxN1ZhZlBJVEJRMWltOE9rb3RxSzlCOE1tWWFaQk5jZm5fYWtPOExEeVNyV0hBTEVnaHlvWXFJdnVGVGFZUGNjRlI1eUZRNGphd1Zlak9VT1VTal82WTNMbmE4NUQ5cVRaX0xQREpSb2QzaFhUalRGQldQMUNlRENKckVqRTBtbmJtQUpkZkMzaWxnRzZzb3YwNVJVR0lwNTlWSVJEV3hiQlZUNHhMM0hQSVpPMlN2SVlDSW9Jcm5qZXF5cEV2MWxBNXU3T01zYTBsZE04V1pPcC1SRFJRVFBLMG5xVndKVVVlX2hBbFRRU1BKb0x3eHlwSmctWnMwcVFudE1LQWF0Z1Vlc2g5NHZBWm12SGNZaVMtY3JHOHBJUExnZGRQeE1UZDZUM1BCNzRXRVN3N0w0cUZUNWNsTWRJNnU0VUI0UnAxTFNoS1FPYWVwVnUtNXNXdTU5V21Ic29YS095YndhSEdRUVFxMm9jZmdiU2h0dkNFYS02dnF3RUlxOXVWc3dKQ083ZElSNFkyVkxWdHU2RGg2UnZZQ2FTUS1MeEk0b2wwNFB6SXB0SldjbW5ZclpwcElveHVIcjZFZnphMnNBSUkzNkhZMHJ3Vi15X1FVZWhKUWFoem1GVm1yWkJ5dHZIRmQ5VXBsSzd1aWhPVkhNUXUxekJrcVpmMndkMko3VTZ6UWlCang4SlVPQ0NlTEROTjdub1UxUTlRc3QxZUVzbFhZT0N0a196ZFZSMHhkaHVnUUN3YThzbHJMeFBUQU9WQ0xmV29Jd0NlanJodkRoZHo3WURVMnFiQzB5M1NLOFd4b0tpQXRTNEdtb0IzQ3ZXU21ZQ0I4dVRyU1lXTHVNdE1fTlRYdlEtQXBCY3B4aThyZ2Z2VTM2THB4YVdyTzJETTZ3eUF2N19DMzA4WW9NZXBwM3Z3Uks2OFNrSEc1Skx2cG5GWmd3V09XTWcyQlVEa3dTaS1jZC1uYXJxS2R6ZkU1dGp6TFVuV3I5RFQ4VDdsbnJzdzY4eEpOTHlFZlVhVE1Pck05eFF6Z1ZqR0ZjQTZSM3R3LUZ0WW9vS1ViUkwyWjdqV202bXJXMGx1Z0ZKRW5hX3F5RHk5RExRa3dVaHhuZDJYOTFCZE5tVzVrWG1xTjBaRHFUSUp4WEFWTVZKT2hWWHAydEtoOU1ZWU9qRzM4VTNIbGxpcVB5dmJRcWM1eXFMd290ZmNWWS02NGVVZk5XUlhiTlp2em5USXNrYm8yNmFnMXhfUk9vRnF4T1A4YzkzanpmejZJZFo4UWpjajVmV05YMVFDdHhEbDhLTmlnQmZyUGQ4aHdUanJmQU9qZmFXUnRmRzdWQmtRZEY5YnRQYndKQ3Fqd1JuMWwzLWlqSEdmZGZjaGJpSkx0enp5cWxKNkNfb0JwcmtkZnFsZGdOVWlOMkVnQlZrQTNRZk5Ib1VPRUtUUEJkRTUtam1icEp6NTBxNEI1enJpT09aMzd1SGNORnQ1bzR5RHJ2NUpJbmFyc1dMR1o4OFdOZF9BdjhiMWJPMkNFLVRUenpFZzMyM1N1d2dzYjluRTFTd1QtZlFKd1FId29sUVRhMHNtVDR6UnRtOFQ1emhIUzZPZUM2MHROSkV5T01sTFdpbEc5Wmc3ZXY5UjVtZFVCeTBld0dkUThaVG4tY0I1Rlp4cDJBN1B2T213U2VUbVJ1elFQZEE4MHN1NTE1SUlMTHZxdnFUeFlsZW5sb0ZsU0czUUxielNhQmc5WGxrdGpsejluOEpiOTUwUEo4MWtXYlRpbmd5MWt5RFlySEFXSGxWSjF3M3MtX29RRTVCZHhlcm1EWmxuNWh6cmFRVGVkejJqa2owNTRRT0RmT2VTWjhJM0JQZXJ5VmtuQmZlOUx1d3RhTDFjYmJTQjNOVE9mVHRzc200bjdVVjQ1V1dZanVmNUwxTzYtZ2U5T0tDVnJOY2NOWHpxWmYxVG9YRHNfV3o5Zmg0TTNxN1JMTlJ6aGRTOTNIQVhJandfbmhQdGQ1UnYxa1A0dUN5eEVyYm1fZ3U5ckxnRXVwNWxlRXIxWWpUVF90VHFILXZTVmlEN1E4eW1reUhaeVpCMWRreW5QUzZBY2w4Wm96di1sR3hRTHo1eFlEbW00X01SZ2lCUWJzbXZMRnduTE9VZDh0eU9maV8wempYYkw1b2E0NU5MaUZsS1ZFRWVmSjFlQTFrQ2hmQUFXSHdkQ0dQTEh6Rm4xbFlFdVhYSkozemcxbExFVENacHBPdDQzeEZVMzdWWkEtbmJtcTJ0SllEWVNKa0wwQi1uMGtyQmwyUlVWa2FtMGtYSlNZVF9GQVhiYThzbDU2QlRlSXhWWHhJR0xqbklhYkpJT1JSQVBFVmE3TVhmMzNyS0RWY1g0Rm9VRzlWWmtjNUtMZkhCZHNhM0FMdnl3eVpiVjM3Z1lfd2dDMk9CdTVSZ1N4X0c1cEZ2SFpWVTBXYWF3dkN2S2lBQ2FHNE1hcVpWNjRKekhZZXQyYmlsb0NFdF93bV9lb3h6b1BDem1HQlg5bTVWZnJua1E3MUZPWUdKRHV5OTNFMWhLZmY3eGJ5YWRqQkJsX1gzeThqWHVqRHJPXzJPT0F3ZC1zS05aTHZ0allQRzFvWWNpT2t5VnpvVGlUMEs4QzdHS1dBbEwxNFRVNHRORmJyZGgzMW90Rmh0aEtNQWlmUHRZcnk2YVBSR0FBUHpFazFLMHAzUEg3d01YZUJ0TEhzbVJkX3FSOHdCSjZ0Q29rbHJzQUgwcGM0ckFUcUNzd0Z6dmo4QWEyYXN6ZUFHWGQwd1REQm1ZUmxUVkFfODVTRzY2TjBmd1BWMVQ1Q3VGbko1SEgyU1FkRWl4WTN1a3JGMnFRcTJ0dEozUGM5RFhEQ2hFZEhhUkFwUzZEMHdPOS1BRDZObkZNN21KdjRvSjY3OTdoQ1Nqc1Rsby1EWXVWOXF6R0ZWZjc4Q2hoRUlJUlZfM1Z1RVlUTmpFY3ppTGpzQXo2V0RUVTdQRGRDV1F2RzJWZmhYOTM2RHNOREIwSGZDSmc1bkF3RGJqTERFNXlrT2JIckN3VVNzWktYbG5lZnlHVHZGTmdJWVlVUmtpNnltdzNCSlM2ZjRNRlhpNDhFUFpvVXJIMjNaSjk5RUNCaGtwVmhLVVFSUVE5bWpMYklyb3RWU3QxaXg3UWVTV294S21EclNIQVJZWXh3dVFoUFRpZU82TUIwM293Z3JIR1pTMHIxb2VvZWlHZ2xRUk5hTnpEbHhQa0k4eTFQcW5JQVpfZER1emNpSXpxbDc5YnJiNHFUYU5kX0JKUnd4R2RyYzBldFJhQWJtRXVzVmVSR0RUbmxPa09yQ2QydG9XamZYS0lueGRiTEJKT3FvS2ExcHNFOVFjVm1NYzZvc2JtRG9RQ3BSdWZXU0Qtb3NyR19vWllzOHBGMThOT3JZMEZNWUt2TzNmZDh5eC1kYXZTQkI0d3dELVJDNjhBVTk0cGV3WjNTSkFxSkRCX3VDSG1vRE96aW4zaDhtaU5sd2d5d3ZkXy1RQTB5c2JreVV6aWVUTjBlcGNuUVk5d1ZSUUI3bHU2aHE1YzY2ZE1nX3hBTkdiTmxCUEdRcmUxa2plUG1yRE5yU0ktMzJ5eTRyVGt3MEhvVVNNQkNPR2ZkR2pvV2RxSGNVLWNwMHlfTzdVOWF4VnRHdHh5QkpZbHhGMGp6WldZOUlFQW1FeXlGUjkwcGVNTDNRQmoyNjlGeWN3dkFqZ29vZm9hc0VnYmU3aF9EQ1A0LVQ3XzBaWjNQUEptUW5BVEpWR1owR1VMUzEzczEzc3RldTlQc180Vkh1a280QjVVM1BCOVNLc2NicFRVR3gxMlc1dUk5TXg5LTZ0NzdsLWxHNFFQVnJWdnZsS0xFZF9RMjMzd0N4cU01c0F4SENOaHpDbUtBeVpmb2ZQUzZfMDUyS3VIUk8tUHdfalJYN3FOemt5TmdQV3JRbXhHT1RJeDNzal9WSEIzV1RBTUVoRmtmczh4aXNQUVhNeXpLYThkZnE2SWg4UTZGNVYwQmZuZklWRVRjc2pzWXlJdEgtblgtU0RacnVMcnkyTGlwOEtxZVlfTFlCSHBxQ1VMekthQkczQU9QZ3B5WTduNlgxXzZuZVNGRUhHUk1iN3ZjZDJMb0xyNzNOdW8xOTN3clZVY3ZrVzJ4Z1B2WlcxckZPUmEtUEdNUmtnOG05YWM5WnlIWlhoWEZkVFRNSWJ4REFITDNDNTBRMk4wYWNQUnJkSDV2SWN3WGVOQT09)
        GOOGLE: Encrypted(Z0FBQUFBQmh6VzJ0RlViN05leE1qa0RaYjRoUnIxX0V0LWl5S3ZYQk5tMmwteld1aE5GdVBYLW5SMmJGcjNOSGxCOGRBcGlLOGxHS08tbERzQmZvLTFRWVNNNGFuaWFlc3g5a0syZG93QWJIeDllYlJCWlZzck8zM2V2V0ZMaHpfcmtVcFlzU1lXajNFN19QdG9BaDYtNS12TnR3SkxmVG1xOXJtX2V1WDI0dWFjVEdSaWxjZVZWSUk3SVpLb2YzZmZaMFpGWG85R2F2ai01YmNuYWlpVTF6alJXa21GeTRub1k5NV9KRm11dVZzU25HX1NRdG1vNWF6MGVYQXZ1U1Fwa0ZyV0p1NGFXR184aUhfRFdVcDFGRjN1VENrWVhUWFRjTjJ3LTRSeUxjamJiQkZXMTU1X2I2OWFWYlJ0ak5vWUh1Wk5hb0xHNzFqZWtfamZZVk9kSWJyQzhsRTVabl9OZklmekhESUI1VkUyUWdPTUZYdUpDZ0ZtU2ZvU3RPVE1UdmhMX0lUZDNHUlpnSUZod0dyOVBXXzZab2dEX0dNdWQ4c3ZPd0NKQmJYYUJnR25CaXNNQ2hLLUY3eUY3WW92LXlEZ1BtMHF3VGZWcDZ2T1A1Sm1uNXRTNXUwVk1ybFh0dk1hLW5hd0RkNzhjLXg1ZWFlTW1kWURtYnczTnoxVHQ5NkIybW1NUGtjM2VHa01qaHJaV1RHSXk0TzZNRFdiM1U0S1ljR0FWS3BDSTBrclg1aklaUld3WjFxWmpiT2hkVGpLMFVDdTNocDBBcUpQVWN6eVRXV1Z5UVEyX1hjTV9SVy1LVUhSQS1sRnhMWGw0bzdvR1hXV2lpQkg2V3h4WHZSYnB2SkQzUnVkX0djM3oxeE5iNk5LVEkxTlk1YWpiQk14Q0pfc3ZfcnVDVHpaVkFwd3R3TEFjUl9MYV9TNzU2dmp6M3dqQTZmVWplaGU3b3BDbTdxM2U1OXVoUTVVX1VxNlMyb01CWVE4VHpyYnZyZnJlUDF0Qnh0QUJKWVpRMElpVUpzNVdzdC1GRHFBSWs3aHRrVzljT1Rid1pXRU56OHNrbEM1NU9zU3gtWGc0elZZRlk1ak41bmRUZVBCVVB3dG5hZEE4SjF4VWxvN0xLNm4yd2NzY3BzdThQQm8yX0ltTUQ4NGZJcjlyTmZCcEdBMFF1VEFYbUtQOG9GSjMyUUpKRkJmUmdxR2E1T0dPZ2ZNbGJ1YnZ0NzU0VHlxUnF6bmpRc094VThRcVQzcmZGRGd2VFhCZEp0QS1FcmlYejhLc1BVeWt1cS00SmJYS1JJR3F2ckpSY3lmVXFMQ1R0UmUtbUtKTXJwRUdGZFdDdEQyQVhOSjBwaTNtenpYZWI1Z01aTHppNDBsUzJIck5pbFIxT0huaTlCY1RTSEFFVllsdHZQM3dfQnVSalJ2aURIRUhtNUlzdXh3ejBwUEtzUWhzTmpuRUVFRTJsYTVGWm5SZ19ZV3VDYm1wZHhqSUNqQVF5MUhrQXZTWHJFQWtxNnJwQkNieGNGSUpUbXppX2VzM3drSzZHbktCaFJWcG9RSElpWGs5MllnZFlKSmtlTk1lMGJtVTlUVzNPX2F3RGtkcEhBUjdYaGhpMVZJdGVSWFJjVTFxWXFZT2x5RlZ0eEZoQXBHcm44bUMzMzlHMi1PY0hOSmc0YmVHTzRMTzNHOExzMk5WR3Z5c010dXNUUU1SNndncGVDODM1c1VnM0FFelUyMTJuUFRzdE1PdVdyMXJMTHhGdXAxNlplem55ZGtybnBjSWFNdmV6eW02bGRiSllqU01D)
        FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmh6VzJ0QWtQc2F5b0ZvRzlqcEgxUnh2Uy1KRlZkZzdSZEg0TmtENWN2VzZ3Z3YwQTV5VGZId0tVaWpxZ1JZazFGemhwRDN2bWxmekllMkIxUzZoRW5aNWpJR2JTbHZKRHc5WVUwM1FyOW4tMEhVVjZIRUpWUHAwS3pZQlh3MWNRVGJDLV8wMy1xOWNzNjNOeGN0NTY3TzRJbXM1a0s1empoeGNpb3RuOUd4d1lTZms3dVBaYXBmODJ4dDlEc3ZFREljUTVZTV91Ym9Kako3T0tuS250OXJtdnExdz09)
        PROVISIONING_PROFILE: Encrypted()
        CERTIFICATE: Encrypted(Z0FBQUFBQmh6VzJ0eGpIN0pPWDg0V3ZldE5rX09kck1JSnBoQUJsTTkzcDAybWZvS3JKSjRLWG4yc3R0ODBYV01UY0hpMHU5SUJLNUZpZXBHa0d5a0h6TVYwVkM5MEJXdUhLU0cxY2kwbGlxN25neEdic05FMl9jZDRNbDZ3dDAyTEJsZjhEYVZKN2Z3ME1La3dYRnhVMGtsWUREcnhTNUw4UkZMMGdWUXdMZFRid29MdHR5NkI3WkE0S1BnQWQ2dFptbGQwckJrN1oxeHhYdUVxUXFvN0xzOXdnQ25kMThpYXd5cjhOc1kyYVNvX1U1YlJnTjZlbzFkY01TUkoxNGlSanIyTUt1SkxkZkNhekVUcUxqbVo2SXFHUnBxUldpdzd6YjJQakJnZmdwTG1MVTN1WWJwVi1YVGFlVUtIbWN6ZWdCSlhOaTJaUFN3dVVxai1wUXUyMmZIV0dKY0F3SFJkNFVtRmhoQVNOUXJjVWxrSFJnNFctY2ZkSVo1YUwyb1NidjJaVG40V1gxU1dCSE9aRmZoVTBwZVFTQkNXV3FUeTZNSTlOc3hnSjBxQkp3RFd2QXRhZjdyNXE5SFBPcFlUdlNDZFI4Ri1IZlA0djVWMWc4aWU2aWJsZTJqSGl1bHBnaHYxZ1dPYzBoVkhuVHpjcTByMjZ2TEpualBpOXd4dXVQUUFZQ0hpSnhoVE9UVzExWTJCMm9lakRJYkNSelc1b0hNbThTeVlaOURKOS0tT0swQVE4SDd5STJVNGlXYmk1azVpV0xCSXlHZjRhZGlDdFdXSDhhSTVUdTNBR3NaWmMwNHlxdHdYSm0yQjh4V2hUb2o1SUpmVXpYZExvZ09zODNYeWFKYVNDbE1MMDlEc3hVY0RfZEJkaEEtQTloUnl1Wjl2aDBhVlFnSWJnV3p6OEhLQTlZSHBSYzY4UVdJZWRnMXJaY200NkhSbm9ldnNrekFKbXpHSFRscUJUdUxVRG1XMzdWdDZNTWtkZUF6XzJqZk5UTzJUcEtYSGVhSTVrYjZvQXVfZ0xMczVuSlota0tYQ0RKOTZiYkx4N1U2UXEzVGNNVVF5LVdXblZPaE9icDNDQlUyYVRYZXdYeDRfMWFnTzhaNHNyMGpIbXBibUcyN3dNUkRxcWhULWRZRFR3QWtKUk5Ea20zRXRuMFNRWi00Yjg3QXdlNW01UklsWkZpeFhnUlJvcXRGYlF1cXZOZ2NyZ0tfWHc4WXZMYjhIYVl2eGFzdlhYWi1aaGhZMWdRWjAzZGwxMG1DWldvbDQ3NHZWYk15aDNsN2dDN2hScHVwbkxaME5Lc1gtUFc0Y2VhSWdIZU5Ic3NwVThZUXdtdmFEWDhpSVJRWlN3dTJkTXZ1NmoydGoyS21DNllrcDVadzNod0RrRUJGeTZRektva3c5eXY3aTZDeW5XUFFhQXcxMVRsa3pGREozZzUtbTZoU0s4cjJWN3dXS0VpNzRlMHFiTE4zUmFuY0tzWTZLNTl1eVA4Qkc3c1lhUHNXa1ZkOS1tbUp2WHgyYWp2N1BnNzV1by1ybWdCNXlWZGhSUnI0SGxVeG5EOWJMbEVWVlR2QVd0M0lIbFBfYTYyVXducmRyWmhqQ0tYcFFqQnd5Yk5kbmh0T0dka1VQeXZjQ0o0ekE0ei1KZHVnLWw2a051TXB3SjRXeW9lci1BamE2UnpiNE56Z1pLaVJwZUs3UGUxWHlpdUZyT0pGcDFYYUtqeWZPSmxMc2ZOUjRCLW1KeVdaNVctY0lOR1V3aUs1bGxLbnVVcml4SHJkYmYycWxrMGdpS3V4WXd4QUpKWXhRVWpVM2xKRWRsSXlTZ1dGTlVrMklRRjRsM3FNMGFScHMtOWRpMWIxcG1nVXlDV0NkRDlYdktDeG5OWnQxNkloWnNha0RfVzc3TmtNZWpDZ2dZTWc0aDRfbVJZNkhlOWtIbnAwa3A1SjVtbmpVd0RET0pYV1lSQ3RhaTN1YVEzY0E4OGM3cHE1M0JsWlNzQWlCQ0wwZC04NExnRUU4NzlNc2h2bzdmMHlUNWRXbkFNTURGYXVIV2NMVGw5aGxkRlB1N09HRWwzcWhYZWtrMnJNeGMtWUNZdjlseTR0Vm5feGFFRk1wWG05bTJzaVFXTVhYYk5pajJwa0RyaWdycExfSWQzY2txU0hLcXdwVmpkS1FRVUNZYkxmNS1zeXAwbDJ0OFl2MW5yVHBFdDBFaF9fX0pJTFZjOC1rdWRTZXVXZFZEUzNGUHNuTVZpN1ZMUWRJaU9qdzBXRlZnNVZINjZCUC1MWE5lbVFZc0dTdl9XYWtpdDFyN21CRXNwT3pjXzFTX1o1Q1JlSDY3VWNXbDFOMVBtNXIySHhGWG9DQTdicERzQlhaVTMxTVdsVlEwUHFyMWJNTHJFMl9pYTliMTBoOUl6Y2NOb09jYnpQcXhTb2I2Tzg5bDhBeThfZzJ6Ty15bWpVaU5qMmctQ0R6NlFXaFh0TnN6dTVmNzJuSlVMSXh3U1pJLS1ZRUlJaDFZWG93TEdwX1NQS1BHX2J0clJLUDhReDctc2RpSFJtMGhyY05Ua2dwbDdDODNONHNmYVJDeDB3a00wVjJTd3pTQ2cwd0pUUDZrVnBtZ19sRTJyOXFpcTVEejFDZ2RKaDNZdEhlcDNCN0RURzZMQXNvRkJVMm91RVB6OWY5aHczSDBzc2hjNTdTbGJESzlJNzlUZXJxVTRFZklkRW5Hekd4NEFaLXdNcWdBNUlhSHB2MjM2TXlISWQ3MzVlczUteUd3VUlmN2NQMUVpZ3hzS2R2cTdJTlRnd0xsLUxFU1RKS3g2MHFmWlA4ZkxUOFAycmVpRHk3WmZkVnM3UHpHWUZrbzl1UTVRellJdGd2VG9lOFVjSlJ5ZUJpN3JzSWVDTmR1VXVlSHQxODlWakFTczRmMVZTanRoRmhCTV9HQmdfWWtrMHZWaFYtWlZnVGtiQ1NEbUxmS0l3ZFlqb1A5QWhGVXpRSXNpWXpJOW1CSnoyZEhya1ZUdkV3ZjJyd2JVSXdUbEtSM2dZQU1XY2FNZ2pBWXhqVEpteWhJcFhCN2Y1LTVrdjZBUEZWd20zQVpRejR6RExxRG9zSHcxdXkxRy1lWkxHcW1zQno4emVpVHpHbXNkUGVTalBYRjc0cnZvNmZnMUVsemZUTDItODVCanFTU2JxZTNXLUU4T2VoNm1uR016ZW1xVHBOb01uRm5IX2VzZzF0Tmo2Uy1ISV9WUzZjaU9FWXpLbmVYSjV0REliRC1Cd2g3bi1ITTJFeDF1WUMtb3JxeDBpUzhlMVZGNndIWjZ0ODdMZXIzNTJKSzRiVWR0dVBxS0VEVXM4NjBhdEpRc3NUM3FBbG1fY2hTald5R0tqWTkwa2d6Vms1TnlPNFk5enZZREZFZTZCb0JIckF2eXhlMExLcndsMUVjV1BjaG55aEt0V3ZRQ2pwTDVCT3VMUEVnVi1LQWtzQURTNGRsaERUaERxbjN0dFJsTm55OGRWOGVYb2kxUEM3cm1ZSXJrSDJvdzhURGJSVVlSYnVIRGZTX0U3by1jcXdmd0ZLNFB4bVlDNUw0QnZCMXQ1VnJSVkNIaXFLYnB3Ukd1UG82YjFfWXpfZUo4SHNlRlcxZVBuSkMwcVBPR3hnRWZfbVRxT05JcmVfSGtsWW1qZERhNTc2REVISV9MdDZuaTVhUEZ6ZGg5R04wdWFZSC1pU3J3dzRJN0VsUF9XV1ZBSHc0NmZKSWI3djY2R3ljMHlYRDF2TE5IRS13cTNkLWdRVFZxS2JFNzhPaFpqZ3QwZmFlTDBqVGhHYUpuZVJWYlRPdmg5QVpnSW00YVRFSWRvMzNScTBaUERlaHF0VjZGLXZhVU9oRDB3SFZUQ2p0bXN3X3ZybHVtOXBMNHhhNWgwRjYzV0ZrNWdHWFVlU0c2ZWR4bktHeTFrcW9JbUxpeUVxQjRCWU9vaFJMUHBscWxTVnJUZk5VSlpSQmVMdkZrMkR0VlNtUmhuT2pneTdxRHpkaER1QmJGSkFjZXV4X0NLLWhkaDFzYXNnQ1huRG1jNnMteWRnNjJqME5Ud25ZYUF3Szg3c2dSWVEwVUhHbWt5TV80dWRWQ1dZR3RzMld1M2dValRIaWVucW13VmdrZVlGUmM1U0tZSVA5QkRzVk1lZmpBaXBaVXpBNXZqMGcyZ210dzdwdnpnMTM2cVRFUDlUOTdESUZjY0oyUUhZNTY5S29aV1BVNlo2SzY3Nkp0QlktMmtHYWNpVXlEb2JjZnNmWXBWNXNQUlhhZl9aY0owSi1Db1UxcGNmSUhiSnVWS01Yb29SQ2RvTmdDZENKaGNOdS1hb08xb0ZHbE1QLTl4eDFwQW94OV9kV1BITmRWWFVNSldxVlhoZGZqbzliSW1nYW1GSkVmUTRhaTZvTHRuTWtKVmcwM1BYd0ZaRzhzWWFHcHpEbi1Ydi1lckFwdlhsUXU1ajd5cXFYaVJZYm4ydWl6WWNnSUFtczIzMzFTX1VuR2E3ZU9ncE11ZkM3SG5Mc0hEd2REZHRHUlFadE9aV3huS1pnLTFGTmo5VWlWVnZLdEZ5R1VuWGZZR245czhkN01hb1QtXzJBcTJYZEFKbGJsbWF2Wk9aMUVrcFlaNGRXMk9MRktNUllKY3FqSnNzUE5pemM2QUxuSFNKaDNtcUhYQXhRWk4tVE5fSDRPQ1l3dW1WcHlxSTh5RGh1enJLQWRXd2YtZU5WTGpOTm9TeHc2djdvSDhVNmpCVVZlUEsxT0NuRktaUDNmM3V6MHM5RVJvVTJ6b0NuME9rXzFUZnpWWVl1Y0hFX0szVmQ5NjRZMlFJcVRIYlB0Uk1qenE5dkNyTmpwci1YS1VrZkhPdVVqejQtQklNSU8zVmR0UldNbllyenBDbWhUUm00ajFvQXdadER4TzRDNVRmZk1IWDFSaWsyNFIyV24yZ0piV3FoQVFwd1BzWGkyM2Q1Vm5QLVRwb1lrU1hBdlgyTXlXR3Z6Nm9URXkwRHduYVE1aDJ0UDJvOXBmWF8ydEVuNENBWEJ2WmJzbmRvQ0dUaW9hYms3VlVzVTBHUnVxOXJ2aDNydGpLLXZRWmVNU1k1QXZtWm5jaG5OeGhRY04tWWZia3haLVdld241dWVlYUkyTWJoRHpKMGpHeFFoZXBaaW91ME9wcUlLVHVmWFpKQS0yaEJCelVPRF96SHdtQ2pfN19sZ2Vtb3VQMlg1djYwQllFY3N5Z0pEbDcwWjd0SFo1cWVhU2lhV0U1SEVYOFg5V1BLVDBnVUZ6Z3RXYnB2QThVYUxqNUdOS0J0Y3BZZDQ2V1BhOHBTWFlheHdUZE55VFhfbk40WWwzSE5oX2FlREtScVFJN0phMjExbXRhS3VrOXpvbHlFa3RXT2xYX1BObG5UWk1JaVk0X0RPVDNCYXI2UXVwaGtfeUJmN0ZGMHFvVFM4bm9nVG0zaGo3VlhWU3pJZjFaaFI3SUtuLURqaTd1RWhsSjhPbFFfTU16NktyOEpoUC1wSWRteUpDRzVfS0lsV3RyY2NrVWZDUzliMlhKNXhGSHp4eVJCeEhNVkhnWDZVUVZCMi1JcEcyN3g5LWdwSF9ZMWlLb3FibGpxcjM1WGIxcVlEX0h6N3E3SC1QT0NYeHZYVDU1cVJNcVNIRFJUOW9DV0lveV9TZThyR002QWZ0NEh3bTNiWWphbGVhNXBOZkVyNmVxUHJXeEliUGgzNDRTMkdPcTZyV0RkSzladG51R1BjOXVVOGRkeWZZa0k1Ym9VQ0trR0dVTnRnOHhzeE9mYUFhdTc1eDI2bURXa21NTEVwMXdfMS1VMW5JV2VZWGtBVWZmV2ZrZ2dpLWktd0dlNEpxNFM5TTlBLWVGcmNlSlNNektqX0ZjY0IxcVRQZ2tCdml6Z0xZbFE0cHUwSVBHUnpMTTJXb0FMTzhzcW0zZkZ2Wmd4Y01vN0ctYzkyMlBZNHNib3BUdWJCb1RaR2FDOTIza2xZWFdoMkNqMkRFN2N3TWtrNkVNT0JXdUMwSTRablg4XzdoXzFQcGkyY2pCTlN6bmpWSEpMM3pDMDlUdGlKSGZfaWUxUWF6Q3lzUkcyOGI4RVViM2dMVHB6X04zcVpoSjhhbXBKVk1WTmNsUGtrVjZTb2ZueUtrVk1CQWp5cjNOM3VnaXNMTVBVZEZSblhKdGRfcjNhV0h4U1ZrU0J4eVhwa1UtQjlVSmtBQTFhNng2NGxQakxqZTB1Y3FIRFBzRHQzZkdOR01UR2RUV01ueW1fZXVKcEkzM1ZZeGJ3SGZRNURqbkc3bFdFSGduNjIxUHd6bHZzcFZUVWJaMEpvNzZ3cGFPSkU5QWZjRE5aYXc0VWNOWEhBVUZKT2RqMjc3XzB4dEZqQlRrSGpCYkhkODB2V3I4UVoyVHlPbFBPb0NJTUhFdmFWZnlDOHJiX1p4dy1GZGwwekg3NmU5ZWRUZkJKRmFVYk42ZWZ4VExHUTFpdmhwUGZLQVpwaEVyUmllaTd3akRnalFqOHRQbWFzajdJeENZX1ZmWmxLWnIycS1wUXFEOGx4STFhSFhnY1BhS0xxQm50NU9FZGpXa2tlYXVHRnpCcVhPLVB3SDExLWpaa3VIUGxEb2pfbjJqbzEwYjFJUmowNUZvSlZPV2xBaTJ5MkdRU1VDcWVaVW44T0tiVzdRU29aNE5XVjYwWEFrbXpIRnFzeXMtVjJuT1llcTF4d3RLcHM0VnJVNGE5VUVaeW5DWi1GbFYwTnlkTVJMTl9vdUViWmpWRjRnUVBybG1GYUlURWxwTEhuZm1WajFMWXZUWWZOa3AxTm84RXRVeGRfd0JHVXpoTEZpTzdPek9KMjJFRVZIa2NtWVBBRmVSczFLMjV5RkF3SUQ1MGRBY1lrSS1aX2haTDh3ZjBQMlNadUZrLWNFRllQcVFCem5KZFlvQ2VGMEZKWjRvNlVXV1VuWFJ6eEVWY0l5cU05aVJnSXJocEY5QmtCbnl1UjcyVk5Jcnh3aEItdHRRRFhUNGl1NEV4TzRvcnlMVGdELTU2d0FueUJLUlBDQS02MXBmV3BLZk5qVXJjOFZNVXpOalNONk8xX0dhVndwR1NSTFV4cTRfeGZLUWlhaEVTcmFKVmdOajNsZkNIOGVudGxURU1GNy1KVzhhakZPYnNkc1pIY1dMM2ttREdMVGpSNllDZTlTTnFkVzE0bloySUVQa19wLW5CUmNSMUctS1YxbjBKdE9ob1diNGR2a204Q0pfcnJ1enFwcS1HWEdubm5EXzUxUzRSWm5DQUxaaXFjd3dqR25sRmlxNGtRLWNJOXpTZExGVDRqWkpSWndDaDcyRnk4RlRraml6a2QxX0ZSYnhteV9CaHV1M2thWWNtbFloM0s3QjhOMWRiYi1qbUxPR1ZORnp5Nmo2aDViZlRsSUlfbWhCN3IzdzFMUUg1WmN3ODRqSk5hd0E3V0dyQ1VyWWQ2UzhUM1dXYng2dGRGTUkya2d3V2liODV3b2FrUU9TSVFva0xSWXFnTU9PVG94ekNrRHpTSTgyU2FSQnl1NDVzNV9MTk44YVJZVVRsVTVxS2IwNlZoQVlLd3FiM3NLdVY1d0Q5YWFiRXFjSzBlS0cyV2NiWUQ2VUxPb045cFpoR3VfcHFoRmp6TnJzeVpIaTNMUk9IR0VTUDgzS3ZsWE1PbFF5QlA5UGJnN2d4dUdEMVNHTDBkV1BhRUwzWnZDME04X1dMcnVhd0VBVUtYX3JyUG00Zm1zN3YwRjNsc291NUVXdHpHLVN5X3hHNWU2YjFEU3dtR2JneTIyd3lzbGltaGhlM2VMTEdfYlR0TGNCYk56dl9qOGNoaU1SSGJmd3ozZ0xZV2dZTDI2RzBWOGlqYmVRRF8=)
        CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmh6VzJ0NFhYOVhzVEs2VE9DMS1qTExuMkJHaGxRdVFjTDRQbUdwWWtCcnV1OUVGVGtDdW9aTUJKUC1YS1V3a0Q1UGtLYk1XRWZHcU9jRTdVZFJWclN1THkzMnFxb25UMFVUdWNiMVhTLU9Gd0hEeUk9)
      flutter: 2.8.0
      xcode: '13.2'
      cocoapods: 1.11.2
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: master
          include: true
          source: false
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - flutter packages pub get
      - |
        echo $ENV | base64 --decode > $FCI_BUILD_DIR/.env
        echo $GOOGLE | base64 --decode > $FCI_BUILD_DIR/ios/Runner/output.json
        plutil -convert xml1 $FCI_BUILD_DIR/ios/Runner/output.json -o $FCI_BUILD_DIR/ios/Runner/GoogleService-info.plist
        rm $FCI_BUILD_DIR/ios/Runner/output.json
        cd ios
        rm -rf Podfile.lock
        pod install --repo-update
        flutter clean
      - find . -name "Podfile" -execdir pod install \;
      - keychain initialize
      - |
        # set up provisioning profiles
        PROFILE_PATH="$(mktemp "$HOME/Library/MobileDevice/Provisioning Profiles"/ios.mobileprovision)"
        echo "$PROVISIONING_PROFILE" | base64 --decode > "$PROFILE_PATH"
        echo "Saved provisioning profile $PROFILE_PATH"
      - |
        # set up ios signing certificate
        echo $CERTIFICATE | base64 --decode > '/tmp/certificate.p12'
        keychain add-certificates --certificate '/tmp/certificate.p12' --certificate-password $CERTIFICATE_PASSWORD
      - xcode-project use-profiles
      - flutter build ipa --export-options-plist=/Users/builder/export_options.plist
        -t lib/env/production.dart --verbose
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - '*.snap'
      - build/windows/**/*.msix
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - jstache@tutanota.com
          - mustache40@gmail.com
      firebase:
        firebase_token: $FIREBASE_TOKEN
        ios:
          app_id: 1:493864449137:ios:bf5c6cdc168866d85057d0
          groups:
            - kiatsu
      scripts:
        - "#!/usr/bin/env sh\n \nset -e   # exit on first failed command\nset -x \
          \  # print all executed commands to the log\n \nif [ \"$FCI_BUILD_STEP_STATUS\"\
          \ == \"success\" ]\nthen\n\n  # iOS Firebase App Distribution CLI\n  firebase\
          \ appdistribution:distribute $FCI_BUILD_OUTPUT_DIR/kiatsu.ipa --app 1:493864449137:ios:bf5c6cdc168866d85057d0\
          \ --groups \"kiatsu\" --token \"$FIREBASE_TOKEN\" --release-notes-file \"\
          $FCI_BUILD_DIR/release_notes.txt\"\n\nfi\n"
