# Automatically generated on 2022-01-21 UTC from https://codemagic.io/app/609f571800a2d305209fe46d/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  default-workflow:
    name: Default Workflow
    max_build_duration: 60
    environment:
      vars:
        ENV: Encrypted(Z0FBQUFBQmg2dlVDdk5lcUwzdW1CdkEtUkZTR3UxLWQtYUtkemg4TmJ2N2pGRkVacjN6ODBrVFNpcEpVTFBLS0lRYlJOejhmemgwWjBscmlSMWFWU1RDak82UmIybG9xbVE1X2h2ZjN3V0xNRjVNQ3JqUGZWY2tPdFNETE5LTkNJSXYzV0psS0ZZOGdwZloyc3k0RGVsRUR0bVRLVkhNZ0I3UHJRSlVBOE5vZzJ3OXpFN2gtRFB3djlHcXVLd0JtZnQ4UElIQWNjNmlLMHMwVl9VeU02MkhkckFSUWxmbW1rWnNDcDE5c0VZSFVqRXphNnNHT0VEekdXU1NxZFhpOVVKZTYtMjdydWlXZW51bmJnX1J4YU9Qa0FyVEdpUXlWaVY4U3BuaXFWWFJnOVVaeEFjbWN4OERrUlNFSXFhcHNaNDd3TC1VNDRaQUFRN3NoRnR1UDctWFdsYmxWUG1hRWFGRDF1cmxTYlJPWHQ1WkNjdXBrUzYtaDJqVlJrTHBKYjh6RG13TnRFb0xER25hblZYT1dYOFgwTkMyU05nUTRCd24tb0ZickRReWw3bXo5N3EtX21aV2NrM05Sc3MtSHdsUzI5X0k1bmFDUlVBT1o3NGZRWGdyRDRVWVRkVFV1WTBFVndtaTBGUGd5bjdGel9WTDRTWVFQRndTbFE1a1BNTS11UmFiTUw2elhRaDdhd1Y5d2MwM0J2MjFONDRybkZ4V2lsRkp1bVUyVmxNV3pXZ3VfUVdhWEF6VF96ZC1FRzhwZk81UVQ2OUtmZmk4d3puY3BEWS00cXlibnp5NmlicHBNbElzNDV6NTBxVi0wVFp1N2hLeGNlNHk5RUlGRFBLWmU3MXp6SkFqSGdYZVZ5ckMwclRvWE9rSzJxQ0ZoaDVkYTBLc0hvX3huTFo3MEF0QUd3SFBNVVlJa3IxUnRvUmVtVU54SnJQRXFrQnRaNEdNSEJVLTVSaTk0V3FZM0NnSU5HLURNY01fOVNqTVd3TFNtWVd3djQ5anNFYXVvUWRfS2dtUkpKNjVfM09zUWUxcnhaWlZFR1l6QmpuRDJLLW1Jb3g1bFZoczYxejU5QmJhRWV6Mjc3N0llWjMtOFcxMkFrWkhndE4yOVVGOThDb201ZUJmWGNMdUFydlZLNjB0Zi1sR2czVndBVXg4NXBZZ1g0X0dCcXNYakRHc1BDSWJPX19LQktjVmhsV3hHaHUyTWVOU0Y2X0hoeXdBc0pKQjZkZE5McDZ5SVd1YXZCbFJkazB6eUczVE5sc0tGbGdzc3hyY0NTV1ROQU1aeVFUX2VoOTBoZVdkakhkbTZRbXN3RGlXb1FzU01CNkV6YnBtN0xCbWpCYV9jMDNBT2RZU3RLbDhQeE9KUDJUQktVcTFWVmh6bmJQNG9XTldrblBaek9MUGtKMThCeDM3dXVydTh3NkhRSnZIb1FVYmxzRUVPYWZMYTdyd3NCeFkzTUJSYlB3NjBBTFcyX19lSG5hSDF2TUZqWU1PWmYyNFE0ZzJyNXpaS0xzeERrODNBaXU2ZU9oRV9DSGdUOUt2bGl5S3J5dmtSbWZKMEItN2Fya2twemREOGF3aXd2cVVLTzBjc3BQY0ZuNTFCQk10VEJhckhsYU1Ca1lDd2V2RXZmT2J3elhwSTdGdTR5UzBvSHlIS01wRlpRSV9Ld1N5MlBpQVpmTDNwc0FkTWZ5NXpyc0xRQ1dZYzBXUkNuYzlNU3pac21BRWFJSjcySldKRTdvZ0tJUS1fTC1sdG9iYlU5dXZ3REhTdXdFdXMxaHJxSXU2OVphZmtNR2dXNVE1aWdScUVjbVphRXNuakNndGFlTXNpWmpsN2o5UnNVWDM3V2JvbVZJajlrdjdrazF2Q0xDRHdEZ0pUWDlscmlNN2kwUzBmWTh0cmtRZzlFY3pRZHhEQXdiYW4zVldqemRxZGVRbXlsZlFMWDFDQ3NnSENHU3NnSDdFTDZlRnRjMEVCMTRteXBQWjV0OWRDUlVCZnlNXzgxbER6SGxmXzBiSlVIZ0pEeFVWczRpcVFLZjl6b2k0cHhqNUhvdFBYQ09vQjcxMXNDTnYxTDRXdnFmM2UyU19jSWdLRXlYeEUwa0tCR2M2OHRJZ1ZOUXFKdGdoSWlVT2xNUUxPaWhNY2pGNUU4TkxLdHJwZldWTDhGMWpVTHRlb2lXd2JCR3BoOVFhVTBGd2tzOEN5UTBBMy04MXd4aU1GZzNZdXRKek51N19iR3hsUzYyU2J2Tm5rbEJvRFRVTWdzN1ZPSWFxMlNjZGc2QW1hVnhSNE1ja0p4MExZQmRpUTgwT0hpQjVmWUxoblhiLUNZOUlJSl9tem1Ba0pPMFlfNlFISTFTM1ZRcVdaOFpOWUxzV0dSZzRhaGZqdXFMU2s0d2gwM1BHUUlyNVZyT3VGM19OTlJ3cl9ZRzlsYWM0cGJxM0NCaU1JRWdUU1Q4OFlhZjNUZ2xjTnFfVkJuZmNyeVhhQ3RMWU5Hc2ljVTJVOWJRSWY4eXJZdFQyYlNYd2pOb1BBYU1NRXpkRjYzZWhoT3c4eE1aNjRtOTcza25ubC1YUlVrMkxvNWNsV2tJWkVPaFRUZHpsc0FoN3M2dTBWaHkzUk9HdUh4ajhCb250aDQyYmt2cnFGQ0xMRVlfN1d2UktSdlB0ZWtfdlRkcnBsS3FhNjdZMm5MR3Q1OHdXWnBYX3lkU1RUcTlPTkZVam9fTzZvcVVaQTlxQkV3M0lpbVV2dmptUjdvbXJGbUNTSFF0WmlvT1RkcmxENjlhT0VMRklMSC1oYjJaZE40LWh5b3A2aFFkRXJPakhpcEFpMEw0c18wNWJ0eElRenI1TkFpOHktSXVlak0xaVJkVEZFQms0Y3o5U1FIYkV3aExnNDF5U1o4YUx6ZWNCSlowLU9xT2VhMFZyQTdFWjE2NEdEM24yM0FOYUFCR1Y1RjVaLVNKYjF4aFVpQ2Y2aTRLYmVMaVFZbVYyYkVuQ0VJMzFtek81WGptbVBSUHVnX1huUVhzSzJhUWItdmZlT3YtTmRoRGpsMW15M1lobGRmaUFta1RTUzdmUkdlZ2lrSmRyaTVSRkNrbE9MdGktVTUwc1NCMmFyMExYUVhpWHNocXR5N3hObzVSXzVrWW8tVDVyY2otZlBKWm9tTDlxZ1c2bmZuUTk4VzlwallwZ2RuYVBuT2lMZ0trZUlmSHUta3g3cjA5eFhhNlJIay1BQnR0VnpqWlgweWxUalVkZnJFd2s2dVNWMWM3MzczTDhZaVZpZWJaNDEtSENzSlFtSGg0YUJXdWNhTk9PanVBR081cUZlRjBLdnphbXhtTVN2Nmc0SnRnWjRPQV84b1RhVDBkZl9HQWQ4VDB2ZGIydEJ3U3IxaWJjZDk0WVh5U2U4RFJaUDhfelRxMDVDMTV0aGpnZ1VSbHc2VGpSN0Y1YUFMSTg2UktOLVBCcUtHTlB0YTcwd1RoLUJ6TTNFeHBqSkExWW9rZnRickJZNnJLQ09IUHNvMHBVVGVzaGlRbGZpWDgwYW91cEpNSlZycHJ4aWdvbUNsendHWkdaLVJXUUdCZmN0eTlrZjBjWElrdDVPTWlUdHVqZjY1am5uM2U4bEVUMDJFbDE2eTRFMGdDRkJDVG5Cd09YaHVqaGJ2X2FyZUpEX1Bqbkk2Y21zaWxRSGR1SGUwUG90cU1MZFBIbDdKMmIzQmJQd01KcDV6aTBaSkRMZmlRamhLSUNfTFRSdFplTjBOWF9xUXFPal83bDlPU0FuNkQtb19sYzN1NVVaMmhyMGpTQ1ZQUkZXWG9PTkI4Mmdxbll4ZUhheURvMWdzWjAtaldXdWlzNUlpX3dHbmk3T3RXRkRhWFRlb1BkcHRnbHRGbmRsS3c3cGZrN3ExamxxMGVVRC01bXVZNHZkeHg4dkpxdzlvSGI5azJFd1NJYm55YWQyazdKQVFjOU9paEZ0QkdsUG5oWS10ZEtBTllyTnFuUkN5X3lSYmRxOV9iUm9MOFE9)
        GOOGLE: Encrypted(Z0FBQUFBQmg2dlVDaGR1VExlaG4teXR5RTkySzh3aWdvMXJ2VFRFeEdqc3VQNGxyVmF5T0pldTIzNG8wWDY2NVB1RHNhV0xFZVAtcElSRlljSXQxU3dhR3JwR3lxR1JWU3ZMVW5EOU5ieUM0ZHJaLUx4OWRsQnpQNFEzRWY5ODJSQy1KaDdTMlRPMUJVV1BzdWNpR2VESEV1M0I2dlZYakJDLTFBYmdiamU5c210T3Q1YmlfbDNrQ1dlYlVMenlFVkU0WW1Va2R6c1ZCYUhzUXFPR3dxRnR2d2MxdktLY2hRQzVuUjNyNG9vUTV0d3RRUXVuZHBTYzJweVRra25VckNEWXFDQ3BaLWtxNHlnQXU5NXdPNnpKRVU1LVlsbW1ueHFzZnRhd1RrY0hOU2FzMmtRQUNCTWJtWENCb3EwZEQ1WWNjd1NhNXROR0FkNkZmNFEwc2gyNFNnZnpjdGd1T05wcWNBY1hMbDE0a2dEN2JjTHo2WGUzOVFLV095SThOd0NCNy16STVQTkViYWtOTzIwb21pZGxDZ01xR0gtNExQdW1CU05hLTFHWW5OeXRadHBvVnJTMk4xZnNadDZ0Y0M5ZGxnNHRHMXhadXJzSWRGelVqNE5RdXExOC1zX1RkNmFkYWpncmVnR2lZX2l2YUtDZEFyY0lROTFnWnl3ZFVQMTIxVXVFVUpnRHRTZTBseWd1T0x5c3hWUkt6SmxCWHB6czJ2SVpoZkdnVkVVekhZODQ2dk45Nm5xY0RadURQYzFUYnhLNnZPR3Brdk1qd05MUDR0Sk5uZ2J2OVVYVFJGaTNJRUxpSEwxWWhRZzdSbkp5N2dWVGlobVJMbjkyTHo0TFpVa3NfSkJyazhIWExTU0lRcHk5QzlZcVc1WE9CdGlkS2FucTNITmVkZlBBNldtZE9jbGlIdnhjNW1RV25YUC1Ib05kSU55VDNCWXpyc3BhUnJqUG92R2lZbWhOYzdNTEIySVcxcjRFWnhVejZlZkJSdGpVaUQ5MF9XX01RVnFMSUVCamNXbDF2Z2l3bUZsNlk3QWMxb0JhWE9ET0drWG43ZjhBWExtUHk4NWwyaklXSWxPTC04LUlQbktTR1Fac3Fyd0xCNlNWOVR6Y1owbTk0aC1PNUFxRW9BNVFNcElId1VlTWVyalg2X3l2V3lGVloxaDRCcW5hREpNeVlwbmR5WVpYRmEyMy13N0EybGFRZWlzQ0dWQTE0bHlhdndXS2RkYkprZ0gxdzVNaVEzejNzTUpMVDg3WnI2NTdxRG5fcG51RC1ZMDVvSjRZUzZVWVVpTDdGRGRnYVdia3hLZHU4cXBMaVpBSkk4U2kyT04zZ09ubl9jc3NPaXJTWmlDU1NjN2NPby1YNHgyc19qeERaeWNtU0w3UFJ4RHFXUVhGZ1htOEpoMFpLajdlZkpsUFI3QXR4RDJvRUh2d2s4a3Y1OGdpZkZ3RmRSNFhBMjd5QTZWdVJrZUoydjhnNGJNMWo0enV3NGdOYkl4OUxCS00tekdUd3lSakFuYnptV1NVTU9OLUlycmFVTmZ3VTg5bUNtdFZXQVFXWGJPU1lfX0ZxUGhfWHVUSFB6R2hoTEZwVFhMS3hVNXlHOEYzQzlxMDhfaHRXOFRIemJfMFJCclMwQ0ZvY2RaMEUzeFQ2QldIT1ZVN1dZbW9rQjk4SXBHWkxQekF0OVdUQ1E3eHRPcFQ1V0NDNDJFb19uRmtCQTlCTmxYUGUyVzJwRWhKa0NqMEdORnduLTl6bEtEeGRZM0hxVGFZNTB0T3BzRFdCWXJkaXIwM3BVTDNC)
        FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmg2dlVDeHp1NklLQ2liX3A0WUQ4RmlvMm9EekNMU0NJdU1yM0xmQU9FR0RWR01hdDVHenBRNE9veTBGWmxBVzFhcWVLcW54SE13R1kxVks1NlA5TmlwY2p4MF9raEVLU1FackVoNVFVdXJfWlNIU3JfckRheTZ3YW02dmVxUVlRWXJDUXBKTkN1aGRIUDNLYWpoWDdPUDBOUkktOWdLTnhwMUUyZ19iVVpTVTlzdWJQR0FLMDBncERiLU9YSFJHR3FwdEJ3S1gzSlhTb0J2b3lrTHY2ZWM0QTVPUT09)
        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
        FCI_KEYSTORE: Encrypted(Z0FBQUFBQmg2dlVDcFNYNmNSRjVuSUlyckV2YkNQRm5XRVh0LW5CX1RyVGY0Wko5RjMxWGdyYVZkWEFwUVpoM0I0elFGZGRkWEl3cW1ZWEV3SER5N3NnYVNIMENBX3R6X00xem1jbWVMc3BzOTRrb1RoUmc3WUJGbTRiVFkxRlduU3Nydlg2Ump0Ylg2UUJCLW1ZV3RKYzB2UlgyNFh3NmhrTm1DcnNqMXlNWlJuUC1NSnBwQ2t5aUR4c0tWTnF5dEFsX0Q1eXpaRlY4SzhtZmhNa0hIeFd1bU5VZUZQME1kVEVQakpad2Vma1NweU1XNnhrblliTmpsekk3dEJUd3BKTjI1OTBZVUk3a2ZURlNsZ0ZHZ2hUTjdqbFIzU3B2TFd6MVVhYTV5MDhpQTFnMEdEQlhuVzF3c1VyaFlMMnpvalRkRXc1SjhpeDJMVjVqTkY3U2dUQjQyX3dqUmNVclBJVmFRU2NwazN1S1RBNmRWYUg2NTlfSmFvb2dSTzRqX01zbmZJMDhfZEhrNVVPeWVDM3I1OFVpQzUzNDNIb3pDLW5vV2I0ak85UlNGcGNiTndlbVVPczJtcmRRemRQcFh1anQ4WjlHb0dVTk9oRDlFRmxFQUYyaGk0U1VKWnQ3M0daeXpXUjBUN0lJZ1ZTa0lpalB4UEQ4cWVaaGMzU1F5V0g4ZW9CTmp5LVlQWG9udFo3LWtXQXZrRGdUbmJ3WlVXUWJvcEFzSzdxS2ltLVpGQ1ZfM0ZON2tIQzZzdjhmVVYtcTZ3ZzJMUDIxT0c2OUJaNjAzVm1KUk9BQTRCVDBYRVEybWxlRmxmTk1qUVh6T3RLZHVOVnQ4NTI1ODVldEdFSkVueGdHVXVzdHNQdjRfdDVDS2lrQkxDNnVzSXFQZTVWVXJYa2R3bnVQR1M0a2VIZlZwU21VNTBldXowaGIyRzVGTFNCempUS1VFRW5ONUhhbDhRNHlmX3pFZlFhbHBpODdjMTRub0hPTGhzNHdKeTJYNVc3OWZwdFJUNGFzNmE5bTVwWUFjZjFGd2ExaVI0ZHRkQzRwdjVBWXJuc2oxMFRNYXl0TlhZMGVCcW81ek9jYVV6aC1EdG5Yc0pITHJmSUxTNjlTbDh6T3l2TEl5T2ktX0J2VGp3dnYzQVQybVBXcHNNQVNLUVVVdE9vODR6RVZ1aWZreHpBM21vUlhjLVhRcW9mNXVpSTVNWEV5RUw0Q09MQ0lDcnhpT0VROEJXOVNUWDNoNW81cTF1enBieFJsbm9ILVlyMHh3T2NORFZJRi02UjVNaTJiLUNHanZZZ1JQVG5lU2VKWGlxN3h2V3RuZUJVVTVSNGluSlg5a0hvZGR4ZHI0N2h6WEdkMVRMM0dZN3pLVklCczh3Wkc5Q2FYXzlITkRSM28yUTc0VnYtcG1WTWJBS3hUY2lreUFBNkNiRHl1X25sV3k1UElQMWZ4R29wTE1tOVUxcDRUV3J2VkQtTkZIdDJvXzRsVEItalJXYkRoX2MxQnlPekdPTkZEMEsyWFcwZXJsaVBXbWd0UFZRWUtUbFNZeVo1YTQ5VmI5QVptXy1Ga1J0MXRwZHZvb0t5bTYtYlR4Y3R6YTlGSkxiZ3FiOS1qbTh3WGlzRmZqVUdlXzZnUUlkWTdPQWN5SDBvNF9RZGhBeWNCNUcwenc0ZlRjRWpoOXRyTS11czBkNW8ycUNOZngtZ0o4QXVSSFFIWTM2TlFXMU1QbnZBbkxTcVdNZHhJWTVRbzZvTURCOWJyNjlFTk13LTB3VVZXRXo1TDRHOHd5Vi1HRjUxY3gwRmZiNVF1RllyenFMajdvQW1rOGRtN2lWeEFST3lxdU5HYTl4bUhfUTVraXE2VkpKOVFNVXpsekZNblpQUWpJUE1iMmdjdlE1ZkF5Tzh1MTl0aHppX0tYNzc3ZUZIM0dpejA5aVZzTEQ4RVh0QXRBQm1fV2xnQUY0NjlIeURTZkRtQi13bGYwOEhVTUZPWW1jYURBU052bGp2U0JBUmREN1NjRlh4bDhxSXJpRENjUkIyUTNqdTlmRGNvcVJnTURFcXZ6aDcyNkFtck43a3lNUENPTnNzdnNqb0wyQU52SU9UNlRtZXBWQnFlWUFsM0o1NUZmX1VRTFJ2REE5b05yeEtmMDkwNmlxd2FMYnNPZlZNMjhfQ0RJUVAzbzBqREdBZ3JnU3dWZ1h5cXo2ay1NR0hMNlM0aDFoQ0l2RmwtODdlYmhQd3RrcEdkM2JCc3h3MXdJMW83QS1LLVhrLXkwS1lPc1BvWGNaTWFQZ2lpUmtqR2lFVVo5dEY4TTF1UlpWNndodThfcEoycjcyZWpFNnFndzFjTU5wM3o4aTI3Mjd0aG1SUjhlaUcwaVY1VW4wTmwzekdkd1VtbVo0NUN1dkpleE9IZTY0OGZsYmZoNTQwN3VxTVQ4MkpNZFd6bF9ac3RYUWNQcmtqalR5c1QtbHRIbjdHaG8wa3RQVF91ZE13OHJXVkVISGRYV1VvdnVzU2xjUmVGS0pGUmtjYlZDbmxxVk9rSS1SY09JSkhCYWF3Q0dBVUdwOEUzMzRmb1phYkJaV0hkMWNvWFBldS1YQ1F5Rk1YWUZ3am9PMXBodWdGaEJla2NoSVhoX0xxc0dOUm0wMlhBRlRMeUlNVWRsODdmeXlyNlBUQzlYWjBrR2VWWXAxeXNSbUg4TWZ2d0NMV0NaQkdwOUtjNVIwZ25QOFU4X3BTTFUyTXZRUWptWmdXYUNIUUlqLVBOVXlqbkpNN1BkSXNObk10ZzlOSnFfSEZ6OFFjSTBaTXlEWnBwcURVTGIxZ2tfMy1GMlMzYUFKS1MtZlJPV1IzWVNwRGlkb003WDhJZkQyUkFBcjllRUV5b2F3V2M3Tk1FX2RTRjFGbTNIcm5Yek9ybjdIbWRVSXB4YktTZkpkUjVFTzAyMmJOcEdia0lpMEtrVjFPU3VYN2VBb2xLZEJyc3lJMnpQWXAtMWdvblZURnloVFgxVll5VTFZV3E2MmFxTnMtZjA4QlJDMnd4TGdiOWlPTnlmQ2JmQWdOV1RObjFTMjI4YWZnQ09Qal9jM2F1d3FhLXlKRExTMUhYX3lURGYtYkxvSWtJdzdEXzZFUkM0T0VpWHdmbGxoZXV0a2wzOEM4SmZZUG5KN3RqYldZdUpfb1FiZU4xdE5FQkNrQVhxUmhINHczcm4tOGNDRVpKVHNOU2U1LXppUktZdHYwNmZGSmh3cm5iSzZUTUNRc3B2Nl9UdnRXSG9aQTluNXJQT21xX3Nzb3cycGJ1UDh5Z1JmRkNBMldzWFAzV01MWjVsS0FyeWw0aUhmbkp2Tk9aYXQtV3lkQUVFeTM1cWkzYk92VC13OTRmS0dWSkhYMk84V0t6R2JaNnJzbDUxazl0d3Fhc0NYZTRlVW5mWUgyNi1HMUw4b0J6c19jTUpwNVJwRllPUU1OUk8zNXlWTUdmRk9lYzdtbVh4WENBdHVkV3AxdzE0a3drVkltLWprNVdlakZPMEd5cU43NVgwMGRidDVTT1VRVEktSkJEUnBUdjd4ckRsNXhZTVBqVmN2VDBMZFQ2UDRyZ0ZjNVRuUlQxRlh0dUhjb21lUU5OWWswY0RsV1hPNlI5MnJrR1JoUS1XZ3lHQ05lSThMZ19UZ3NjWGlMX0R0eTlGLVRteERONTRJLVNDdDdwNjF5eGlNQUxMYmF0MnNocDdfUVJBSzNHRmJtaXhDOHFZMVFFQUZZX3RZbTduUU85SG1BelBFNF9lN3Vodm5QS2dSRjY5NkdxUTdUNlpoYU9naUdVa3FDSHhhM3pfR1pyM3RaVU8yWVB2V1RpdlRCN0ZvM0xmQnFkYThrRUJYaVJDaXhjc2t1VFpmUTZzSWRuNnh4bGt4enZqamhfZlZUZ21RYzAweGJqX0UtRlhHNGI0NWFEcGpDN2Flc3Z6WWgyVUpoR3FYcWtaNjFkemFPa0dFWGNHZTBNeGZkZUNhS3BPZmRWZnZkM0JtN0Y3Q1pSNWZBVURCRE9KSGlQc3dSQjhPV2QzeGJuSkN2UnlHdGhNVm9tZ0x3MDE1OWJzV0ZXd2VSZTdsZ3J2Nm56akNTYndwLTBJQTYwRG5EdGVEdDJmQlBLUlZDbXFTV1ZHcTJrc2N2MGNjb0lrOXJlbjRlV2p1bkNoSU4wOUdHY1BmTTJMQWd5ZmZ4a2FvRlVPMG82ZkZRaU10UTYwV2hReHEySzFpYjJLMEpOWG5qUWdPNU1WRm96M2ozSGRIOENHQjhoOUpBRjZGOHNHRDZDNWpWMVg3RlZkcWVtZFhwWHYwUXZRZ3BSOUxPZ0REZVZIb1lqYnJ1aXVxN0N2Nm1hcDZPMHBEV1licEJRZWJadk1IX3BYXzQ4WmdRWTIzYldEUWpiTzhpMWFEQjk0TVA2RW5KZmxRc1RiTV91Sy1aS3lyVXJILWsxblkwV2hBWGhNczB0UFpJMjBRRkpsM295SGNPSWs5ZTFndUFMenliS0t1cGNqTWd3XzJ3a0haOUtrNk1mNUxWOS1OZFlUQkNJQlMzYmNGNXRaamV3OXBlenB1ZHhJOG1VZ3c5dTh2WVk2Vk1RU3NWOUplRmVpdHZ6UnAxajNlWW1paEk1ZXhnVHZ5Y1gzSFdXLXd1ME5fTy02RVN4RVV6WlhMeWVlZzhXaVNjODIwam9CWFBpVGJQSkdmMlQ4WC1iSVpmdnV1cFlZNDNsaTV6UmcxV0FzSXUxZDh0NUQ0c1ZQR2Z4YU5RcVVkNFBTNlRRNTFYdnhGQm93QkpnSFhlNkkzTlpfMUZTMGh2V3lhUjhtSThwNUpnWXB4dW45UlpaN1RJY0JaUG1zWkpMVUlfNllnS3Z4UHBSQlEtVGdKQTUzOVVCdW1ETXA1NlZOSk45YzJ5alhRVnVyOUdUZm1jR2ttTlJ5RUptT3Jyd0dwbmZPb2Y0alhRUkhQU1VnRjM1YlBUWmc2NnZPNVJrUXdJNkY2ZTBlQ2xKajRDRmlXRnE2YWlTQ0R6LXU2OUNtcm8ybkZSX3c1dHhocENUM1cwenozSGtJVnNLQ2Vlc3NVWWszZDBSZGo0T3VmbEExRzk0VlZ6VUY5Z3BReFdFZlQ2MU45RG1KTWg3cEZVdkNrZ2dOM3hEb0xzTlZ0WGlYM1pUYjViWU45R2hUZlc2T282UTh4MjYwdWRWbi1xb2s2TDdfUm5RenpSODJuT1VieGhrMWY0aG9EX1gzekVFVnRGTWJiRWRab0ZRbllwTWR2LXpDVXVXT0dqTGlyalN5Q1AydTZrOHNhdDRlNkhRWkp6c1pzM2hLT1U0WDVXWEo5dW5JT3lMZjZCWUFSSVhISFEtelBiOExEWUtMRWJOWjMtd29mRGlhV0FJODVvdTF2UWtRMkN4Y2g4UHZHWUEyZ0RWSG5LMEN4UXJGWFdWZzA5b1FocXdIQT09)
        FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmg2dlVDOXE0aUNueHR1VTUtYmxBR3FHQXBsekVvT25qaFd5ZldwdzQ5OE9CbmttMTB0NjBINVdKVW9RdUVJaVZXdllGS0htNEM4QmxmNGNsMVNFVE1yemtBeHc9PQ==)
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmg2dlVDTk9uNzBjZ05hTGozM2labnphT3B3MEctekMxNnFJZ0ZfaHJ3dnJrbUtPc3pRc2pOMmo0N3Z1Ty1PU0NmaG55SDlLbnFCS3BmVjZKU0V4V051MUpMOWc9PQ==)
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmg2dlVDQnRySGJRVkt2Z1pTZEVUMlF1UFhFYUlHQ3ZXd19OYWNTaGNvZ2dDOW40c3ppYzk3MFNIa0lfbWZ5bFRoclVRS2d1czFDRlE3bGZYcHZwM1VuNEcxS0E9PQ==)
        PROVISIONING_PROFILE: Encrypted()
        CERTIFICATE: Encrypted(Z0FBQUFBQmg2dlVDSGdzenFBMURZaVBSMVYwUFdXSHF4dmV1c25mTUs2NVRGajVfRHJ5bW1UTzBYdG04NnRXT0kydHpCVGYxNW14RlZtNWRTcGRXSkNDaHZIWkVaSlV4NGlSWjU2M1J5QkFzZ2dVaVpRSERGVjRFeG9SZWpmMWRuX0RERXkzN1pwaHp5ZWFPem5lZl93dlY4Z2IxVWtxc28yOXVoa1BBSkZTempnYzNGdzBRYkxZb29NNlNXTi1zVXozYU1ZYXNIMFF3dnpNR1ViM1lBTVo1VlVHOHgzOTNrLXlPWlQ3ZGdTTmJzYWJzdlZNRHFETUprVzBKdTAwa2pmM2NZbG5MWTFiTUNNSXpYZEZFd3NUclBrYTBNQl9DaFVEOTVkcXZpQU8tV255YWVhSWM4dmE1NWZ1RXNKcEt4QldsaGowM3ZscGx4Vi1fMXAxSFJQTktXRERUUkJVUXI0TXhiV2xBOVl0OVFwckxkTlVFVmFfMjFOR05BRVZQTUg3dDBxZFVpRXRZbXRkZ1E2RmdWd2pyYnlmNW9tcmNSV1JIbjRyRjNXQnFlZ0xpMVhzb2RRMGZoaUg4UG8teVNZdFlQcnR5cnNIcEFNc0xRZUU3clZfX0pkTmlqeUNLZlhHVk4wTFVHRUpuN3NIblA5X2NJTDZfYjNVMGJpXzBNMnlLR1JlOWVPTU16cU1NNlFlNGc4T0NlY19KazJ6LXFFaklUNXo4NFlieUxMR0xLQ3QzMVYtMzZqcWlEZ2ZPTEJkVnBSeFQ2QzkxaXpoMkFreVJpTFhNR1d3czRBNWhmTXFvWVZHbHVLWGp3cEpqRWNTOW5tVDhhb2NvNlZGTHhaalEwSGhVVTZCSnJ4VXcxdUFEQWVuYUFKdkFqLVVlakdvTXJSWURmMUdrM0hXMUl5RElVUm5DMnpNaVlxUzU3SnpySldBWUo5SWFxSGpLTDQtVUdVN3YtLUVSTWdEektTb0MxOVRKdGMwazRSdHlIT3pteGVTMXJkOTRBLV81dXZ3R1Q1aEFQOWVlaWdjVVBrYTlHY3J4bmw5QlFFNFZSZHJMOVQyMVNsbUlNMmV2WFB6cVNMNFAyX1hZdGZ0Y2J4NERJRUZCVEthVk0zajljaGYwTUZyREQzOTl4elhFNWpINklYOW53ai10NFRzRDVncWJQbzUzQUpxTWo3U2ZPYThSdE9BN1F1NVJLU1ctTWRlRVJpQldmRTVTUDVlMTNGQ0Z3WHNPY2hXSTVJMHJJRDJWdHJQUm16aWlCaDFpYzdEQ0VEM20wdFVkcHc5aWdIbUR5N2lEV2pfRzdyTEl4dWdtVFIydlVVcVBqS2hiTXNtV2VjVkZtbUVIT3o1LUFrazdfZnB6WUVFblYwZmZ2ejZqRFQ0emtBQ2JQSEpSQTJGeF9kQ1Badi1sUnJyam5CX3diZG1IbFVUOGVKOTZnRVVLWEgtMXloZGhPaWZCMENVd2JOZkN0bXg2VGFYSXM0WHdKSTZ0dVUxVVFabmpXMXA1Z21VbGs5dUpxc2dfV0I1SmZDOVdseWNmWFQwLVFrOUpDdHlUYWc2Y242ZHllbTcxcGNGQXU4UEdYT2E1ZVZPTUdXb0R3MDBJM1pXVEZPS3lzR2tER0Y1NjVVUkRoek1JT1ZLR3BnNGtSdHhYWGpSX2tzT01PUnBMU0hNNW9PdjRMb3dPYnlzcjlrVjV3VjI0d1p5YkpPelEySU56Nm9TekZ6UHdqa21vTDBLNGVqN252RWNBR3lBeVJLSlN5aVdTUl9Xbk4yOVRvUjVyMXI1VnZiRUdQZ3RwSTFuOG1hTHd0M1JGMk1kT0V4MDJ2UkhpVFhEb0hMNXZUdzd1MkdTa3dUZjFwQWdHdHBqa1h2ZFNGeU5FLWhnYW05cHdId0hUeDBUNC1jeDdyYThSVGNiUkVPOC13MlFLaDZUeXlHcXR5MW53RVpyUXVQY01ZNG1vR1g1RUdZY2lOQ3hpcXZHeUppUWhZRnJPSC1ob1BJQzdFbnpaTzdOSnJ4YkI0elhUQmdvdUpVRm0xN1ZwZEVoWUEyY1YwTHVZQUNEOGFkTXFlMEQ3RmMwSnhRS1JMQ2tJVWhibmJBTUZKbUl1bVdPaHoxemNLWXdMVXptMnB5WENMZDMyRlZuNFpMMnc3ODJJYUwxSHBEVU1oY0gwaHNSQVFFWGhzaUhXMXJJWTY0NzNTQlRLUXRwTnNCNzd3X3ZTVjFOSTRZRWZlX21pRXdsNmJVSEVWTGYyQ0loNjBvN2RlSW1kOElrNmtmNGNBcGM0cE96LUczLTZJLVdXYzRDQ3U1OUNCdE5OMzZLZFpIQXpUY0NBb0YzMGF4THAxdEdnWUZpck5mTjBhWnFzRXotcGNkN2lzX3g1aXZLaTQwUzRLbDNrRi0wb3dyaEExZWpmVlV2aktOSUh6WVl3RFhrR2xLSFJFUlVBOTJCR1lsZk8wV1ZCbDRXSzNxTmNWa2l1OE1RaDItTGpWVW5MN1pwaW1YQzJlbXF5NmUtWnRUeHU5cklmR0FJaDFpd09ubmVtT3liU1lvaU0zcWNvdVFsbHJ6WDB0eXQzeThtUlRKZ0VaX2JXNVhxei1TeldOaGNDbExQSmd2WUtVZGEtazQwbHJHdndCRFNYS0tudDdjTWhoa1ptWFhGeE13MVYwbFYxTmRfRkdUMGVJWllyMm5VTmJ0T0dCZmxyR1d2b21SNFRwZzdsY2VhTUU4amJjeG5sZEtHVWNBN21rUTJiX3p5NUl1UGxUdGMxSXZlQXYwM1dDcmUxcHdZNXp5VVdDWFFpMXNrNTJ0bjY5c2tZOUJnWnMtaUQ3SWRtRERDY1FxY3JpZ0hPZDZXMXRzU241azVhY1NXT3dScnhWbTJoVm16dWpTYk50YUU1UXY1LVdyQ3ZWT0luY3ZWaEIwOXVaZURVRGNiYktjVDBERkhGXzRwSGlMa3R2U1p3allhR01FOWxTZlZJV1pWaVdjSVdpc21taGdTWTdSa3UzVGpncDRoeTdJaTR0Z0xnaG5uMjc4OW03LUpYQjk1NjA4cUwtYmdzSlBaUXBNOVh3dXEzbmtTeF94M25aUkJLRzZsYXducGdYdWlha01xTWc4MVBidDl6QWJoQUM4MFBQRnJJWmxXMkdIa1AwZ0FPcS1zcHBtYmZyVjFWMXpsaFd4MFdnbU11d2pJRkcyRG1udTdYRGNDZmZlWGI0Y0t2blNHVTBvQXdhaDJyMXdvb0N4aU56ekxwVlVqSGI0VlpPYlNvWmE2R3N4UVBCN2I1X0hJc1RGR0hJaHUzYjVmRERfRzRWMUxlSlIwRVBmZEozTno4TFE0OGY5dl90S0V3MTdzdzlKNmlFRTBoZWZEekVKczh0STM2VHNuRXpteHJNV3VCSjhBRHVnWEJkS2RyZmZZdm1tVVJva1RvVV9fTm9yMC1lcVZvSWN4Vi1SRXV6Wnp2UFgzLTlFU3dINnVMd3RHd2NnanlxcDh2UDQ2bVhkZG1PaV9zN0lmWGY2ZVZpZmtINW8tX09nazlETjFjekNJNjV1eHAzYkhmQWVhQ0kwTTA5RHA3UTh0WVZFT2p1cnBDVC1CN1M1ZzV6YklrWXV6NUhibUNwRG1VYl9WN2M2RHdIRTVUWm9RU0swTE9tV3VoRDlkM3AyT2NNeUVlc1oxOFUxcWl2REtxYUJfVFBLay1VODdFaGtuY01zdnI0WEJ2Q0ZtUk1CQnEtdmxxdXRfYkVrY00tbUpqYU1hUEV2VFNhbVpkaWpIZG5MTG9ReXpubTRTN29IQWthZG0zTzVPdEFoenoySHF2YzRaZkpTV1Z6UDJCM2p1RGF6ZHEzVXNZSHJ1NTRQTXB5LVo3bU1tQnBaWUo3RXo2UnFtNXVXZ29qS0pzLXBRc2NweWZZSzE3SEs3dHhXeHJXSXZ3ZkxZUzVOUVFmdFlaWHhxSVRiR3l4ZVdEQ1NJYzFlY3E4QnRlYnJIWklNMHJvYWhrT1JVdTVzbUQ4MU4yMWZ6TzZFN3Boeml5dEhyX3l1T1MzOVhLdFZHbXlRVFdTeXFyWUhsbTcyRXJNQkVpdHNMU0hQa0Q0aGtOcG1aM0U0TENCUDhaY1FuUkFaZmpFYTQ1VXFpUTBzclhJWGlSQVQ0SERpbHBxRlpOT1NXbnlScGczVWc1dTh0T2MtYjdNcTF6eGlsYm1UQjBGYzUzQ1hQUEpOWV9BSWtoWDNTaFJVRWluRFJ0R2tLUUZQWEVYdzAzYTQxeXpYNF90YjJiMFFac0pnd1FjbXZYaFREa0IwbVRuM2JqTzU5UTU4eXVrcnc1bmZSMkNfcDFpT29FV0J2UlpqZm5SVHhGVFRmOTNISVpvd2o1VzR4NGxpb0lYQnpKS1hNV2dPWl9zMzhqT3ZBdmpZM2oyZnpKMlhDd212VjZHMEtKUmVGRko0OFhmeE9ZRFM5X1N3R29MaXFCc25OakFQaUV3UU81VUR1OHBJa09kSVFBcFJ5VjJCUHpCeDlFOVV2VXNDWEFLR2MzWmVOYW1uQ2l3SnpPUUFBNUZDSzQ1NnF2eUdCbmh6Y09hT1ZtRVZLZ2Y4ckdrNHpKa20zTllDM3JHdnBUc3hrd09tOFdIU3pEOE9VMVNRem4zZ1Jpd3dxemtuX19wVjFtbDh1cXZ1NkZDS1l0SHI3WFdMTE9yakNuaXZ5Z3FrcjB1R1Vyem1VTWl4MTdjWTlOVHFkY3g0alhFUVNJNmJYTzE1R0kwWTRUalljWm9WbEpyV28wQXl5WFdvbE1WZVFUQ1VCWVZOdjNudkFJS2lPSF9EdjREQkNqQkdJaF9wUG9yU0dBZWpzQmdJNFNRcEZOQlZzaGtmY1B3MGlQaXZFNFFUNGVBc3pjUXFxeHcyUDljbU1fekVIRkt4LVNUb2NXNmtmdTc3THpXLXR1YVViVjVhU3pyMWxsY0dnRDVpZlRUbXpBYkZPMDIxLTBoM3ZkRnhHVEFTRU02WC1BZE5USUJNUHV3cGtrS1pweDY4QjZ1RG0wVlZlUzU2cXMwVUg3UlRnWHg0NVE4Q3JrclNLbklPQXMwVWlQNkRtdHRmX25Pak5rTTZtUTNQcU50NE9jS29NYnR1OWQ4cEtob0JiZWFWMDVDWmhoTDBFTkRfdUlIU29ZUXJoR294ZkhKSl9pSlB0V0doVWRSRXBUdTVialFNbDNZWGJneThrVUx5dzBEZnNoZ0ZjLWd6alRRNWp2dlB4d01Vem9JVVM3SkdjaVo2YU1GWkxMRndYUVYwMTdPMURtbU5iNzBSaEhFMlQ3Vy1JUzZuSEhZQ3ZNc2lyVjBKU3NoWmZyR1hBSzd1WEZEWDFOMGZhYVU2N0xJWTlNZXhDWGQzRk9Fd0g3dlJSTmFBdjl4dzYzTFJnVjQ1M3AyYzA0QmNpMDN6cFBKRndtY21iY2Y0MHRZTzhQQkNnd0hUSnFPeVpWckhqcERaZWpkdzBwZUpBSzhydTVibVhqcVhRR01EYl9mM0NMRm4yZUlYbnF3bWJ6LW9sZ0hlNE53Xy1Rc1MzMjFDZkZIWktSelFEVEluaV9MZmRJTFJqalBjeGtiWWJneHZKZEZJajZDRmRDYTgyam51VlJUb2tEOHh1eWZiMVdfeXRVTS1LUzU3MzlnVGFmSGtqYlg3NUZQTDhsUWpfUFlHTkRnNDY2N0FmSVVSalFfV0daZnN2aUxMZlBITURnVG01aGdiOEw2cEN0WDZ6ZGxsWVRlS3lxX3FaWTYwZ1pVb19vV093ai1nVkljMUlnUWFZMTY0Tk1pcENteXJGX0NKNnBESWxta05NRjVEMUVqT2ZEbVUzR3dhVGhzb0hHTWdKa1l4N080MlBuc05TcDUwbUVtQmh6SnJfOERjMGk4RnRPamhuNThBcFpUMnJNbzd4U3l3bWQyRlQ0eUtnckFOekE1Y1plOUREYVJEY2VqWWVDdGI3MkszRm5iWHJUcTV3ZGtSYmItM2lJNHNudXJrYWNjanBEeWdkTXFwZjR5VS1US3g0LTBiYXU5Y2FuOHVKQnEtSXNjZkNYSVBoMks0dHVTdVRFSENaWVowek5IMnFtajRHbWNkQ2NrMURPMS02c09wX0gxTEh4NzJUVTJDVWthQ3Y4ckV0Sjl5TEswNzZ2MmwxQV9TaklacnpkczZBWW1aSGQzSWpVLWc2MHEwZ3dWR1owdnNRdFFWS3hSV09tTzc1VVFPY2VWa1FkTVRoczhSTGJxNEoweEJWTlg2Sm5mTkpOYkdXRHN5ZTBfdUlYTkZwUVIySS1mZkV6aUhEbC01VDd4OXQ5ZEd1TlpOR21kNGdmNjFHWW55RTFVNGVQSkRETzhEelFvdXF3ZWlLNVZLZ2JjVmgxb21ja3h6bVI1dUR5TGwwanZaUWJsVVllUnJYWjRhTHRHbjRGcERrSnBXNUxSdzE2Nmt2QVhfYWppX0t6NHh0OTJXc0JRWXhOa1JDR29POEEwbkc0X3VBVFJST25DZkM1TGpSMHlVX3pKRE1ONFRjNUtONTFnZzRBT3EweEZCWWtLREpFOU5pb1N3QmI2Vl9DX3hnem9YazJHZ0pyWnBobUItVjJ0bGpXajd0OEJCaXZiN1Nzb2Z0WDZ1YThfblNfM3R1LVZpaHFlWWcwT0pFeE1DUE9GdXVzY0JObUlRaVRpb1U5ZU1Vb1JwbGdwM2ljZTdnaEZ0Y1MtRzVldkxPR2Y4ejV2VF9TWlY0LUZLczdqXzNycFNQd0ZZcTVlVXhXc2Ryelh5YXZyZnZVMGFaOExSSG1QYnpJWXphaS1iTjFwOG8zSWhiSHN6a3gwUzZ5WkNtSUgtTFRjREZZWTByNzdrUGlLTFN4cDdzZGhBUURheWs1NDktZDFTWHJNaEJ2UGVGVHhkYVRZV0VOODFPbUFIcHB0MVRGMzZsVVJQS3lzOXBJaEdYUm1BaWQxMjExNlcwZlhVN3I0SkpRRTFvSzA4U010c3J5ZGtYdVVxbFoxRkxZZW8xM0JSMmNJVUFDWllJbHNCNFpZOVRZUzJyNnZyaFVDOVRRRU00dFBsQkQzaTdGZW13WndiOURoQms2enhsX2FnQkZkQVFpck05SUxlWjlBcUhEbFdCb1FRaWdBakNFU0xpbnpFUnJ1UDY5ZGxhUWw0cnl6ZmdwSHRHYkZZeW9qVk41M0U4SjZLUjNoa0lNc2Vvc1FiNkIwcWJRa2xLU3owc0JEZndSMjdOT0lGYkZscWxuMDhIV2FWRlVWa2NGYVJ3Um9zTGowTDZmanFZZ1NIdzU1TjNKNHAzeTl5MldtZkYzdW40S0pYS3FPQnl3QXNKd3VWVWF3YTZzVE1HTlBrZWh6NXl3T0hQYWRZS1ZKRm0wYXB5aTU4Y0MwOGRQNnhnRkJSWEdXUEhMTWNYVUF2UmpDVlhGOGZSVjh2ZWprODZmVnhoUVNlSzl3OHZiT2lOMGJvSTBKR0JSeHNqdm9XUzB6emVCUE9OeWRKRWxGa0FNMVo1TUZ2aDhOTmFNQnpzdXk2MTlJM1ltOGplNWpWT3VZRU1mR29VYjNXMFlUVkpMbHluQm1wcktPcS1xV0dzU1hTSkN0M19mbkhfRC1iN3EzeGtlRzRDY1ExRVE0ZGwwVjNpdEpWWVVJOE9fODh6djR2UllWcUZWOWJzbnk3OTk2ZmlUaUxJaENFQXg2ZVc2ODJaR1ktX3F3YU9fdVlqVnFFZWdOM1BwWVA0RHdKbTVCQmpaR183VS1vNEVyOHl2dlV3NUNnNUI1VnBuRWFlUWNwYTlFc00yaGRYYkVCellPbExVS2ZiYTM0bFpZVmdzMy1haTBmLVVrWHJvempDeWREUXNPWWNVZC13X1dTaEVWeGRwSXFhY1Z5TlFEdEtIQkY3d3M2dFY=)
        CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmg2dlVDUjZrck9rLUVqWmpIYUg3dVF4SnBNZmRsU3lKZnFueG5JWXduMzNxd21BaklxZHRhbVlnZkhCYS1kLXlKaEN4V0VNN0dULXp5d204RTUyTWFvbGN5ZUstdTh0NndGVl8waElCUGEyUXlGQ2s9)
      flutter: 2.8.1
      xcode: '13.2'
      cocoapods: 1.11.2
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: develop
          include: true
          source: false
        - pattern: master
          include: false
          source: false
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - |
        # set up key.properties
        echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$FCI_KEYSTORE_PASSWORD
        keyPassword=$FCI_KEY_PASSWORD
        keyAlias=$FCI_KEY_ALIAS
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - |
        echo $ENV | base64 --decode > $FCI_BUILD_DIR/.env
        echo $GOOGLE | base64 --decode > $FCI_BUILD_DIR/ios/Runner/output.json
        plutil -convert xml1 $FCI_BUILD_DIR/ios/Runner/output.json -o $FCI_BUILD_DIR/ios/Runner/GoogleService-info.plist
        rm $FCI_BUILD_DIR/ios/Runner/output.json
        cd ios
        rm -rf Podfile.lock
        pod install --repo-update
        ./gradlew assembleDebug
        flutter clean
      - flutter build appbundle --release -t lib/env/production.dart --verbose
      - |
        # generate signed universal apk with user specified keys
        android-app-bundle build-universal-apk \
          --bundle build/**/outputs/**/*.aab \
          --ks /tmp/keystore.keystore \
          --ks-pass $FCI_KEYSTORE_PASSWORD \
          --ks-key-alias $FCI_KEY_ALIAS \
          --key-pass $FCI_KEY_PASSWORD
      - find . -name "Podfile" -execdir pod install \;
      - keychain initialize
      - |
        # set up provisioning profiles
        PROFILE_PATH="$(mktemp "$HOME/Library/MobileDevice/Provisioning Profiles"/ios.mobileprovision)"
        echo "$PROVISIONING_PROFILE" | base64 --decode > "$PROFILE_PATH"
        echo "Saved provisioning profile $PROFILE_PATH"
      - |
        # set up ios signing certificate
        echo $CERTIFICATE | base64 --decode > '/tmp/certificate.p12'
        keychain add-certificates --certificate '/tmp/certificate.p12' --certificate-password $CERTIFICATE_PASSWORD
      - xcode-project use-profiles
      - flutter build ipa --export-options-plist=/Users/builder/export_options.plist
        -t lib/env/production.dart --verbose
    artifacts:
      - build/**/outputs/apk/**/*.apk
      - build/**/outputs/bundle/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - '*.snap'
      - build/windows/**/*.msix
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - jstache@tutanota.com
          - mustache40@gmail.com
      slack:
        channel: '#general'
        notify_on_build_start: true
      firebase:
        firebase_token: $FIREBASE_TOKEN
        ios:
          app_id: 1:493864449137:ios:bf5c6cdc168866d85057d0
          groups:
            - kiatsu
        android:
          app_id: 1:493864449137:android:75b0b25472f222c95057d0
          groups:
            - kiatsu_android
      scripts:
        - "#!/usr/bin/env sh\n \nset -e   # exit on first failed command\nset -x \
          \  # print all executed commands to the log\n \nif [ \"$FCI_BUILD_STEP_STATUS\"\
          \ == \"success\" ]\nthen\n\n  # iOS Firebase App Distribution CLI\n  firebase\
          \ appdistribution:distribute $FCI_BUILD_OUTPUT_DIR/kiatsu.ipa --app 1:493864449137:ios:bf5c6cdc168866d85057d0\
          \ --groups \"kiatsu\" --token \"$FIREBASE_TOKEN\" --release-notes-file \"\
          $FCI_BUILD_DIR/release_notes.txt\"\n\nfi\n"
