# Automatically generated on 2022-01-21 UTC from https://codemagic.io/app/609f571800a2d305209fe46d/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  default-workflow:
    name: Default Workflow
    max_build_duration: 60
    environment:
      vars:
        ENV: Encrypted(Z0FBQUFBQmg2dG5VdlBRWDBONGstSFkzVmJGNTRqUjU0SUkzZmJ2VmgzSmNnQ0pCNUU2MVZOdjVBRWtMN3RBUjd6bHJFOVlqaERvdzJJeDBHRlBWaHAzbHpXOUR4SnlCY251WFJLWW9Wc05INHJ5V3E3UUM0Yy1mcHdKZkNHU1ItWTdfMmN3ZFRPZGM5M0diXzNETnN5Q09sbVZfSW81VDlrYzVULWxKVjdENHJoR0tFakVJRm9idWdOVk5CVzBnRHMwZWxlVXhyelU1VVRJbkdDYUNheDJPN2NvanJSUEw2ZGVaN3FpWjhXTzYtVWhNNllXWWVUUEszdmxpdVByVU1Gc3E3VktaQzhFQnZUZ2pJcm93Q004XzRFQ1NYYTlpeHpRNi1aSXBFVVNmXzYtLWotaEFhbkQydmFmUXd5Ym5fQTR4UDJDVW9uVmU4dXVzWmRxMHhtSUlZWF9zWDhmY2JHd2VFLW9mUUhjSURIZlA0QnRTbDJ3LVYtS3FGb1Y2bW9YVE1leW4yd2ozSTlJdllJTjNKdnAtT29ma0hPUVdnRkt0ZVlyODFtTnJzTndrdElqblQ0cnZnYzJOSjVJWkVwUTY0MzBBOW5CV05RMFRQZlVJcWVMaEJ5ajJyRWgyVE1GbXhYSXJsdDNWSWlNOGJ2eW41WkV4ZlFERjUxU3lIYkt2elE5MksySEpham5qV1R4LWhXX3dpeGtfeWVVdGZ2UmZzSVZMbm9fSFBzNV9yaUx2NmVLeDFOOWt1ODRudC0yNTE4U1ZYV3VOb00zazRLQ1VFSHU2MnlJVy1MTzR0VTBKQzFSdmstQmR1cmtMQlgwd2lpMnlGZjcwR0txNS1ZQ0lQdkRIUjJ5b3hLTTZsYnptSy16LXZGQWU2ZDdCeGRIS214TG8xbWd4QWJzbXBQYkhNMWVLMHpBOG5xQ3BuNmg0NTVXV3BzaGZGUXBqU0hMS3AzMTRKZXlJU3pxSlpzRG91U3VCMlBubXg0eHE4YjVjSHhsX0pKZnBwWnlTY1BZV0o1Tzd6azNqOF8yWWhQWDRSOU1aSUJ3V3l5SE5TZmtnRm9lWjRKQjlXUy1GVU9nUHl2SjYtZWduLTgyUUFwdjRuVDV3cjBrOHFkb1dHMmU1UU05LUs2dHNkV194ODc4VFhOT2Q1a1prUXlBOUxQN18takNsNXpEUDhoQV9qZzFwQ0VGTmxBbUFzLTVOUHpoUVBidzRiLWtaTmlvWUNBVS1nb1V4TU14bHBuRkxEdklhZkdHVVZXU3FHR21lM2ZUSE9fWUtVMUZTRnBuM0VkV1FneXk1eUhWblNobXV2VmIwdGJ2N19fZ2ZMcGotVlUyU2JUUjdWRUtUdVRmMVN5YVI3SzJDN0t2SEVIT0N2c1BTNU9wS0F6SkZnLURhZ2FieGNvQUNsT0syT185ZHNPb1J6Y05HSGxVdy03NUV6UU9uNWlmdzFnZUdJSXliV2RPck5MWjR3WGRnU3lXcml1eVkzdFk4UlBuczE1MHljOGtiNGtVdEpLNi1aMlF2dnVfWXM1LUVZT2o1emx5alIwMHFEc3dPQ3l5bzYyakp4dFZWY3ZsdUc0VURrY2kwajhQSWJCd0E0Tml3TnRpZ2s1ZnJIRkpZX3VQeVJ3MXNuT3hqSXZ2bVkwZnBfaUJFMDFiaGdDV0ttWmRjZ2VLd2h2b2N4YmRneE9LcnZUTXdmMXFlR3djYU9IYzBOZjh0aVAtNXFtV1VzcW9aQ19jbDZkNFRVZ0dOR2tzbU1ycmJUUUstTi1LVlVmZzdOWWplYm50Rks3M1U5MkhuWlJjMGtWT1M0ZkF6NFV1TU1jNmh6WndoUld6MnBqWE1OZWlJZG92SVlZNFZjd1hNa0FwNXBPRklkR1llWjRPRDhtSldJWnlkVkl1SGNObWN5Tk9tcWsyR3VscnF4Z1lRVVR3OElERDVpUmhVNDc4YXNfNDRjbWthSnBSWldIbE9VMC04blJOYVYyV2hWTkhieDR6Y3dYc3UwbllzbDZfeE52VXQyWHJtcXphSVJnOXNoX0NsbFRxNGlMTjJjOWZwSnhrVXJ2ckhTNnJVZ3ladzFWT2k2cVVPcTR3X050ZmpUT0c1ckxnSnVTWjUxdHJHNjNDc0VjTUlhcmE2ODlKODZqTVZnOUxGQ3lhZ1NIdmgtak5kck16Y0duLUxHa0FWMVlJLTdFcHlCNUM4bUNtRndhOGltTFRVQWc2LWthYzhtVVNJTkJHeERKNnY3WnZiUlF1X3ZWZ0E4dUdIWDhfU2VNZ1FyeVpqZ3A2N055Qk44N2JXeXUzYkJfWERZMm5jNlgzdm5wSW5ZNXpwQmxoYmVxUEtYV3VNTzVfMnFnbWdhR1pTdDFNSG9SUGVSS2dGalhQdl9pSHFWRElpY0o4Wk5yUkthLW95VVNvXzRaVDZzalVKUTBQellMZm13MEt4YjlSLVBJZDZDUGU3NWg2SFQwcE52NHMxY0lBN0ZMRE16clVNWjBBaDNFTjR5czl6V1hFVmRSc2pUa3RLdUVienZjUFFLSm5YR09fUGJSYlZra3hjblNDR3h0UXFNbmJrME1kOGNvVmU1MEhBQkJ0UWFjS09Qb2YyRlFBUktLcWQyX1hQd1M3Z0hoUVFoUzF2aWNDYWo1SW9JRzN6Ym9YaVd3OEloN1gwN3lGREZJdGt1NGdlR1VuVHJxc3pXX1hHWFY4RVdWZHB3cEZydHJJT0dPTHJzMGxyeWRTQ3ltaEc5VFYwN1Z0WXdPMkstYTIwWC1DTnJFT29LMnZ2a25Dc0xZV2xUd3lEUmZXWEtzbjlxR0pWaGhRbktkUkhtWDhKcFNDODVySHN6bUVtak1OUmFKd2hKdkdJdFR5d3gwWldxcGlwMDNHY3FTZUFDMExObWJqRjJ0aU1UU1kydWRNSmxXWVRxbTNLSUFIZ1Y4VDZraWlxOGFpQkFXNVRHWG5FVkFTRXc2azgyZXFSTDdVc3U1TndWN1pObWZNdnJXZ3diQVZQVWUzQjZTLTk4c0p2N2NtbVZqUWNEWjAwSy1pV3dGMUp1TmVmZVZMTXhWN0tkSlQtdmZ3eUIxeWE4TUZhcmxwU0Z3QVQzQ1dIRHVKdk51LU9uUDR6UUFpNW5BZmtYYjIzNHF5OGdwLVRWcFFobkp2cFFQbGZ4TnU4VktUTW9GLW5rYWFER1VMb1N0NGFRM28xN1A0bDZaVlZOS05ZTEJNYi15SDRZa2JmMFlObnhLZXB1cFlzYjZVbXEwSUQ4aFBQU2JZUUoyTk1PNi16ZWNmS2VveVlyLTFDQmp2ZTRzZ3FrRllDQWh4MW9sa2NIQ0x0NmloWFNIbE0yT1J6cThxVjFtN2dnVEp5SGdTZ0FkQ0VWOWNPYmJBZDloQm5fNm1pc3FZdVpBcmd0OEg2X1l1NUlTblY3aGlUNVF2Y24wUWJJeWdianVoSlB0M1ZOS2Y2amVaeFE5M0YtbFZUSkthN3d1dVJ1SnlDdjh3XzgxcnNlSG5ObndrcGVOMkpmc1hEeGo3QzVzUFBIMEU5R1hTRE5Ud0MwZmp6M3RuQnZRVVJXQVdEQXRZdENyV3EwNnZVSlI3WHZkRTFGRXI0cTZ2Y1E0S0k1YWlpUC1CWUdzaGg5VzBPZDJmeEVPTFBCTE5IMEJQNVp5SG9zT2dfVmNpelBUUy1iOEhIY0RIdHF0TFd5TDFmOXFtdVZrSHN4Q2FXbGlnb0p0dWRvUmw5cUNkRm83MXg2a3VXYnVrT0lKZ2k1WEN0SjF0ZkVkOXpzbDNQU2xpQnZxLTg4ZndOYmkyQV9wWDNUUXNoblB0RXQzcktVbGpfWmJ0Wm9hU0dUeG9XM3NZR3R5TEdGN3Y1RTUyelJqODJPY1FsbWpPcDFIUDRpdnV5Skk2VjJMUkpMTUJhaWdJM0FPYkpLaUNET0Z4bi15eFctM0s3cEtBMzYtbzZqR2xXa19UYWpYVXpzRmhxMW9reDZSZ2ozQ0lSbk9Dc1dYaHF1WjA9)
        GOOGLE: Encrypted(Z0FBQUFBQmg2dG5WRDB0X1pHaEVFbndRTTU0MVo3TFJWXzR4a2JSRml2QlVOanBYVXQ3dE1aSk1vdHNIUjJpU2ZJLUpLY1JZeFNGTk9GcFd3X2MtWVE0eGZNa0w3d0ZGTWFJRFVrVG0xWTdqdEJzTmdONUZLM0c5MjBKSjVVVkVhRHRtR2JoQVVZN3NLMjZrdTBwLUZBU2RfenQxQUl4Z18tejR5aFBTQnBscXRSY3dXSHd0SlB5U0FJV29DQVFyb0VwdGtadGxwS1Y2SXAyWjdiRkRhZklkWmxtbC10SEh0cTF3YW9aS3dTUG5yUjZKMUx4T1lobWdNaTdOOC1Wellpak1MTzV1WjJzRm55MmN1OG9ibmt2cmJoZHFxQjFDSWVNR2NENTNUTjIyUDFKU2wxQ2liNi1TVEc2bVZBWkdHTUpoMW1xZE5rczRyTmFoUFJYdktfaGdwemFyaDlQbnNrU1FSc085QmZ6YVpuLUZNdlJEY0k1MnVTZTliMjZlUEZuZ0FGOEc1Z1hzeE5xTUlNMWdWSFAwVE1GTEkyNEdEWHZnTzJzeUo2R2VHUW5ZRDRDN202T1NsQ0h4Skx2R1NrT1pIQ1p2M1hzZWZKMFlkVkQ3MnlpNG1HdG9ObVZsTENMUzNIZVJOYjd6c1hkLTRCVWI2WDZBZWc5MElZZkJ5VWlHaW9CTW02U3lPMThVQnh5UFM3RVhreExYaV84OTktbG5sdURUbFpMSy0xX25zX0FzSlk1VGhveHhlRFhpRkttOHEzd25rSWdzTlRqR1BmbTRDU3VfSVZXQnRvNkM3VDF3YU0yaUxfQkItcW9zcEdwY2hwcldGYzFYdmt6RDVhQ2xLaU5CNEJRTzhjM0g1bHh5eFFQd2RtV1NyMzVmaTItMUhCRFhrcDhsM2tyREZWNUQtM09oWWxFVEo2MmR5cWtFNE83WE5sTUx2QXRwRk44M1laYjNuNTdNYmtUeVFHNXV6OEQ3dGZmSkJ0WkVVYTNuZ0pmT3g4WHNNYUl3UjBrTmhmM0hSNkczSGxNeDZKdXQybFRObzY0WWU1T2J5cWFkbHpWU1JBQ0FrTzk5T2Q3S0M2MllUX09PZEZDejJsQ0NUcUwxNW81cHA1czR3MmxvMmVTR1dqcHl4QmdfR29ySEttT1RxN1llOE8tRDFYSEloLW9OUGh4Z2d5T0l5YkNzREt2Z1Z3Njc5UmhQQTBmVVpFRVowUmdmM2lhaEhnbEo5TXBwZjduMWl4SWVxckw4ZkpSSlNhaGZ3Z1FRNGN5YXFBMEFPMWlPMzdBeG5Mb2did08tS3luRXQ2VWdEb2Z0OTFDb1RtUkZhN1NTeWZiQXhBaC1HNGFTenIyR1dNSXRmTWVNNjNOYjU2cVczTl92bGhyOXFGZjc1V3p1cHFBS2lnNU5Ual9LWXRLeW80b0lVcm5ld3JSa2VoYkp4YVJYNmVLUWY4ZHcteUhsZFc3SjQ0NmZpTzVkYmEzRlJnVk9obWxLTVRQcGZ5RW0wei1ZNVhaRWlURkZUb1hDalRZcTQzNVBZNmQ1TGxTNUVWdGRoOFQ4VjV6a2JTVjd4NVNZZGJCWmRMa1U3WGdHeDI3SkFuZDRvN2FDalZOMU1QZUhIN2o4Qk4wTHF4aVJwSHlkdC1mSGtjUGg4NEY2QUM1dnpwbWQ1SDlfNF9hRS0wNUhwQU5Fa0pVSGlvbEd5Z1d1SWxsR21icjdhWm1HMnBJZFJiSWQwaWN4emlwLS1IdzRZR05nOGt0LWtBbTRLVHlqZDBkVXJ2OVBoODM4b0dyV056MnEyeVN3)
        FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmg2dG5WTXplSEtKa3UyNmwxVEZNeEFjSzZncjh1Z2tnYXNTakUwSVktc0VRNEEyRmZOclJiQmc5NzFYZngyUlo5ZzFPcUV6ZUp3Rm9wRTkwLUJKNy1uWlhTMGM4dktsUVRRNEVTLUtacnYzVHJNNy1uUUxDVUdlX1Y5NTVLSHpPMHY2RWt6WFprbUU3UXpqZnFTZzFuRXRNVkVCM28zOFBocVYwRlJWQm12YlZRcHhVZU9hLXBxUjl1MWhwaXY2MHVKWTNSdkRjMjlrNHYyRzktMVN0YUhMSHRtQT09)
        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
        FCI_KEYSTORE: Encrypted(Z0FBQUFBQmg2dG5VUWtRVERrX2F3RXZTWjRlRVdlU204LWo0d0pLeWZsbFQzQWpna3Y0UHRIWUxfeUxMaWJQVWdpa0s2R21tWl9reGtDbnNUd2E1MWxqNG1QVmlfRU9kdm5hYmhzYklxNEpFOTFDaTdBX3RkSml0ZjhndE1VdDFXandMS0xqVWFmN18zZTcxenlMeTRnT01qSWtIMTA1UjFBbWVTWXdDa1BOai14eEpQdlgtWFBLZ1pJTDNYMTNnY1VPVWxNYmt0N2otTElqQjdaTDNpdTQ2REV2eFFQYVN2bW5iaVhYYkpwQzV6eTFLaDMwb3J3UjF6ZFY2aDA3eU15Znd4MWNKaFZQQ1VnWElXZUtBUDZsdDNpbG9qT3U1eklZd2FWZ3NCYVBsVEh0N3F3TXlOMnRJSE8tMS1Jb3ZoOEszb0R3T19qMXVKSmRpN2luSnN6U0NxWDBFd3J4X09wWUNxbmd6Wkc1dklMXy12V0hCYk94OUpGaWx3WGZOTGUtM3hta0FIWThDWW52SkdPSVMzLV9TTU05YmQ4ZlEteklvR2ZzS1NQT3publhwOGNYM20zQjV0QWFQbzFkU1h0NzllTDNBQnRvRmJnLWR2N1lCRUI3SXRBNm1weW1MZ1c5bmhEc0NYNjFzUlp5Z3JvQ2dRQkFMYmpETm9tblFZQ2YtYlZaLU94THZLa1NadDFrYTVBT08zaHY4MkV3czIyUGtOeDc1c0hHWTBPbzhXZXE1MUg0c1FhMldTeHQ0eXZrMlVubGRhV1NHdWtrQUJkcnVFc3FZUG9nSlUwWnBzbHFCVzRucnpRTG9UdDNSdU1tWkItV1hxeERZWTN0ZzlPbzNXUV85N0FMOFBVYlBNOXVLRmd2elllWVNMSnliUzNnREwxaDNpZFdWUUNjdTVrTnc5UERMc015Xzg3amVkTzh2TlBYM3N6bHh5dy1rT2JqWVJPQ1hrVzdLT1hmRDNrTER1RVI5NnJWUVdnZ2lZbzFHVm1aaEdIS05ILUJSbW95VmNpVmxkV0owTXctODd6R05ISVdhZ3lMMmhLbnlwMzR2cVlSWllnbVI4S2s4SDVieTliNHQ3WUFfM1NlRlRNUmhNUzQzcnNaaXJzWGJtc2l5SWRyRkoyMEEwVEVVajR4YWpaUld3N0I4RzdwZ3FDMEJSaFh0S3AwNXFhLVVOM0lwRm9JUk9FUDhtWkJCTm9NWmc5blNjY1BDam5Ob0xJbU1QenRJRjU0X1p3SVUzZkg1RmVELW16UDMxSVpjY0JnWnA4VThnSlNtcTh6d2ZjbXFza3hOUE1yX1ZUVVFhemdYVnQyem5BVkV4S2N5VG1rVXc4VlB0MnBKZElEeDJYWEU1QzdHT0RhNHNrdHlSVmxieHkzZlVlMWNkY0k0UXR6TDRfX1ZYZVgxempNcUIzekhScmFJQTQ0SVVLSDlQYkxJMzFsWDZ4X2g3cXJDLXhCSHBQeFVBaTBaT0lTaGhqYkV4RmkyaHJwbmZNM1o5eGdENzhIeWR6WTZ3aEdWQXdON3JzaUM1N3BqOF9nUDBYLWNRbWdkRWRoZzE4aGh6d0dDb0k3ZTFpMWoyVW93SUxWV0t1bldRNmdVaVFQeFV4Q3Rkb1o5anhmMC1vTlZ4SGQzcmVrcDY4cjFSeFI0NUR0V2tZTy1jT1E4NG5rM3dYelN6MDlEbS1QOXhYaDBxMmh0c0I4TVNkazJLUF80UmU5OS1EamVWZDlONjRfaE1DeGxTOEt6dF9XNXZwdkx0WEVkWHdwUERwbl9kS0pYOEYteklSMlZkNkRZakozdDNuOEZHcFlGbnlTUWxQVGFwYlBuRTZJSkVncTlBTmVmUmdWczNhSWdEQWx4VUcxbHlZdDFoN0o1VXp2SlNldno1R3ZXRDVkN0x2NGlrd3diSEpvR1FzTXEtcEV6ZTRyV1RSdnhfdzNWd2h6dUk1MmotSzlYaC1kVE1TVWxoUldqYk9VaWJzQl9ibGdoTDNhYjFJcDM1dW10NGd5WFZxUEI1V0Z0czV2M1FOWmY4M1JPd0REMnhpY0lqQ0RBTkF2SGhCY1BZNEUwM2NCRzJyZmxQR0N4Qk9xbHBaWFRZeHprZmZzWkhlQ01Fb1ZFVGFkcm50WE9iTkExbWs2SGgxYUdtT1JpQUJuS0RwM3YwblhNTVJnanJ1Z3htV0c1dm42NUZSXzRHQmROTWtFMHZ2amVXOHV5c0VydkdSeUhzclB6UUFmR1Z1aDltakU5Vm13bU1NajJtZHdQVGx0cEN1MENSUjdCOHM4QmFZQ0RPdVdHMElHWEtFYjllZGU4STdjN3J0LVFXQkowNFhibHpHVzVIN0g2bmdxdUdxTjktdmNNdFFjaVNFQlY5WDNZcjNwN2wwWE1iX1F6Q3dVT3RadE5XQjRHNE1qcUlaSThBbTI0cnZzcGNvanJKak1wOFhjSVU5UWgwbXJZWXluR2dpX2pXRkhqNFhVTks3MWVFS2VwaDRlWThUSFR3WWYyYVh4MC13V0lTRVhJNW0yYi1RN0Q2VXZrWXp5MF9iR0FMYzhQWHJqSjZBcGxSaWZhZzlkRkNBb1Fpbldmc0ZUbnVZYi05b3dHRnk4Q0N0Nm9TZDNYOGNUdFRDYWJMNmRxOWZoMnotZ1NUVzlCMzdpWmstcDRmUngwVld0M2pPelJvOGpEMkNpYXRteml4U1JLSHNkOUNvWG9ZUkI1UU1OdGdJbVV6cGpsQjJCZEM0ZG5oT2ZKaUlyVG1Memtwemd5Z3huV2ttLWV3cmlOVkZsVkw0SmdYQW9FZEVQSTBydWViWXNjODVZUXN1a21jUEdkRl9Nb3lYUFZFYTJCRVBkNXU4NlhjN0FVa19CV1NPSnM2VWNEc19oTmg3bUZRRFdITVJlcmtOR0ZpcEFEMkxtM3VhSjBFa3lXZ0lQZGVaRERYRTltcFM2MmpSUkpuOU1KVmZ6RHZNeEwyOGRmQ1hLWHdTY1IxMTdIYkxJSUktbEtndzF1SWlmazFtamJQcWZEdFZOX1VwSzR4X1JSQlY0N2dKaTRsNlBxRXF0aFBzN2FXcGdwempBWllnVDFNYnpKdk9Ubmg2RHFzQlg3WldaUXI2ZlRmOGxMOUVHVHpHb0dFM0h6TEUyRVBBa3paVEc2YlZrMExxSk5JUGlYZlJuYUx4dXpTR2N5YnIyTk1KbjY5cXJzQS1qQlo5cU9IQl85U3FXRFhscjVhbHhkOERVQ0l1UzlrUlI3bjg1TWtyTWVacUFvSDN3QW0wTnBSLW5SU09Ua3N3czhBXzZSeXk5SXNhZXNScGxwdkZDb1l2TFFvV2ZjaUxVczhxM0NiVl96WWIwbjlFeXRPTTZYd0NoZE05QkliNnVUQWVpaFdmeE91LTI0WFF5N3ZmR3ExRmNjMmVvcHFBOVBabllEbXZXaDhjYkt1blZ3OG9JWS1oYWw0UHFLLXphRFVoY2ZONzJId2g0Vk5pV0djdTRYaVRIZzhnd21FUUZYdEpOM2JuMGUtajhxa1R6OGJ1LWh4ZUF0dlExRTNIRGF2RU5WWTcxTUtvX2pHOVk5Z3ZNa3JSZ0JIaGFVTTh3TVVEMEgxT1hXUUZNaXF6RHJHZHEwdUV0VUx6bFJnaldxSUF5ZFZUN3BweFRmbkFFdFVmYXZKZFg3cGI2cVdsNllJUm53aGRuQjZMdUpiNGdKUTVoTDk2QUVOazFwUkdSTF9PclFiOG50TFFnSlhudFBsT0NPSFNqeTRlSzVlSXJBeUZWbm94eEMtUDB0ejlQNHdYSmstc3dRNjlaWFk2azF6Z3RCSDFTZUwycHVNR2FyQ3ZINEhVUWNiTGlhWjc0dWZiMWo1Yk1kb1R6SUd1RGQ0czV3XzN1S3A0WTA1eGk1eXByQXNMVWNjbnBSQTZNQmF3a0ZUc3Jmc2hhUmppN2R3czNjNUJ5MGJrSmNFdWstTW9HOENBSXBzbVpzbHVWaW1QMmNob2V3Q3pESnZST19GMmdjX2NWeFF6VjdmZkVtMDJNSGl2WjJyRFgzeU9pdXhQTGZiakhvd0RINHBDcmNOQVQ5bGVsWWVmbVBMX3hJVms2alJfY0Fqd2hFU0s5UnRQXzAyc3llMUNGYWpPektWaHN6Tm1DT1EzWVNnSmVUemUzTDNZSzdqS1NEUk8xVUd1YjdmdEREOUpFT0stMV9vMVl6Tl9WZ3VMSEJMcTBsZTlSZ0hHSjBuME9zRl9oa1NqMTJqdDdfeEpzRHFMY1NhZDJTMUV2ckd4NnNSUHpfWTNmaFdEcTEyd2x5Y3JLeUpOdTI5OVlrREV5Q2FBSHZhcEFTWTRNV1lWNVRKVzhwdFFXU2MtRkoxOWwzNXhCN1lCWlkzX1dacjFfR2R3X25BcVpLYnRWTl9yV0k5UFJjV05VR1dfN2cyMlR4Nm5heVZRQjNaX2FMNGhybVNsVTNSVVVvVnJMajJzTlQxaXl3NUV1eHZDRGxQRmxQbHhRenVjYmdSaVdoMWRfeXNNb1IzOUNIVDZOMERGMGYtRE9HN0RTS3FOaGQ4OVNrcUpWeU1UaVRfbUZoZVdGWUVqeFZ1YTFOTFdWVko2NTB1bTFpM1Y1Um8yc3hjQ19tQ3pVR1dSVzZ3Z18yaktmSVhBeDdoS0ItLVBaNF8wXy1PZXppc3NvYnhiNXJGeC16M0ZwNzE1MV85UTkzaVdueFpkWktiUGFsbUg1RG5Obkg4czVJRjhxUE9wZkU4SkxVLUQtT09Fc3RQWVhHMGFoblZGLXhfWUt0clZ6dTFtbFNlVHhsbVBwLTVhd0UzWG1QRWMyNGpqMjYwdVpuSU14dUVLM0FrNHp4Tm9lOTF6ajYwVW5xT3MtWjNTZEs0d2UzNm1kYTZjbTZuYnlacVFyYWVTWnR6Z1RYbTdQWWs2OFNpNlhNZDdOTi13UVBRWVpsYVFfb3A4NGdUR3o3QThpbDJnVDd5UjZuYklaR2NQUXVoODZYdXZGN2kydkxUdkRyMFZWc1E3SHhNc3BGZXBJaTVGeWJsNUJNZWxMeFpTcGxUcERmcFpFUGRPWjA1ZXRyV0NRWk9EbGRTMWcwQ1hPcWRSRHVib2hnVGxQLXR6M1UxTTlqLUlKWkpsS05NNEFmM1lGcFlUR3RIRlQ1NERPLW1ndUtxRXFqdTI2WUxMWElSeDE0MTI5TWhJTHJvekZ5RG9VNnV1TE1wSi1YYnp4dmNUSVFjaU1ZNDJ2SWhHck9XbXhhM3pPT25fZTB1aU8xdnF5Tm52RlZpQWVidllrUlNvNnU3NTBvNnBoc3hRaVZ0aHdnWmQ0OTZGRFZpQWFDN3AzZXJTVUxRVEpwVDVpdm5uNlBOXzNid3RXNy1XeEZkY2NOVWNJUDhONE8tVDhnSlFKM1NVbkZZZW9IVW5iRkVfbHJfUzR5cEV3T1hzczdtUT09)
        FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmg2dG5Vd0VCNDU1dWd3T25MWFZ5ejJvenNzbnh0cVR5dktNb2xFV0pfajhFRDdxT1dXMWxUc2NSODNaV2JLYW5wSDdiRmQ5SHRzWC0wa3pleU1uN0pQbVZ3a2c9PQ==)
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmg2dG5VSFVzN3hyZmNHOUVhSUxvd1djVHV6YTdaREQyR3JicWxZRXFnVjQ0bmoxNE1BS3JHYzFuQUxrUE9xZlVmNTliaUZFcmhVTEdmZkdKTUdqd1MzdnBVTEE9PQ==)
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmg2dG5VZWNrNXhzT1Z6Y1FiWHVUVWdpTG9YbjdQMktaUGd6dHlSRGZ5ejZSUmFFdWxwanZ1ZUFQTW9mUzFUc0MtMmdBRHRpM0NFQ3QxTlpIOGxoQnRGeTUyVmc9PQ==)
        PROVISIONING_PROFILE: Encrypted()
        CERTIFICATE: Encrypted(Z0FBQUFBQmg2dG5VY0ZVRzk3ei1HbFh0X3I1TEd5N2tEQ2JMT2M1LWdPdzAtZmRCcGhyRGJSMTRpV0p5UFo3OUw5eUJXY1AtdVN1Q2xJV3lBSUVGX1lpYVlrWUNjNUdFM1FsTlJ3d2pPN0RLT2Y2OWRKODFEQmxVbnVBREdMY1BiVFAtMDdaanBWVElsNnN5dkw4Qm9KaGpvZ3NyNFA3R2RUdDR2cTBDNUg4MHdyYU51NktxNC02RXJjM0w0SVEtd193THpQV0RScHBJajNkMkFFamxldUNVT3REQ2plNG8zNjMtT2Z6eWliQ21yQ0cxOHdOWEEtOEdiM3paZE9Nay1SSGZNTXZ2NTItTjFVTWdxT1IyM1dVZmdob1IydjR3S0N0VmJLVzBGT05mc1hJR1F2UHRZd3BsWnVPaER0NUI2ZTlqa3FUVXFqbHZJZlRjMXJPLXRxa016VkszaG1mYW43TEljZ0RSZUJydUJ0LVNEWE9EVjNGSUthUDRoRW9CVGxPSDNJaFp2ZC1rLVNkNHFualNIdFJkcEstRzhRYVJGWDJZY0hnWkRVRm9OU08xdGFhYlZuVEh0bF9tRkVZVC1YQnlZME85ZkRVNnZibHdNekh2Tkktbko4bVN6NHg4eUN6LXFPYUxTeEowQWpabFVrbnVsc3FWTjNSc0xGUmlSbWo2NnhlMmxNVU9vQWRJSXpXWnlqOTlDY3BueF9WVmhzMWEtU0JkRmhmczdrcXd1VnA4SU1ybFJ0OE83M1doTWZleWo3YjBsZUZJRDFhN1g3UDhvZTdaTm1fN1ZVeWxIOW5oQXdiVm93R0U3S3NhNkdaa2M3QjVVV2JhVDVQVXBIS3BITE9Sb0Q5Uk45WmY5bEFXT0tJUXVZa1NBeW5CM19VT3RzY3dtcWZnU1RzUTNWUG9ld0Q1SHZLZDltLWRzNnVBSjkwZ1BMeF9FMEtLeXNncWxkYVJTdDRvdEdBUjhzNEdNTktEbTdyVTZKQlcwRzU0MVl0M3BucWRyUTFybURjSU1kUnhKWUNfV2JySWtkY1BteGp5M3k4Vk9ic1JSX2V6ajZnQlFXek1WaVhUUFVfdnJjYUNHOVJZNnpFLXVrRkJNY1Q2SXdBZi1OT2lzRDc4N2pKb2Izd0dVTkhaMlJlamhMLUNiclNLTzByQm5CVFhmOXMwYS05ZGNlaHJJYlZ1OHlZY29HakNBSTFvWS15aFUwaThnWkdWVlBsUXV1REJMS1JHM1puVmRRY0I2TmZLVFlsQzdIaDdTUmdoSTBIdE5LdVB1R3RUbzU2cENVd01acFJtQ1B4cml3VThvRHhObHVyN3ZraFNfeDU5WFc4S1pxcUhiR0V1cEpRWXZ1SEhyWXVpdnctdzlPNjB2TDB4NzVGLWFnNGdWSjFmYVBaNndmX3I1OUM0ZEpmdkJOLUF0cndCZHJjMlZsQU85ZFFWWDBDUllhTTBGLXF2SlAtWjd0c2doTEJPd1VrOTdVY1ZCZU15VWhtMHN0VjdRM3V0RjU0dkZsZ0MtT0hyLTNIU0JDMFFJRFFJWnNMazgzaWNEOHRVTkphQUNTVEt4ZXlxUXA5QktoN1QzTm9kTmN5cDVGSjcxMW96ZG82VzJaRVJHZFgwbTQxWmRRaHM5dHBJSXlYUzRjOG1zQjAzRTBhejlNQlh3RDRmaGkzdlNxS1BXcDgxblAydHdpOUJLWGF2WGJTeEVkTEtOSTJDV3E1R1l3Y2Nma1JQQWdwb19iUkJWRVBuRHZLcWVoVTVRUjFVVGpvQnY0M0pvMGxIU3ZCeUg4T1UzM1ZTU21sQ19FZXBfUU5BYTJ4dVM1bUpyUGxZN0hQYlhjU0QwaUJicHdFMmRZMzhGTGlUZnY2UUJNY0RqbEItNUdvNzdZb0txeUJFZThPY0VtZHJjT2xzVFdiVFRIaHd3Y24xWDQ2THVJbFo1WDdQVU9IaEZFdTJlRXdnNmdCYlhzWGxIZVpQX3ZfNG5tNDJxWENOZXFLQlJZMEVBUTZyMVVnQWhrcUlRaXAzcllRT094UGVLRE5MNDlBYkJ1ZUxaeVg4X0ltOTByNndfUnlLV1BXLUxjUzlKckRfUVZiZ0NfMEc2bzlLZS1HTUduSnNOVkd1VUxuNmtXN0MwTGhCYXIzNnpva2lVeS1selRzaGd1MlZ2QUZyc1ljTVRHZ1E1UTZjaGpIRFNNMlE4eFJYb2dGVWZXSVdjMEZraGNLcW94MENYZDNMejFRRVlyb0M0YWtpbnJhbVJsZXFUOFVzZ2NsdzF5bkIzUkdsVVZoazJ4dXNLTEJzbkhpd3Y2VU9GYm95X2ZBdGdld1NnVXpSY3VlVjdaSVc0U2dYNmNTT1dKckdrTkw3NmV1blhMSUdjOWpwc2YtTHkzX3NLajBaWEtvTDRsaU9vZUgxeTBjWUpiZ1l5UEQwVl9WY2h3OGlMMTQ2dHVKelpCTzNLcC15QWMzZmYwUFNtcW1NcGRmVHZXRGxCcVM4M3ZYbWJDbGRNWmtEY2M4REVnTzBUTk16eWkyNTY3ZVhtb2FZdFpURUE0RFpmNThFMGFfUGJ3VXF4aE5tWUo1OXZHN1RjSzBSWnhQZlRWMWtRUmdpaFREaTViVTFsRVZ4SXZUblpuRmE3Ymx6QUZpeF9ZMUdkYzM3Mlp6Q3NuUWRUUk00VGRHUVQ1RV8wRUJpek43OHk4RXQyY3VRT0xhY3JTYi1uN254RUE1aFZLeVVUcDdJTGVzaldSdjVtQVdFVGZ6MzFFQzZ5MzRsbmVEU3pzU3gxazdublFhZGFSU1A5UDhtd3RENVFFNHZFb2VxYXhMSXI0NUEzU2tQbTAxelhvbU4zZkI5VHQ3bHYwMXhFX0U2alhNc1ZwNDFHZUtjV1RkUkh5RThpNjEyZ2Y0T0VOd0lKTlBQYXY4V2hoZ0VkUUVaQ0N3Q21uc0pCWU5OQm5wejUwX0dURExkbVlCMnhCSmVPYndTVzBYR3Z1SjZ2ZkJxVExxUy1fNjBrNGV1OFI5UEtTaHFFaUxaODZsTW5uVTlyejZseU5EdmVVd0tZR25qWmZSaFNudkxpVUJqd2lxRDNuOHg5bGxmS1Q5cjIwcHFUcHpuNkhHckZqeDVxbm5LSlRpRjlXVy1PcUlRZk1XZWNFdDRpWXBiZ0tlRG1tS25OZXRsRG1fOXRKVnN6Z0oyTWY2el94bFlUaktrdk5ScDhXVzZSZm5oSWRhR2poeTRvX3hVR0dPN1RBMnJISVRnWVJNM2hwUXctOHRBeFdNdnBVeVJRTU1kOGFQNXhKd1dXV1RXZi1mNmk0M0pwNDVBSmRtbzBhTDRtTW9KM3p4d2xnQlcxWWs2WmNfNkw2Ym4yT3NZMndsMWo1a3lVOEo4aDZnbUxvOEVuMEFRRUlmRktVTXZZMXE2OUg2N3NoMXdoM1hQc1RYN3NPb09qVXZETjB2NXNOWk0ySnMwdWktNnlxOVgzQ0g1ODJNWjhkbjlVMUF0RHFSaWJOclg4eElqeWt3UjJYeFVqNlRTWTNCZExqRDNCUjdmSWtHUmFzaVl0Zzh0YmtHSTcxZi02NzJzTno3a0pWYV9OTDE5X2FBbnBSd05SS2NibGhFSWczMDU1ektOM2U5VFJPVzNwVmN4NXZzRTdwcnpkZDRGRm9lWm9RODFydUd0QS1pMDV2amRXbXZ5SnAyY240SnMyZmJIa00tYjl4VldPUnlReHVQdDloaEJXUU80cGo3N0oxeDZNUnFyajRiNFBDSWJYX0p5N04tdGpQTkotQ2R4OWh0ZkEtZnVNcExmSFB0MnFIcF9RRlk4eXBLcFJRM3YxdVhJb19STTBDYjRvYTBLVVdUalRwblQtWXdIODB3MU5mZGlVWVFkREJvV3FyUW9TQ3J0SkJIVnBVOE9mcTVPMkNsT1BWMmFMUTBEY0RGNnl6UFdkUG1Vd0dZdlpzZzZXaWl2UlhkMjlIMUZjazNrRVdQemxsbU9WcDB5Y1p0ck5zV1FtREJZODVua1hEdGVvMzl0TGlXVXMzMjZvdEx2Wm9RTXlfRDdFQjhGV2IxaXRmNGJ0S2t2MWd4ZVRHQ01seXNaQmpMSzRoel8xU3RjbmFRTmpOQ0I0a0ZoeVRjdlVJWjlnYjZROGlMRnNad3RZT3hsVDVRTDQxd0tjUE9oczRUYUlLREpmSjJrSFZ4V0VHd0hET2hHbms0U0Npbk9kWDVmVjJVaW9iMnozYkdDa0ljcWxxUzYzd0VxZ3UzVzhnQUc2YUlRV0pwc1BlNUpCOXN4ZW1DaWtBQkJxRDNGWGJuNTNuLVhpbUNJMXNyU3NTMDdTLXd2UEdpMEZCcnRHU1JLX2FKNzJMUm9yb3hDZVJCVTVMd0VVMXJrUEYzZVRDZ1hXckt1VGVCNjZMZEtnNzFrR2poMDNKdThDSGlQa3VtODFoSXJtdnhvOU9NdXk0R0ZwTm9sNjBETnoxLTN5UFNxZjVFMEctdGFwMXh2bVAyajhtaHZYNFV3UUFycnZ1N3NtQk1JelRJR0ZRaC01b01Bc1Q4WmZTWWNnNXVqSjh3QVVIMzJ0cUNIZkY3TWNqYWJnRklVQVJQSkRBaE05TGI4VzlxLWFQam9DOVZVMi1CVHZpRFlUU2VMcVNhY0IzNEdEb25EMGk5ck5fcnhyX0xES0dOanpQeE5hRUZmTjhLOTBEbGNCa25wQzdMV3ViMFlOX1AySFpaU0Y2U1Q0a3M5dUFzVXFMV3hHR3k1V3JjcFNyNFFWZTRqTWY4SE1yY2piTkR6VzhtcGVjUGl5eWhrTS1vdUdBQ1hEWEJMRk15OTVGa1dVd081VlRudXh4WVVIQVhpNjhlOTBzbzJhbERiLWRDQk83R3duUW5EX04yak0tMGZDMzZIeEJLSVJkRkEtZDJTRFhzSGhFVjJtWDZWbVIwbFZVT096YkJzYkpDMjRNbURfd2xTanVIT3NKTzItREZPWWlyNkxOejVrUVRCTTJXRl9fM01LS1pOdTVpajhtazV0eGFrUGhCckF2YTFQZHRLRVJIQlhBWmNyUHE0MFNPZTIyeW4yd19abVdnbVl6TDg0VVVRdVRjQVpoaGx1c3EzdXR5N0tjOVpVdFZlNHJxeVhtUTRHWlZDM29oa2lPTmNuUWFDSjV4cjc0NW42NUtvQlhGZFZRMVpzMllsZnZnMHdrYUQ0VmcxT2FpS3c5YmVDanRJZk1BdmdkVlQ2dEFhRnQ0WFI2V20zLUZMZ0pYREFJSWJ1NjVfb2VXcU5VMU5peUlQSk41MjVudXpDNXh5NHlqMUU5dHlkZ2U2MENzSU9SemNUR3RkZEJzNjVwald0dlJBZzBMVkJOZXZEaUFReVJicUIzSGNpZWxaTzFQU2llQ1FPaG1OVTRsdXEwR3hBNmp1QzdLdVh6Ny1pLVBJQlk1VzBfMG1Ca3ZMMW1ZdDVrNEh5SV9EYmx6VnRTX01ucjdnakw1OEFLMHJWNk8zejJfbVQ0akR6VTh1ZG13WkVGS1psNkpHejZsV29JMFR1TlJhNGhvTXhvQlJrTzFzSlAtS3hQbXRXYmx4eTlPX1gwNWh0ZmtWQWxacm9fdmZzSl9TaFdHMjJQaHVJTXN2emp3cnI0VlFFcjhrYnRqSjUybmxnQUFoX25peldCS0RvU0MxX2N1dnBYX2dEZzgwWWcyeGFYaERDTk1OdkIxcDQ3ZG1EMGNmZEVwV2VuYXhzTVNsT3RWTzJlUUlSZUdIWmswODZ5WnVDeWtZYklnWGVrS1oySU0ycHVNN1dQMXpEYkZmQmtPZ2ctNHNxR09wdzNtQmZWaU16ZlltOXJhZ1RUYmtqMm1MQUhNbTJ6OS1HbzZoR01LODZOVzFBVlRrOHc4THBJZlVFS0pMc1FNUTh0bHRkWE5RTExZQ1VEQzFpbmxUaG5uUVE0eXdKbkQ4X0VReWtueW1tdFdWeHladkVqVkl2a2FoU0g4enN4NFBMX3otOHhpNHRtNEpaTjJsWS11RkMtZ0N6T0oteEtKTzJqb3VUZ01jVjR4ZmNIUHE4QVJER3pabDJIZ2plczhlb0xVSUFzTzBsbVJDa2lXT0Q1Q2pQVlcxVFpTLS1kbFJXb2tNaXVEd2QzUGVoRDJNZEZjckNMUElOTWZQSmxsV293RVZSUE9lZGI5UGp0Rng4MllWM19IN3dFaEN6RUhKaXM3d2hFa3VrTWpZSmFjWjVGdGlRNzQ3ZnByX0xtRW1YNmtLdTBULWx1Q3JhNU9GZ1ZnTDdGNnczaS1adTRPZ2E4MnFhUFVodk1nUGFGUTl4X2dfbzRGNlczUzB5V0QtWXI3cHBHTW1YOGI0QTI4RFd1dVdOM3FUZ1JLcjkzb0VMZ3BWdzU0ZFdtUUN3TEVSMHg0X0l1bHExdjMxZXA1MERFY2tyY1NoOUt6dnhBT05HUXFIWmNLS3V6TjBXOXlvOXEwNGRTVDlKaTFvLXJNaUQza3B0bFpjbFVRd0FLeHNjYXVrTk9OWVZVSkVtWkVhZVZ3RUo2c1I1UkJaNkd6a2pFMEtZZGZET1VOS3RaRlpHNmhNS1BEVlZ4QTlJSUtBLUh0TVpGdHd2dWljRUlTbjRHenZLdWtlZWRQdVR4RkJiS1dsTllidjF3NXVTVno3a1d5dHBtaUJuWnFzMUZseFJoSjdWUXZUM1lLSThsbnd1YVNSR3NZTWdIeGlzSUFwSkVsbk5qM1dhX0dHV3d0VENiUnBvdWdNNVI0SVVNb3EyVlkxQU56Z2t4VFBQYzZhSjZmUlBJQWtLMExjVXYyVDd5VUV5bkpRd1piYnFTRl9wQkR2Z0I0NUdEWTdEUElDMzdZenR2VlV1bHNJX3dXRlB5Q1VuVEJnTk1PV29KbFNiZ3BhbVVDeS0xVU03R3dhVTlxcF9lU1RibXpMbzlnSG8wR2pRM2xZZDM5Vm45TlNtVUF5Z05TVHBhaXRVVXQ4Vml2ZEk2SHBhc2ZfNVhaSUl1ZzZVc2NuU3NpOTNMSmphSnZFR1MwbXQwNU1YSWNyWGE4ZTg0WDRjWUhlMjdQMkI4VGRETFJSYjNySFVVNzlOX1E4VkROVFV3dmJ6ZnU1NFN5NGNqdlk3YVg3MHBiQ2Z6aFd2aVM1TlFaeHBTX0tLZXB0cVV2MFBLNl9aNVVnaV9JRFBEeGZ1bVhjemFuQk9fdm1fRXM1UjV6QkZqel9ZT3R6bTNWeWlmZXFFSGhlUUxBdldoMkZwWlhFMUxrclpSaS1xS092eFNjQzQteWk3dDRKczRaa3BYeUkwdnNUcmlSQWZsUUtJQVZDTU9Ja1RVTWhNSVN1cG9hX01mRzFDSmFBWG5aN1llZ1JvSDc4SXI2b1RxMHVia0ZCZVA1b3hvTk1GeTZxd2xpbkFtdHlkT3BjMHpGcTBKU2Q2a0hLMmxIXzdORlgzdF9HNlduZlFWMEVMMW5zTmVGXzFjQkZONElId0lpVV9XNW1SM01uOFpNMWFDam9BWDRNNEkzTlh3ZFp2MXVLeTZCZFZwbzlQMXkwMUxwV3dhT25rQWNRU2JUbV83Q0lJR2d1cDVtRm1jTVlSYS1ESjdWZHluekxEbm5MS05rMlVsZGxSc0lOTEF6R2tWUHkyRVBkVlFRYkhQSnlMSkJxLXlrbWtlRF93Z1hMVWtubnEtd3A0LXdmeXZSaVRGNEJzV2tKckhPb21UQWVBY0FGZlVSS2lQUm9QdFRfdFY3VWJBWl9COEtUdnFyOXNQUHZuVWk5aXJsSTRVMzRrbmY0aHZOVjhDaXdQa0hRZFFhMjNabEZnVFE2dXAzbUhOSzVXZWVIUFEyeTRMU1dyUXRjQzcyY1hnaXJ1UGhqN3FCWmRxeEJXQlJoaFhtQnM1V0l6bXhDN0cyOWRXMmY=)
        CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmg2dG5VeXJVNm9GSG91Q0pndXdmVk5ETTVxY1l3WS16RTJobW1sNlBBdS1IN3ZyZWRmZUNRQjBhellWd0hiaGFpS0FVVTBDWXdwUk4xUU5XakxHWHVyenhJdnhmUHdtVWdUN3F0RDlVOE1PY2JSQmM9)
      flutter: 2.8.1
      xcode: '13.2'
      cocoapods: 1.11.2
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: develop
          include: true
          source: false
        - pattern: master
          include: false
          source: false
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - |
        # set up key.properties
        echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$FCI_KEYSTORE_PASSWORD
        keyPassword=$FCI_KEY_PASSWORD
        keyAlias=$FCI_KEY_ALIAS
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - |
        echo $ENV | base64 --decode > $FCI_BUILD_DIR/.env
        echo $GOOGLE | base64 --decode > $FCI_BUILD_DIR/ios/Runner/output.json
        plutil -convert xml1 $FCI_BUILD_DIR/ios/Runner/output.json -o $FCI_BUILD_DIR/ios/Runner/GoogleService-info.plist
        rm $FCI_BUILD_DIR/ios/Runner/output.json
        cd ios
        rm -rf Podfile.lock
        pod install --repo-update
        ./gradlew assembleDebug
        flutter clean
      - flutter build appbundle --release -t lib/env/production.dart --verbose
      - |
        # generate signed universal apk with user specified keys
        android-app-bundle build-universal-apk \
          --bundle build/**/outputs/**/*.aab \
          --ks /tmp/keystore.keystore \
          --ks-pass $FCI_KEYSTORE_PASSWORD \
          --ks-key-alias $FCI_KEY_ALIAS \
          --key-pass $FCI_KEY_PASSWORD
      - find . -name "Podfile" -execdir pod install \;
      - keychain initialize
      - |
        # set up provisioning profiles
        PROFILE_PATH="$(mktemp "$HOME/Library/MobileDevice/Provisioning Profiles"/ios.mobileprovision)"
        echo "$PROVISIONING_PROFILE" | base64 --decode > "$PROFILE_PATH"
        echo "Saved provisioning profile $PROFILE_PATH"
      - |
        # set up ios signing certificate
        echo $CERTIFICATE | base64 --decode > '/tmp/certificate.p12'
        keychain add-certificates --certificate '/tmp/certificate.p12' --certificate-password $CERTIFICATE_PASSWORD
      - xcode-project use-profiles
      - flutter build ipa --export-options-plist=/Users/builder/export_options.plist
        -t lib/env/production.dart --verbose
    artifacts:
      - build/**/outputs/apk/**/*.apk
      - build/**/outputs/bundle/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - '*.snap'
      - build/windows/**/*.msix
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - jstache@tutanota.com
          - mustache40@gmail.com
      slack:
        channel: '#general'
        notify_on_build_start: true
      firebase:
        firebase_token: $FIREBASE_TOKEN
        ios:
          app_id: 1:493864449137:ios:bf5c6cdc168866d85057d0
          groups:
            - kiatsu
        android:
          app_id: 1:493864449137:android:75b0b25472f222c95057d0
          groups:
            - kiatsu_android
      scripts:
        - "#!/usr/bin/env sh\n \nset -e   # exit on first failed command\nset -x \
          \  # print all executed commands to the log\n \nif [ \"$FCI_BUILD_STEP_STATUS\"\
          \ == \"success\" ]\nthen\n\n  # iOS Firebase App Distribution CLI\n  firebase\
          \ appdistribution:distribute $FCI_BUILD_OUTPUT_DIR/kiatsu.ipa --app 1:493864449137:ios:bf5c6cdc168866d85057d0\
          \ --groups \"kiatsu\" --token \"$FIREBASE_TOKEN\" --release-notes-file \"\
          $FCI_BUILD_DIR/release_notes.txt\"\n\nfi\n"
