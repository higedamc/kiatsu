# Automatically generated on 2021-12-30 UTC from https://codemagic.io/app/609f571800a2d305209fe46d/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  default-workflow:
    name: Default Workflow
    max_build_duration: 60
    environment:
      vars:
        GOOGLE: Encrypted(Z0FBQUFBQmh6VUs1UHowTlFsVUIzdkw2QUN4bnNReUFNSHc2X3lZaU5aeVo0cVpTdEtqVWVDMmU1TVdXdm5kOEZwdUUtbW1HTG1HVzBtaW9JNnFCbkd2c2NtdjB1OGRiUzlYbUhNalRxQktRMWdNQ05DLVRKX3ZpZDI0Sm5tS3Q0UGloRlY5SktXYi15dlZHOHdXbHRlUjhFRUhBNHpRZ0pFVHZTQy03T0htaE9XdTVQM2QtOVgxNDcwY0t2Q0RuZHlzZ0JjU2hKOG5lSkhpN21lemlHd0JVclN6ODE5QWFZMUw1WU4wdU1BOE55WmpoUWpYWFNSS3l0c2I0Uk1KaWE4bTc1dVlIUUhuT0FzdXZaS1V0MUJPaGVUQVhzdUppcGdjMnFRMU9YXzZZU0QwN1lMMGNSYjhhdUNGWWREa09INmN0bUFvby1ZZkNacFp3Ync1M0dRa0Zvak5hM0hYLW1qbWlteDJpQnppdDZOdzE1Tm9rWWtMdmFoSHhTczk1ZGZmdHhzUVVLZ2puMWlJc2pPTVNNcms2WVNGVTZidWJVMXZ4UUstSHMxY2oweDVtSU5jb24wNDU1Z3cycHVDV01BX3VueHlZNkh6eWExSW5RaXFlTjVOWDhObnR1bkVDZ2l6LWhUYjJ5SXdBczJncjR1VHV0OE9DNW9QWUJOZF9rWVY2dHhfNzRkaHBKUE5lQzNDM2ZmcF9hcmlycWloakNKaldZN3FTZzR2eHh5cG5INm5wQmxKaTFoNHJHUTkta284V0xZSnZybXdJemNDV2ZPd3gtMnk0Y0hGODNqOXFEcWVSbE1qbTVzT2VEQ1pKcGJkcE9LUmxQLUJSalh5dU9TcF9SbDJ1MXNyRzVwd0dnVkJYVmxyMVFnZ0ltZ0hheHZXRlJTRW9uZGF4Tmd0bE5xSEFFS1FzUS1RM0lhdE04WlZobGtLNjY1RFZuNkZ5am1tTHpibUx2cHNrLXItaFFmcHZQb1RUNHE0dUtNeXNmd0xBcXl5VHJZRkh5ekhhMzIyTU0tcjM3Uk0zeW8yVWozbnVHdEwtM2V3b3pxemJKdlpqZEY4dGhJS2tWYWNkQ2M4ek1Md3lSM3g0a2E3ZmZhblNZZlgxRGxuRnVGWU1vUnhydEhWd3JyRkMwQ0prbW9GQkRsZXJXMDRDblpCYzdQdndCM2ZRaU4yYjU4Q3l0MzVWc3AzX3JSVWtjYzZ1cU15cFlmdGRLZHhtMVJsaGR3VWNIOU9IVEVJWWMzcTZ1VlNGZVVMVHJQTzdITmt5d1VZU0lTVUI3TC1vQkpZeXpyOGJjNWRLTkFNQWllbGRtRG1oMnViS0M0c3cya0ZfMmFzWHk4UkJBbXlUUHI4cklmUk5ycWUyUDREWWd3YWhSVk9HS29tbEJBMjRfZHRwdHdQWXFlNUx6Z1Y4RDV0dWM0cDBMUEw2R0hhaWZYUktaVmZQZzdlT2RBdTBTXy1XVjd3RFY4em5UdGI3b1ZhZDhHdW5EazhsQ3J1LThrLWVzaF9XMEJoeG9DWHN3Y1FsV2RfUDlkUl9Ua2dVV1dFZzRnOXBoSmdNbDFhdU11VFhYdmZNcWRlWkVEUmtwSjlTM3lFNXNoQWlaOGdDTU1Yd2xhQkw2VVlWSGY3bHEwQ1o1M1U0aDlscWxBMFQwQjZxeGVWOEhmSTAyTEdiZnQxVFc1VXhqQmxzd1E2R240SmxzX3Eyc2tpcWlMQkx6MmdpZDBVNW5feWQ5YUtwa0FBLXBnMDVjdWttUnhxbWxHY2R0MWlxenZKTlJoMDVPMnR5Z09kU00tQ1lITnd0)
        ENV: Encrypted(Z0FBQUFBQmh6VUs1ckdadnRPX0s2aTdpTmdvczBzV3g2V3JodnZPcVp4WVRNdDdDSnptTC02VlRubzNJQ2pDMHEycjlNd0ozWWZZeDU2OHJSeUVSLWVkOU8tN2h2anpaQ1BPRjNBNmEzRGo4TllHVExjN29MVkEwSms2bGFvUkVfcWZYdTZzcllSb2RsaVRuOURCZXdSMFROR3ZUTFJETUFKTlF6YzBUajhoamk0Yzk0d0R1OEV2UFRYcWdPYVRKQmJOaDJfNjVlZEZxMmlVQ1JybkVVTTdtTW54Z3VGczVobXdEN0pNclJBeG1Ma1NDRE85S3U0VU5uNVZCakk2N0h1VmNkSHNJMTh0R3RTcjVXRUhSWnhnd041di11Umh2QlJsYkhWTTB1RXJkMmVnQzFjUEJDalFNbVpLdnVKTkVBXzJreUZEQXI0dmkzbjdDaGVvb3VxUWZvS0FVM0E0VmFRR3VsUlJvSkZXNnJIcjZKbExMVjU1ckdsQUNrR3ZSaW5PWkdwQzllcFFPamVhbE5SMkhEZGNBSFVNczd0NTVpLTB2V1lpcGNyUTJfNDhuUm9LZHVaWDhDSGM2WU15dUhHeVlIU2xFRXNZbjVyalJSYzNBUW1ra01NaE1WLTA1Q2tfdGZvTHhUd3V1QTRpb1A1MjRPM0xKcHM2TFhmWlVPZ29XNEY0ZmxUTzd1RW5Kd0NaS0VGX3IxQTlMZTdRdUdBPT0=)
        FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmh6VUs1am81UExuN2tDR0JQY2tRSFI3cGpPelJOcjBQN1RnemRWYTF4c0h6YTdmTkZUVHRZYmw2NGxnU3lWcmhMcFdKOU1TTnlZNzJtR3dLbjFLRHNtNURoUFdaUHplNTVuU0NfZGNXSnR0cDZKVGZCdDhwN0JnS1QweXBtSllaU0dRQzJzZUgzN3dXRmxZLVBIaTVudjJTNWpsNkduNDRfV3lyTEt1Y2l4MExJS3hhaERxNUZWdkhuN1hWV2FYQ1VuVkFLVXkyNThhT1VUYXZuWWxvU0FPdFhSZz09)
        PROVISIONING_PROFILE: Encrypted()
        CERTIFICATE: Encrypted(Z0FBQUFBQmh6VUs1ZWNCYThGX2VLaXpLU1JTUE5sNVAyUlYxSW5VVjlqQ00tUG5QMTNPNG9iNnFmd3QxSFhBMmhKZUpNYzlUaVoxNlZiREtWaFdlOHNZckQ5LV9UTUU3MUpHSjBrTF9qVjJhaVpXN29oWDZmbFNjenN2Skp4YW42TFA3aDhEbFlVbGMtYXRkYUppbnNIdTVxVGdQZ1NuVmswdm9CdmxpRVZFTmQ1VWxGbVlEQzFFbFpyUlYxbW9WNS1FcWY3ZER2ZHRvUWppbDU5aFVxbUcxdTU4WU5Oa1JMZGtvTXZIeWpSX1N4VVZSc0gwZjNnSmlUREtsWV9FTGoyamRFOGxnd29tbnRCQWpuQlJqOVEzTENiNkN0bFZtdEt6eHBPLWpOOG5jeGRyVmgwcnlMMEUtV3M5ZGZlQ2hiNVEzLVhBXzdic1c4dndBU0M1bEZteS1PSDJkYnpPMF9RMU91NnZSSl9rVlh5TkR3RTFTRnpiMF8yaHhQYW5RVUx2TklVM1ZKZ2FCVkZRT0M0MnliWU1QQUVGQ05GNWw0LUJpLWtWTDNDZ3FsSjBlVGNJOXctMmcyUUE3T3JfWnR3Zlo1cm1DNXptVG5hT19RaVRfS0ZnUXBfMWNvOGRySV9wUmVFcG9PS012V0dJd2kzenF2X29XMV9Wb3YydVpCSVRMSU0tbzVrNWVlS3B5RnVZVS1Wenc0VVJaVWhrYXRwMFZJRERfLThHdEpCbXlXVTRGYzVqT0t4Mk11X08weHh6LS12UGZ4VUFfWlJqY2VsM1BPSU96UXJEZmxfM2ZwT19JdWtCemN5UGRXNVpuUjZUbDdXS2FvbzBaLXMxV2o0MWlOcUU4Y0l5QnpaM1ppNklWUTVJdUI2T3dBVmRHQmNLTklUMzg2T1MwX2ZrUW5ja3NCd093NGFXUXVtSnZBVEdGTXdsdXNfUVFTNEdSYzlldVpXV2R5OU5RV0hwbTlnWThMT1EzX3Y5VWNJaTVNMzcyRHpIcXFTSzRWREY4TDVmV1RpSFNCTXk5MGFKZUVqVVZPUk81MlgxakRPazVhSExnYnVWVmlHNnZqWXQwMmRLRWF3ckNsOFRDLXBHcXRTVlNFV250dXI4blk3bHhKR29WTmoxSVZzcE1MMUdFUWU3Nm1nRTAyZFkyM1NXMDJFVDZkbHJDNjZoQ1N0UDgxWDlaZF8xOTBnMjhlMVZ6ZUpIWnpUTXF0ZGxWdjN0aVcxOVFBbi1mNDBYdi16N3NvS216amdpeG5kYmNBUlllUFRVMFBueUM0Z1dZbzhhNmVoVmNBNXlmbGszRi0wMVNGenFYc2YzaF9mTV9YUDN4VG9UZ1llWXVYMFlrUW9ZcldFb0oyUFYyRGl1YVhfSnpNUjAyZnJUN3FqcU5lTFkyUDlRSUQ1TGFua1o4S1JmYi1fSEVsMTg1VTdrWEVCTGZYcExjRUZ4OW4zdnkwV1JZeVp5WWJObnpCZ2JHTXdFTDhPUG8zYWpSZ0VtdTNQYnVZMWhudndxNGVFc0E4SnZUQld0LUd3UDBsRENVWVNGSXFfS3pNU3lEVVJsSmRpb05hUWNmbl9BdllpVWVvMFRVNk5pejhBT01qZ0IzMklkT3VwTUkxOU5DNjR2Q19iVGVDeVFvNkc2cGxFdF9sZ1FPamYtRGpCSk81ZU1nbkNLeE8xazBiRFYtT044c3pjdnZCSkVUdFRfMUl3U1V6SDV6TDVlRjhpNVBrT2tEOW5wT1N1WHZSVzNWeDVNTjdmZm1jeGt5TFRwSUR3MmpORXpqNEdFM1pGR284VGpDdW5vNFpzSmNRX3N0WG1tTllDc2VQRldHZ3dqWEh3VUk0ZmtlN01XMDFxRXlOdVhPWTFTZ09HeVYzTkFyZC00Ul9UX3B3MUZpdkVHMG5sNVhOYVhWbUpPYlh1bk1FclBCaFVQTkZ4N3ZkamtlNnBDa0hYSWhtR1YxQ1c4cFBlUGhWQ0t3M29Ub2FLZ1ZLYUo1cDlBcUxqWDJaWG1mR3N3VzVBcWdKTktyX0E1YXpXR0RVM2N6UDVKNlpBYnZ5eVlKVHhIRUIzZWx0N1FzdkxQRy1kV3BwYzFfOEdlS0Rlb0RPd2owMG16RlpXTkNJSGF0YTlDZ0xGVTZGdlBxN2xjNTh3Q2R6R3d2UjllUVhkSE5JbEFHRllJNkVKenlZU2xzQUJ3MHExWlRXUTZTOGljb3pHOHF5OTAwMlc0TlZmbHpEQjE3OXNuN2oyc01paHVWLWx2NEp1NHBHMWZFM1lwZzU0Qzd5d01ScldDNU1qSmQ2N1Fodnp4U3Q3ajdQWEpLVE43djdaSHBRTVVXSS1BV1pzejZBSXdnd1FPY3o5Q3VpMS01amk2cmk3azQwUjNSOHkxTHdRUU51YmRKcWxNMEg1Q1VoTXIzM1BTMGhxYkRtRndPaVFfVVhid1o1RmM0UVN5eTgtTlJ5YnduZ09BeDFIamJvZ055WDJON1htWXJ3VUwyYW05YklHazRsSW5ab3c5R3dOdS10NGpqOXFKaUJ0cDJOdktiaEZmWTRwYlVVdnVPZ2E3dW9yMVZabTlmWTN6RFdGUXF5Zm1ZTHdQazRMX3g3MldEckJMZWpLcEtTS1k1N1duSDB3d01hWmI4bDRIbUIwU2wwY1BRNl83WVd0OEhvNDVtU1VkTXk2NmtKQWdJYURFdTNjMWsyQUpERS1QMzN2SHFSR0UxYlNWVVhxUS12bVVsS2ttYTJNV1NXQ0NBSUozUGZrX1h2XzNxVVJYem81TjA1R3VBUkFTQ2hGcE13RTdRWjhybGpjd3RVVDZwMUxmUzMzbC15cjd0X0YyVzh1VGUyLTZZQl9EUGViZk9YX2JwT2pKbmlwU1R4c0RPZkVoRzhsaXVsZXpudTlGeHEtTGNKeDkzMXJYeGJDOTF6aHlaWkNXT0JreTNtb1UyRFdvcm53NHFHbElDR2VJMjNpSUZNZDJBTVRWdl93VjgzOTI0eFdTTnV4QkhiMFA0bEVmVkNFSE5iR3ZwWDNueG1tdGpmTEFGRDd6NDZFUHZYeVBzVWFhOVQwZnlBdVR0T2JLcUZCY2F4eVMxZm9OZDJRNXdwY2ZzaDExR0ZEdF9nLXBabGc5MHpHU291ZzdpZ1VvMXF3eEh3UXgwOUJvX2JQaTJDUDdvdktFMlRkTHlDMjFOeFhJdExkMFczbXBjS3loQ3gwal9pNXczaldmNXRhdFZCYmpkTG1JZUhCNWlrYWpGSWVMZG4tX1ItM0s1T2RLY2xLLTBFSWRVMndFU3BpY1ItNzBEUXF3SUxYUDlyeVVHVU53bnVveHNSTjY2Wk14RkpRdjRsOVJPNDVvbTZYVnZnUjRBem5jdDZUeGpYcXZSYnE1aW5rVjJ5Y2FGX0ctejdCd2RpbkwwM2ZUMmo4VmN1Tk9WTHpzbnNhNnFJZE9rSXY5M1BLcUJRMWowNFczaWJOMWR0WVp5WlRzX0ZoVzQ5dVl0TFR5NDY3b1BUMkxUcUFGLVdXWjhsYUNrWU5ScUVSV1F3RjVrc29RWjlXZTVnV1p6R1NTdTBLS3RRTlcwN1pFYnRmUUtFSUNoUnZRRGNROTFuUzhXalRXVHJXamNTcHJ5TU02RzlhdFpqZG1kUmdJVzlrbGtrcjFXNVdjSXpTc3ZTVlNPdEJsOHBEUHVoWDJuZEdET2NHQmVOcXV0ZmE5dW5pdHZvZ3loY3NodUhpVWZFTHVHdFBCT0o2cjg4eWxzWS1WekVWSTNhbTVNcDFuWEhtbVVNQlpqWnFsVURreVRJTlh0ZGRqcDM2MGpqT1Vva2d3R3dWRE5WTHg1cUJnX0VGN2tON1l6MUQ4VkdyaHZkYmxvZ05lNzh0Yk5nc2VmNlJSR0pQY1ZZZHZxUUhXSnJKazVsdkFGdDFORlAwc3BwRDVfVVBLQ0hZQm5PYXhIMUt3MTRrNUhFcVVjTUc3V0h4Z2llQlZYRWplVGo3R3N4eEJyRWFMN3ZGNVlxdl9TV2xyR0ZZUGNwdkFwaWxlbW5iOW5YLWpJTDNfTi1LQzdfRVQ5SkNOTE1YQWQtYVh3aUFFZlp0ZURoU2pwd0xoekRVR09xNDBTNnBSbTNzWGowWWozSTQ0Y1dYaHZkQjhYaUplSm1DZm5QRm15OUxKOUUzOFI1ZkpWZWV2VTZpcmpUcXJ4SlJ4bEhaQmRBX2xTQkE1MUsxanVnZ0hQUnZ2WnlrMEZkbE5memlnQ0tQSnlJN0VXMGdNVm9LUDJBeWluMXpVa1I3cWM2QktDRFZyVVRhclVNelF2WVFEcG5yRTdmSzZqNTZoYVZDV3hWMHljM2hvclRFSFVMWjVmNkFtMnJiR0JDWkM0WDN0OGtpSTJLZjNLa3F0NFV4WlZGWm96NFFjV1FhckQ0R3M1RlFfVFF4MlJZQVctRWpkSXdaemFMWWw2Rk42WWk5UkgyX3FGRm1RQk02MHFjMFd4V0tTZEdleGZwUC1ISmM5b19DUkJXNmd3bFJaQmJfaDdyRVNxVjBMTmtQN29KZzEwNDNZNUlDclJ2SVBwdndOSW5FV0tjZnNpREtYUkQ3dlAzdjlBbUkxQXlnUWxaQTd5ZXZlblhlcjM0ZmhVeS1fQWxfT080NlhUVGhjWHMwaVlzYWp5M0RJb2plMGVUOUtsaVFEQUtycWl5bHdIUURmLWpJTjYxLW9PZXBTZW5BY19zRlA0V0pXZThjVmRBX3dSUGhsVXFWcmNGeHBwcDBrMUhDeElLS2piTHZtNTJpMHRBZXNrUWw4SzQydVRlekNsSlh5SFltd2xiYVJTSEtpSUgtVmNoTm40cnpGaTFUeUdVZWN1TEN0NGRqR0VUNG9pWXNyNFI5ZlNrRUJuQ0hWcVI0Vnd5T3h6VWEtYlI3NGotUnQyWEFMNnBJWHNxTUMxVExHYlhMQ0pVQlpDbjVWZHNoSzZUSWNyN2FYVU5CcXJncy1uVHNPMEtsRlpwS3dzSnVZaHNJakZ3dFd2cFM1eDFvT2NWVEk0TW80TkxsNzZYd0t1SEVMcEdqZjRTaWlhY2w0ZlZzdEJ6dnFhUjQ5VGQybmRSTkpUMS11MlRtS0tHeXJTZkdlN0NkN2FNWHRUaTNkc3ZCUFhaNlF3QUx0M0U3Mm90RjUtZENsRnJDb05ZUVRoVHZZTTVsak5MWXhONTV4RWpqWDZuRjV0S0dJUzdiOTlsZ0g2c3hFd1dxUXZnbnEzLWpNTlV1bG9xZF9LMnJZVTZvdUlWX0NDWllXQjRnUzlBSkVqZ3U5eEJ4b2c4QVVMcm9LUVo3UFA3SEQzSnBGSDB6RVlHZVhGelpCajBKbVh2c1E5czJEVU1qYTBNNS1iaHdwd1JMclRVVUZMSFZXc0pqRXVKX0FMX2hpdHp6OEJtbE1DSy1lREdyRTVVUjhQcm02VF90YXFOZ0FHYjlXYy16ODZlTzlseExOcEJ6UkRwSlJwUXctUXlpS0xBZUtfOEN5YlotSndISS1FUnQwZHlidmVsNjVKMUZYYkFrRWd2QWRJNzNnTC1HVk1MblJjYXYzcGttdjlaVUU0Ui05akFUTGhTYnk2T1J4LUhNWVBWNDN1N09FRzZ4LTlMVmsxSWh0S25NRUxrU0lYcVI3cl9OY2hrRlB5VWJhU3pYLTFDQm1faTZQeXFKbndXeE9IOE1IUUczM1BBNGE2WG5HQnBNRU1pTFh4VGJxRWJZRmItcEEwVkJEQ19LWV9YejRkbGxscjkxay1xQ05Kd19wUzhrVV9yQXdFcTk4elF6ZElBM0tuMzYzMmRxeXNpX241R1kyb054WUR3QlozeV80SkVYamthMWlCRDdkYnF2Q0FYajJpNGl5R1QwNGdxYm1aME44ZjV1ZHNnNmZzeTNkU3JkNVNQSWNYcmoxMnJIbmJvaHdLOVZaVGUyV01MckpHX3lZZ0pqUlA4N0VqelplUmdIMGlxQUdXVEdLUnVrRDE0em1nd1Bmb2tyVVpZeFFTVjBweFRwYkRVR204enBMVVR6dl9VNTdtdC1xS0pfamI4VllmUDducTNyUFltWGRVTS1PYVlZbklmdHJwYnNDUU1wNzZtTldtSDZzNW55b1NNdWRTc2hUMS1WRE5pRmVqVzVGS3NhdzRiN1hkRXJjclVUSFB6aGQ3YmFuLUJFdmFkazdrejRpZmtkRGo3VjN5Mkl6TnRyTDlOUFpYMVllUHRyQzQ4T3hGdVVndkFLdXNrbnd2aElFTGFib0J3Uk5wUm9OcW05Qk9MaXhGXzNoMFJtXzF1RUdaaDBiTE5Bd2J6V1FQN3JkU0d1Wnd2UUNpdjVNdEswbldRX1M4R1FYWklCN3UtamRJYWx1REg0akpEZTlaaUNwalUzc04wTThwWm00MkpiY0RxSW1OaHBUR0p1S3dCX1g3cUd2dG5iWHc4S0tXMlItblBhMVBCdDVLSmJIaTBDcmcyUXFSVXZkZFFTampoWXBWMENEa2dDcmNqNGl6YkEyYWZuMlNWSGE4czV2M25MSXQ5X2ZsbENiZTZWaHZBSUU5bFk1Q2RNeXNFOHV3Qm53YVFvX2JjcHRtY1F5N2JfVEM3dFA2UW1EX1dGWlBVOXBzRlMzUjAybHNPODVGOEVrQjNwaWdSWTlFejJKSU1pZlFkYjdoMDFkcnNMaFlzc0VkdGhlS2JfamN0SVA4eF9uRzlLSS1kVkc4OFhnRG5DVWlPaXRxWWJ4MlpOY3RaUFVqckt0UXpDeGQxazV5djg1Q2NjQ2VGZ3R0RHg4Zjlta01NcEhqbjFGME9zVml4TnI4VVU0ZEdjRnZMX0FXbGlWdmU5THgtNnJMbzh5LWc5Tk8wTEFjSzdTaWRQb28ycW56U2Z1eXo0aGhpcDRSbzd2aXdvRWNzalZkZV9Zc0g2T2d2ZGh5NGdkUURLMFh0RUVKNVYtaEx4Nnk3QlJ3OWVWd3NtTjJ6cTdTU09rSHhHNjd0ZmNrWGd4QWhGa2t3WjJZdnBvdFpKQXZfMTZlYVk2Rld1RWNYNlpIN21JdE5XRjd0Z1lPcFBPdllvT09pM1lEUkZ1eTJhOGRhYXQwX3FlYUEtTlJEWkhBTWxxaDdFVTNZSjZ3czFhR2RZWTc3R2dqOTVjVnBLWGhlVFc1NmVjLWVJM2w2amEtbV9yV1doam9xc3hmcXVuMEZFUklxZW5QaWtMTEJIRG5UMVZ0Z1FrdXBVbTZRSm1DN0E2d05BRWdOYlI3a2h0TUZtR0hrQms1YTJLVjdzMEhoLXFyUmlPRlU0YnN4VEJkdWFMT2FxX2wtMjB4QXdWYjU4NlI2YzVGWDBOYTRCQWw1UlAzbDMyS0UwcXM4dXdHVzVTUmI1bmE4a205U21ReC13d2VDU2lFbWoxdXpDcGRvcEhoV1VYYnQ5cTBsSFM5QTMxd0dtT2NlZ0stclB3Z0VoZFF0RW9OM29KX0d5UU9odnYxTWxPVHVBVVJqMHpSSERtSVYxWFgtQ3ZTOThqcGl5TDZpd1pJUW9FajJ5OWtsTzlkalVtc0pBTmVWZ2ExLVNzTG5yRFhZVGJMOU5xa0JudzdXeUxHNkhubHR2QzJSQzlaN0dNeUpRLVBzWVA5T1ZuVDd6TlUtZFJPUlpwRVozUzJVbXk5RW81bS1NUmVXVUNpbTRQQ2RDbFFNblFBNFFrTGRIMzdLOXFlY2w4a2JuTG8zZS1xeVJCVXZ3NFRwMnF3UW1fbUtXSnJCZmNZeTN3dmJ5SU1CbGhBVjFiU2dJMFBVOWc0SEQyS21oNVc4VGxBdHNrSThld1NRb0NHQ3ZJeGlKQS1vNzlldWlDQzhmWUZ4VUNBZ0JtdUNOM3ZzV2xyR2pORWctaHBjOF9KVFBxcUtlRWRiOG90NU9vaU1YU1g=)
        CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmh6VUs1NXZzUmtnWHZhR1EtWFVRdUhucllQcDFjSWFhdFFFWWJONGROWmxiOFFpaG9pbmYtTTAtUF8zaHZ3TmFmeUhkZ0I5Nl82ejY3NjU5OE1tQ3l5dXkxUTE1UEdHcHd6SFdVMk80UUhVZ0dDYTQ9)
      flutter: 2.8.1
      xcode: '13.2'
      cocoapods: 1.11.2
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: master
          include: true
          source: false
      tag_patterns:
        - pattern: '*'
          include: true
    scripts:
      - flutter packages pub get
      - |
        echo $ENV | base64 --decode > $FCI_BUILD_DIR/.env
        echo $GOOGLE | base64 --decode > $FCI_BUILD_DIR/ios/Runner/output.json
        plutil -convert xml1 $FCI_BUILD_DIR/ios/Runner/output.json -o $FCI_BUILD_DIR/ios/Runner/GoogleService-info.plist
        rm $FCI_BUILD_DIR/ios/Runner/output.json
        cd ios
        rm -rf Podfile.lock
        pod install --repo-update
        flutter clean
      - find . -name "Podfile" -execdir pod install \;
      - keychain initialize
      - |
        # set up provisioning profiles
        PROFILE_PATH="$(mktemp "$HOME/Library/MobileDevice/Provisioning Profiles"/ios.mobileprovision)"
        echo "$PROVISIONING_PROFILE" | base64 --decode > "$PROFILE_PATH"
        echo "Saved provisioning profile $PROFILE_PATH"
      - |
        # set up ios signing certificate
        echo $CERTIFICATE | base64 --decode > '/tmp/certificate.p12'
        keychain add-certificates --certificate '/tmp/certificate.p12' --certificate-password $CERTIFICATE_PASSWORD
      - xcode-project use-profiles
      - flutter build ipa --export-options-plist=/Users/builder/export_options.plist
        -t lib/env/production.dart --verbose
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - '*.snap'
      - build/windows/**/*.msix
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - jstache@tutanota.com
          - mustache40@gmail.com
      firebase:
        firebase_token: $FIREBASE_TOKEN
        ios:
          app_id: 1:493864449137:ios:bf5c6cdc168866d85057d0
          groups:
            - kiatsu
      scripts:
        - "#!/usr/bin/env sh\n \nset -e   # exit on first failed command\nset -x \
          \  # print all executed commands to the log\n \nif [ \"$FCI_BUILD_STEP_STATUS\"\
          \ == \"success\" ]\nthen\n\n  # iOS Firebase App Distribution CLI\n  firebase\
          \ appdistribution:distribute $FCI_BUILD_OUTPUT_DIR/kiatsu.ipa --app 1:493864449137:ios:bf5c6cdc168866d85057d0\
          \ --groups \"kiatsu\" --token \"$FIREBASE_TOKEN\" --release-notes-file \"\
          $FCI_BUILD_DIR/release_notes.txt\"\n\nfi\n"
